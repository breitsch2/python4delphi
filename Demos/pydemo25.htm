Version:0.9
StartHTML:0000000105
EndHTML:0000022556
StartFragment:0000001053
EndFragment:0000022540
<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>mXScriptasHTML</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="generator" content="SynEdit HTML exporter" />
<style type="text/css">
<!--
body { color: #000000; background-color: #FFFFFF; }
.pas1-assembler { }
.pas1-character { color: #0066CC; text-decoration: underline; }
.pas1-comment { color: #000080; font-style: italic; }
.pas1-float { color: #00FF00; }
.pas1-hexadecimal { color: #FF00FF; }
.pas1-identifier { }
.pas1-number { color: #FF0000; }
.pas1-preprocessor { font-style: italic; }
.pas1-reservedword { color: #000080; font-weight: bold; }
.pas1-space { }
.pas1-string { color: #008080; }
.pas1-symbol { color: #FF0000; }
-->
</style>
</head>
<body>
<!--StartFragment--><pre><code><span class="pas1-reservedword">PROGRAM</span><span class="pas1-space"> SEPDemo__PythonTemplate_Puzzle_25</span><span class="pas1-symbol">;
</span><span class="pas1-comment">//https://medium.com/fintechexplained/top-python-tips-tricks-dd996b807865

</span><span class="pas1-reservedword">Const</span><span class="pas1-space"> PYHOME32 </span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-string">'C:\Users\max\AppData\Local\Programs\Python\Python36-32\'</span><span class="pas1-symbol">;</span><span class="pas1-space"> 
      PYDLL32  </span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-string">'C:\Users\max\AppData\Local\Programs\Python\Python36-32\python36.dll'</span><span class="pas1-symbol">;</span><span class="pas1-space"> 

      CHEXSTR </span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-string">'00:c9:73:e2:3b:11:01:2f:2c:62:a4:1a:74:3f:92:'</span><span class="pas1-symbol">;</span><span class="pas1-space">         
               
      HEXCONVERT </span><span class="pas1-symbol">=
</span><span class="pas1-space">      </span><span class="pas1-string">'&quot;&quot;&quot; convert hex string integer to int &quot;&quot;&quot; '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">      </span><span class="pas1-string">'def convert(n: str) -&gt; int:               '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">      </span><span class="pas1-string">'    # get rid of &quot;:&quot;, spaces and newlines '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">      </span><span class="pas1-string">'    hex = n.replace(&quot;:&quot;, &quot;&quot;).replace(&quot;\n&quot;,&quot;&quot;).replace(&quot; &quot;,&quot;&quot;)'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">      </span><span class="pas1-string">'    return int(hex,16)'</span><span class="pas1-symbol">;</span><span class="pas1-space">     
      
</span><span class="pas1-reservedword">var</span><span class="pas1-space"> bufs</span><span class="pas1-symbol">,</span><span class="pas1-space"> tabstr</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;</span><span class="pas1-space">               
</span><span class="pas1-reservedword">Begin</span><span class="pas1-space">  </span><span class="pas1-comment">//@Main
</span><span class="pas1-space">  </span><span class="pas1-reservedword">maxform1</span><span class="pas1-symbol">.</span><span class="pas1-identifier">console1click</span><span class="pas1-symbol">(</span><span class="pas1-identifier">self</span><span class="pas1-symbol">)
</span><span class="pas1-space">  </span><span class="pas1-reservedword">memo2</span><span class="pas1-symbol">.</span><span class="pas1-identifier">height</span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-number">200;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">memo2</span><span class="pas1-symbol">.</span><span class="pas1-identifier">font</span><span class="pas1-symbol">.</span><span class="pas1-identifier">name</span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-string">'Courier'</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">with</span><span class="pas1-space"> TPythonEngine</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Create</span><span class="pas1-symbol">(</span><span class="pas1-reservedword">Nil</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    pythonhome</span><span class="pas1-symbol">:=</span><span class="pas1-space"> PYHOME32</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">try
</span><span class="pas1-space">     opendll</span><span class="pas1-symbol">(</span><span class="pas1-identifier">PYDLL32</span><span class="pas1-symbol">)
</span><span class="pas1-space">      Println</span><span class="pas1-symbol">(</span><span class="pas1-string">'Colab Platform: '</span><span class="pas1-symbol">+</span><span class="pas1-space"> 
          EvalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'__import__(&quot;platform&quot;).platform()'</span><span class="pas1-symbol">));</span><span class="pas1-space"> 
     Println</span><span class="pas1-symbol">(</span><span class="pas1-string">'DIR Check: '</span><span class="pas1-symbol">+</span><span class="pas1-space"> 
     EvalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'__import__(&quot;subprocess&quot;).check_output(&quot;dir&quot;,shell=True).strip().decode()'</span><span class="pas1-symbol">));
</span><span class="pas1-space">     </span><span class="pas1-comment">//1. Unpacking Array Items
</span><span class="pas1-space">     ExecString</span><span class="pas1-symbol">(</span><span class="pas1-string">'first_name, last_name = [&quot;Farhad&quot;, &quot;Malik&quot;]'</span><span class="pas1-symbol">);
</span><span class="pas1-space">     Println</span><span class="pas1-symbol">(</span><span class="pas1-string">'Unpacking Array: '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">EvalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'first_name, last_name'</span><span class="pas1-symbol">));
</span><span class="pas1-space">     </span><span class="pas1-comment">//2. Swapping Variables
</span><span class="pas1-space">     ExecString</span><span class="pas1-symbol">(</span><span class="pas1-string">'last_name, first_name = first_name, last_name'</span><span class="pas1-symbol">);
</span><span class="pas1-space">     Println</span><span class="pas1-symbol">(</span><span class="pas1-string">'Swapping Variables: '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">EvalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'first_name, last_name'</span><span class="pas1-symbol">));
</span><span class="pas1-space">     </span><span class="pas1-comment">//4. Repeat String
</span><span class="pas1-space">     Println</span><span class="pas1-symbol">(</span><span class="pas1-string">'Repeat String: '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">EvalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'&quot;A&quot;*3'</span><span class="pas1-symbol">));
</span><span class="pas1-space">     </span><span class="pas1-comment">//5. Slicing
</span><span class="pas1-space">     ExecString</span><span class="pas1-symbol">(</span><span class="pas1-string">'y = &quot;Abc&quot;'</span><span class="pas1-symbol">);
</span><span class="pas1-space">     Println</span><span class="pas1-symbol">(</span><span class="pas1-string">'5. Slicing: '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">EvalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'y[:2], y[1:], y[:-2], y[-2:]'</span><span class="pas1-symbol">));
</span><span class="pas1-space">     ExecString</span><span class="pas1-symbol">(</span><span class="pas1-string">'x = &quot;abc&quot;'</span><span class="pas1-symbol">);
</span><span class="pas1-space">     Println</span><span class="pas1-symbol">(</span><span class="pas1-string">'6. Reversing: '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">EvalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'x[::-1]'</span><span class="pas1-symbol">));
</span><span class="pas1-space">     Println</span><span class="pas1-symbol">(</span><span class="pas1-string">'6. Reversing: '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">EvalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'&quot;abc&quot;[::-1]'</span><span class="pas1-symbol">));
</span><span class="pas1-space">     Println</span><span class="pas1-symbol">(</span><span class="pas1-string">'7. Negative Index: '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">EvalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'&quot;abc&quot;[-1]'</span><span class="pas1-symbol">));
</span><span class="pas1-space">     Println</span><span class="pas1-symbol">(</span><span class="pas1-string">'8. Intersect Sets: '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">EvalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'{1,2,3}.intersection({3,4,5})'</span><span class="pas1-symbol">));
</span><span class="pas1-space">     Println</span><span class="pas1-symbol">(</span><span class="pas1-string">'9. Difference In Sets: '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">EvalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'{1,2,3}.difference({3,4,5})'</span><span class="pas1-symbol">));
</span><span class="pas1-space">     Println</span><span class="pas1-symbol">(</span><span class="pas1-string">'10. Union Of Collections: '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">EvalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'{1,2,3}.union({3,4,5})'</span><span class="pas1-symbol">));
</span><span class="pas1-space">     ExecString</span><span class="pas1-symbol">(</span><span class="pas1-string">'def my_new_function(my_value=&quot;hello&quot;):'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">                </span><span class="pas1-string">'  return my_value'</span><span class="pas1-symbol">);
</span><span class="pas1-space">     Println</span><span class="pas1-symbol">(</span><span class="pas1-string">'11. Optional Arguments: '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">EvalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'my_new_function()'</span><span class="pas1-symbol">));
</span><span class="pas1-space">     Println</span><span class="pas1-symbol">(</span><span class="pas1-string">'11. Optional Arguments: '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">EvalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'my_new_function(&quot;test&quot;)'</span><span class="pas1-symbol">));
</span><span class="pas1-space">     
     ExecString</span><span class="pas1-symbol">(</span><span class="pas1-string">'l=[]'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+</span><span class="pas1-string">'def myfunc(*arguments):'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">                </span><span class="pas1-string">'  for a in arguments:            '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">                </span><span class="pas1-string">'    l.append(a)                  '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">                </span><span class="pas1-string">'  return l                       '</span><span class="pas1-space">  </span><span class="pas1-symbol">);
</span><span class="pas1-space">     Println</span><span class="pas1-symbol">(</span><span class="pas1-string">'12. Unknown Arguments Using *arguments: '</span><span class="pas1-symbol">+
</span><span class="pas1-space">                  EvalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'myfunc(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;)'</span><span class="pas1-symbol">));
</span><span class="pas1-space">                  
     ExecString</span><span class="pas1-symbol">(</span><span class="pas1-string">'def myfunc2(**arguments):'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">                </span><span class="pas1-string">'  return arguments[&quot;city&quot;]'</span><span class="pas1-symbol">);
</span><span class="pas1-space">     ExecString</span><span class="pas1-symbol">(</span><span class="pas1-string">'ddata={&quot;school&quot;:&quot;DAV&quot;,&quot;standard&quot;:&quot;7&quot;,&quot;city&quot;: &quot;Delphi&quot;}'</span><span class="pas1-symbol">);
</span><span class="pas1-space">     Println</span><span class="pas1-symbol">(</span><span class="pas1-string">'13. Dictionary As Arguments Using **arguments '</span><span class="pas1-symbol">+
</span><span class="pas1-space">                  EvalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'myfunc2(**ddata)'</span><span class="pas1-symbol">));</span><span class="pas1-space">  
                                        
     Println</span><span class="pas1-symbol">(</span><span class="pas1-string">'20. Joining Collection: '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">EvalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'&quot; &quot;.join([&quot;FinTech&quot;, &quot;Explained&quot;])'</span><span class="pas1-symbol">));</span><span class="pas1-space">  
     Println</span><span class="pas1-symbol">(</span><span class="pas1-string">'21. Memory Footprint Of An Object: '</span><span class="pas1-symbol">+
</span><span class="pas1-space">                  EvalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'__import__(&quot;sys&quot;).getsizeof(&quot;farhadmalik&quot;)'</span><span class="pas1-symbol">));</span><span class="pas1-space">  
     Println</span><span class="pas1-symbol">(</span><span class="pas1-string">'22. Print Current Directory: '</span><span class="pas1-symbol">+
</span><span class="pas1-space">                  EvalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'__import__(&quot;os&quot;).getcwd()'</span><span class="pas1-symbol">));
</span><span class="pas1-space">     
     ExecString</span><span class="pas1-symbol">(</span><span class="pas1-string">'import sys'</span><span class="pas1-symbol">);</span><span class="pas1-space"> 
     Println</span><span class="pas1-symbol">(</span><span class="pas1-string">'23. Print Imported Modules: '</span><span class="pas1-symbol">+</span><span class="pas1-space">  
                  EvalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'[m.__name__ for m in sys.modules.values() if m]'</span><span class="pas1-symbol">));
</span><span class="pas1-space">     Println</span><span class="pas1-symbol">(</span><span class="pas1-string">'24. Get Current Process Id: '</span><span class="pas1-symbol">+
</span><span class="pas1-space">                  EvalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'__import__(&quot;os&quot;).getpid()'</span><span class="pas1-symbol">));</span><span class="pas1-space"> 
                  
     ExecString</span><span class="pas1-symbol">(</span><span class="pas1-string">'data={&quot;Name&quot;: &quot;Roger&quot;,&quot;Pin&quot;: 3056,&quot;ActNo&quot;:9892345112234565}'</span><span class="pas1-symbol">);
</span><span class="pas1-space">     Println</span><span class="pas1-symbol">(</span><span class="pas1-string">'25. FrozenSet: '</span><span class="pas1-symbol">+
</span><span class="pas1-space">                  EvalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'frozenset(data)'</span><span class="pas1-symbol">));</span><span class="pas1-space">   
     ExecString</span><span class="pas1-symbol">(</span><span class="pas1-string">'with open(&quot;pydata.txt&quot;,&quot;w&quot;) as f:'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+</span><span class="pas1-string">' f.write(&quot;HelloPy2&quot;)'</span><span class="pas1-symbol">);
</span><span class="pas1-space">     openfile</span><span class="pas1-symbol">(</span><span class="pas1-identifier">exepath</span><span class="pas1-symbol">+</span><span class="pas1-string">'pydata.txt'</span><span class="pas1-symbol">);</span><span class="pas1-space"> 
     ExecString</span><span class="pas1-symbol">(</span><span class="pas1-string">'num_list = [21,13,19,3,11,5,18]'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+</span><span class="pas1-string">'num_list.sort()'</span><span class="pas1-symbol">);</span><span class="pas1-space"> 
     Println</span><span class="pas1-symbol">(</span><span class="pas1-string">'26. Median Skill Test: '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">EvalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'num_list[len(num_list)//2]'</span><span class="pas1-symbol">));
</span><span class="pas1-space">     ExecString</span><span class="pas1-symbol">(</span><span class="pas1-string">'import math'</span><span class="pas1-symbol">);</span><span class="pas1-space"> 
     Println</span><span class="pas1-symbol">(</span><span class="pas1-string">'27. map() function Area Test: '</span><span class="pas1-symbol">+
</span><span class="pas1-space">           EvalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'list(map(lambda x: round(math.pi*(x**2),2), [1,2,3]))'</span><span class="pas1-symbol">));</span><span class="pas1-space">  
    </span><span class="pas1-reservedword">except
</span><span class="pas1-space">      raiseError</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">finally</span><span class="pas1-space">                         
      Free</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;</span><span class="pas1-space"> 
    Writeln</span><span class="pas1-symbol">(</span><span class="pas1-string">'Demo01	A simple Python evaluator Gauss evaluator '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">CRLF</span><span class="pas1-symbol">+
</span><span class="pas1-space">   </span><span class="pas1-string">'Demo02	Evaluate expression with ExecSynCheck1 and Strlist '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">CRLF</span><span class="pas1-symbol">+
</span><span class="pas1-space">   </span><span class="pas1-string">'http://www.softwareschule.ch/examples/pydemo2.txt          '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">CRLF</span><span class="pas1-symbol">+
</span><span class="pas1-space">   </span><span class="pas1-string">'http://www.softwareschule.ch/examples/pydemo2.htm          '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">CRLF</span><span class="pas1-symbol">+
</span><span class="pas1-space">   </span><span class="pas1-string">'Demo03	15-powerful-python-one-liners PYLaz_P4D_Demo2      '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">CRLF</span><span class="pas1-symbol">+
</span><span class="pas1-space">   </span><span class="pas1-string">'Demo04	Eval_IOEvents (advanced case) Demo3 PYLaz_P4D_Demo2'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">CRLF</span><span class="pas1-symbol">+
</span><span class="pas1-space">   </span><span class="pas1-string">'Demo05	Defining a mX4_Python Template                     '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">CRLF</span><span class="pas1-symbol">+
</span><span class="pas1-space">   </span><span class="pas1-string">'Demo06	Defining a Python Template_PyCryptoDome_Bitcoin    '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">CRLF</span><span class="pas1-symbol">+
</span><span class="pas1-space">   </span><span class="pas1-string">'Demo07	Using Translator with Subprocess()                 '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">CRLF</span><span class="pas1-symbol">+
</span><span class="pas1-space">   </span><span class="pas1-string">'Demo25	this finteche expalained Demo                      '</span><span class="pas1-symbol">);
</span><span class="pas1-reservedword">End</span><span class="pas1-symbol">.

</span><span class="pas1-comment">//https://medium.com/pythoneers/10-important-python-questions-you-should-know-ed42b4104185
//https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/blob/master/python/python-quiz.md  

</span><span class="pas1-space">        
       





        
   
   
      
   
</span></code></pre><!--EndFragment--></body>
</html>