Version:0.9
StartHTML:0000000105
EndHTML:0000016123
StartFragment:0000001053
EndFragment:0000016107
<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>mXScriptasHTML</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="generator" content="SynEdit HTML exporter" />
<style type="text/css">
<!--
body { color: #000000; background-color: #FFFFFF; }
.pas1-assembler { }
.pas1-character { color: #0066CC; text-decoration: underline; }
.pas1-comment { color: #000080; font-style: italic; }
.pas1-float { color: #FF6347; }
.pas1-hexadecimal { color: #FF00FF; }
.pas1-identifier { }
.pas1-number { color: #FF0000; }
.pas1-preprocessor { font-style: italic; }
.pas1-reservedword { color: #000000; font-weight: bold; }
.pas1-space { }
.pas1-string { color: #008080; }
.pas1-symbol { color: #800080; }
-->
</style>
</head>
<body>
<!--StartFragment--><pre><code><span class="pas1-reservedword">PROGRAM</span><span class="pas1-space"> SEPDemo_App_mX4_PythonTemplate_ImportModule</span><span class="pas1-symbol">;
</span><span class="pas1-comment">//https://realpython.com/python-json/
{Purpose: import a module with execstring(). get PyModule first!}

//&lt;Constant declarations&gt; 
//Please check providers list below:['mymemory', 'microsoft', 'deepl', 'libre'].
{TYPE &lt;Type declarations&gt; Pascal-Delphi-Python-Json-OLEAutomation}</span><span class="pas1-space"> 

</span><span class="pas1-reservedword">Const</span><span class="pas1-space"> PYHOME32 </span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-string">'C:\Users\max\AppData\Local\Programs\Python\Python36-32\'</span><span class="pas1-symbol">;</span><span class="pas1-space"> 
      PYDLL32  </span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-string">'C:\Users\max\AppData\Local\Programs\Python\Python36-32\python36.dll'</span><span class="pas1-symbol">;</span><span class="pas1-space"> 

</span><span class="pas1-reservedword">Var</span><span class="pas1-space"> 
</span><span class="pas1-comment">//&lt;Variable declarations&gt;
</span><span class="pas1-space">  eg</span><span class="pas1-symbol">:</span><span class="pas1-space"> TPythonEngine</span><span class="pas1-symbol">;
</span><span class="pas1-space">  pyModule</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">Const</span><span class="pas1-space"> PYMODFILE </span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-string">'C:\maXbox\mX47464\maxbox4\examples\1062_utils.py'</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">Const</span><span class="pas1-space"> PYBC </span><span class="pas1-symbol">=</span><span class="pas1-space">  </span><span class="pas1-string">'from bitcoin import *'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">              </span><span class="pas1-string">'my_private_key = random_key()'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">              </span><span class="pas1-string">'my_public_key = privtopub(my_private_key)'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">              </span><span class="pas1-string">'my_bitcoin_addr = pubtoaddr(my_public_key)'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">              </span><span class="pas1-string">'print(my_bitcoin_addr)'</span><span class="pas1-symbol">;
</span><span class="pas1-space">              
</span><span class="pas1-reservedword">Const</span><span class="pas1-space"> USERAGENT </span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-string">'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.17 '</span><span class="pas1-symbol">+
</span><span class="pas1-space">                  </span><span class="pas1-string">'(KHTML, maXbox4) Chrome/24.0.1312.27 Safari/537.17'</span><span class="pas1-symbol">;</span><span class="pas1-space"> 

</span><span class="pas1-reservedword">Const</span><span class="pas1-space"> REXDEF</span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-string">'def striphtml(data):      '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">               </span><span class="pas1-string">'  p = re.compile(r&quot;&lt;.*?&gt;&quot;)'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">               </span><span class="pas1-string">'  return p.sub(&quot;&quot;, data)  '</span><span class="pas1-symbol">;</span><span class="pas1-space">  
               
</span><span class="pas1-comment">//https://gist.github.com/lkdocs/6519378               
</span><span class="pas1-reservedword">Const</span><span class="pas1-space"> DEF_RSAKEYS</span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-string">'def generate_RSA(bits=2048): '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">          </span><span class="pas1-string">'  '''''</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">          </span><span class="pas1-comment">//'  Generates RSA keypair with exponent of 65537 in PEM format'+LF+
</span><span class="pas1-space">          </span><span class="pas1-comment">//'  param: bits The key length in bits '+LF+
</span><span class="pas1-space">          </span><span class="pas1-comment">//'  return: private key and public key '+LF+
</span><span class="pas1-space">          </span><span class="pas1-string">'  '''''</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">          </span><span class="pas1-string">'  from Crypto.PublicKey import RSA '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">          </span><span class="pas1-string">'  new_key = RSA.generate(bits, e=65537)'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+</span><span class="pas1-space"> 
          </span><span class="pas1-string">'  public_key = new_key.publickey().exportKey(&quot;PEM&quot;)'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+</span><span class="pas1-space"> 
          </span><span class="pas1-string">'  private_key = new_key.exportKey(&quot;PEM&quot;)'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+</span><span class="pas1-space"> 
          </span><span class="pas1-string">'  return private_key, public_key'</span><span class="pas1-symbol">;
</span><span class="pas1-space">               
</span><span class="pas1-reservedword">Begin</span><span class="pas1-space">  </span><span class="pas1-comment">//@Main
//&lt;Executable statements&gt;
//https://www.amazon.com/Patterns-konkret-Max-Kleiner/dp/3935042469
{ ISBN-10 ? : 3935042469  ISBN-13 ? : 978-3935042468}</span><span class="pas1-space"> 

  eg</span><span class="pas1-symbol">:=</span><span class="pas1-space"> TPythonEngine</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Create</span><span class="pas1-symbol">(</span><span class="pas1-reservedword">Nil</span><span class="pas1-symbol">);
</span><span class="pas1-space">  eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">pythonhome</span><span class="pas1-symbol">:=</span><span class="pas1-space"> PYHOME32</span><span class="pas1-symbol">;
</span><span class="pas1-space">  eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">opendll</span><span class="pas1-symbol">(</span><span class="pas1-identifier">PYDLL32</span><span class="pas1-symbol">)
</span><span class="pas1-space">  </span><span class="pas1-reservedword">try
</span><span class="pas1-space">    eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Execstring</span><span class="pas1-symbol">(</span><span class="pas1-string">'import base64'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+</span><span class="pas1-string">'import urllib.parse, re'</span><span class="pas1-symbol">);
</span><span class="pas1-space">    eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Execstring</span><span class="pas1-symbol">(</span><span class="pas1-identifier">REXDEF</span><span class="pas1-symbol">);
</span><span class="pas1-space">    
    </span><span class="pas1-reservedword">if</span><span class="pas1-space"> fileExists</span><span class="pas1-symbol">(</span><span class="pas1-identifier">PYMODFILE</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">      pymodule</span><span class="pas1-symbol">:=</span><span class="pas1-space"> LoadStringJ</span><span class="pas1-symbol">(</span><span class="pas1-identifier">PYMODFILE</span><span class="pas1-symbol">);
</span><span class="pas1-space">      println</span><span class="pas1-symbol">(</span><span class="pas1-identifier">UTF8toAnsi</span><span class="pas1-symbol">(</span><span class="pas1-identifier">pymodule</span><span class="pas1-symbol">)+</span><span class="pas1-identifier">CRLF</span><span class="pas1-symbol">)
</span><span class="pas1-space">      eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Execstring</span><span class="pas1-symbol">(</span><span class="pas1-identifier">pymodule</span><span class="pas1-symbol">);
</span><span class="pas1-space">      </span><span class="pas1-comment">//Exception: &lt;class 'ValueError'&gt;: invalid literal for int() with base 10: '2021-04'.
</span><span class="pas1-space">      println</span><span class="pas1-symbol">(</span><span class="pas1-string">'get module func: '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">evalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'quarterlyDateParser(&quot;2021-Q4&quot;)'</span><span class="pas1-symbol">));
</span><span class="pas1-space">      println</span><span class="pas1-symbol">(</span><span class="pas1-string">'get module func: '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">evalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'monthlyDateParser(&quot;2021-09&quot;)'</span><span class="pas1-symbol">));
</span><span class="pas1-space">    </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">   
    println</span><span class="pas1-symbol">(</span><span class="pas1-identifier">eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">evalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'striphtml(str(base64.b64decode(&quot;2e8WuEr0+5nc14VBxQrOl4ob6guOTySr&quot;)))'</span><span class="pas1-symbol">));
</span><span class="pas1-space">    
    </span><span class="pas1-comment">//# Get maximum number of complete TODOs.
</span><span class="pas1-space">    </span><span class="pas1-comment">//println('user_max_complete = '+eng.evalStr('top_users[0][1]')); 
</span><span class="pas1-space">  </span><span class="pas1-reservedword">except
</span><span class="pas1-space">    eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">raiseError</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">finally
</span><span class="pas1-space">    eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Free</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;</span><span class="pas1-space">  
</span><span class="pas1-comment">//&lt;Definitions&gt;  
</span><span class="pas1-reservedword">End</span><span class="pas1-symbol">.</span><span class="pas1-space"> 

</span><span class="pas1-reservedword">Ref</span><span class="pas1-symbol">:</span><span class="pas1-space">  https</span><span class="pas1-symbol">:</span><span class="pas1-comment">//www.sonarqube.org/features/multi-languages/python/

</span><span class="pas1-identifier">Install a </span><span class="pas1-number">32</span><span class="pas1-symbol">-</span><span class="pas1-identifier">bit </span><span class="pas1-reservedword">package</span><span class="pas1-space"> </span><span class="pas1-reservedword">with</span><span class="pas1-space"> a </span><span class="pas1-number">64</span><span class="pas1-space"> pip installer </span><span class="pas1-symbol">-</span><span class="pas1-identifier">t </span><span class="pas1-symbol">(</span><span class="pas1-identifier">Target</span><span class="pas1-symbol">)
</span><span class="pas1-identifier">C</span><span class="pas1-symbol">:\</span><span class="pas1-identifier">Users</span><span class="pas1-symbol">\</span><span class="pas1-identifier">max</span><span class="pas1-symbol">\</span><span class="pas1-identifier">AppData</span><span class="pas1-symbol">\</span><span class="pas1-identifier">Local</span><span class="pas1-symbol">\</span><span class="pas1-identifier">Programs</span><span class="pas1-symbol">\</span><span class="pas1-identifier">Python</span><span class="pas1-symbol">\</span><span class="pas1-identifier">Python36</span><span class="pas1-symbol">-</span><span class="pas1-number">32</span><span class="pas1-symbol">&gt;</span><span class="pas1-identifier">pip3 install </span><span class="pas1-symbol">-</span><span class="pas1-identifier">t C</span><span class="pas1-symbol">:\</span><span class="pas1-identifier">Users</span><span class="pas1-symbol">\
</span><span class="pas1-identifier">max</span><span class="pas1-symbol">\</span><span class="pas1-identifier">AppData</span><span class="pas1-symbol">\</span><span class="pas1-identifier">Local</span><span class="pas1-symbol">\</span><span class="pas1-identifier">Programs</span><span class="pas1-symbol">\</span><span class="pas1-identifier">Python</span><span class="pas1-symbol">\</span><span class="pas1-identifier">Python36</span><span class="pas1-symbol">-</span><span class="pas1-number">32</span><span class="pas1-symbol">\</span><span class="pas1-identifier">Lib bitcoin
 
</span><span class="pas1-symbol">----</span><span class="pas1-identifier">app_template_loaded_code</span><span class="pas1-symbol">----
----</span><span class="pas1-reservedword">File</span><span class="pas1-space"> newtemplate</span><span class="pas1-symbol">.</span><span class="pas1-identifier">txt </span><span class="pas1-reservedword">not</span><span class="pas1-space"> exists </span><span class="pas1-symbol">-</span><span class="pas1-space"> now saved</span><span class="pas1-symbol">!----


</span><span class="pas1-space">       
   
   
</span></code></pre><!--EndFragment--></body>
</html>