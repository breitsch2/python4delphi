Version:0.9
StartHTML:0000000105
EndHTML:0000039732
StartFragment:0000001053
EndFragment:0000039716
<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>mXScriptasHTML</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="generator" content="SynEdit HTML exporter" />
<style type="text/css">
<!--
body { color: #000000; background-color: #FFFFFF; }
.pas1-assembler { }
.pas1-character { color: #0066CC; text-decoration: underline; }
.pas1-comment { color: #000080; font-style: italic; }
.pas1-float { color: #00FF00; }
.pas1-hexadecimal { color: #FF00FF; }
.pas1-identifier { }
.pas1-number { color: #FF0000; }
.pas1-preprocessor { font-style: italic; }
.pas1-reservedword { color: #000080; font-weight: bold; }
.pas1-space { }
.pas1-string { color: #008080; }
.pas1-symbol { color: #FF0000; }
-->
</style>
</head>
<body>
<!--StartFragment--><pre><code><span class="pas1-reservedword">PROGRAM</span><span class="pas1-space"> SEPDemo_App_mX4_Python_Cheat_Sheet5</span><span class="pas1-symbol">;
</span><span class="pas1-comment">//Python Cheat Sheet: Functions and Tricks
//http://www.softwareschule.ch/examples/cheatsheetpython.pdf
//https://realpython.com/python-json/
//https://wiki.freepascal.org/Developing_Python_Modules_with_Pascal#Minimum_Python_API
{Purpose: Python Cheat Sheet: Functions and Tricks. }

//&lt;Constant declarations&gt; 
//Please check providers list below:['mymemory', 'microsoft', 'deepl', 'libre'].
{TYPE &lt;Type declarations&gt; Pascal-Delphi-Python-Json-OLEAutomation}</span><span class="pas1-space"> 

</span><span class="pas1-reservedword">Const</span><span class="pas1-space"> PYHOME32 </span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-string">'C:\Users\max\AppData\Local\Programs\Python\Python36-32\'</span><span class="pas1-symbol">;</span><span class="pas1-space"> 
      PYDLL32  </span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-string">'C:\Users\max\AppData\Local\Programs\Python\Python36-32\python36.dll'</span><span class="pas1-symbol">;</span><span class="pas1-space"> 

</span><span class="pas1-reservedword">Var</span><span class="pas1-space">  </span><span class="pas1-comment">//&lt;Variable declarations&gt;
</span><span class="pas1-space">  i</span><span class="pas1-symbol">:</span><span class="pas1-space"> integer</span><span class="pas1-symbol">;</span><span class="pas1-space"> eg</span><span class="pas1-symbol">:</span><span class="pas1-space"> TPythonEngine</span><span class="pas1-symbol">;

</span><span class="pas1-comment">//&lt;FUNCTION&gt; //&lt;PROCEDURE&gt; 
//Generate public key and private key

</span><span class="pas1-reservedword">Const</span><span class="pas1-space"> PYBC </span><span class="pas1-symbol">=</span><span class="pas1-space">  </span><span class="pas1-string">'from bitcoin import *'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">              </span><span class="pas1-string">'my_private_key = random_key()'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">              </span><span class="pas1-string">'my_public_key = privtopub(my_private_key)'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">              </span><span class="pas1-string">'my_bitcoin_addr = pubtoaddr(my_public_key)'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">              </span><span class="pas1-string">'print(my_bitcoin_addr)'</span><span class="pas1-symbol">;
</span><span class="pas1-space">              
</span><span class="pas1-reservedword">Const</span><span class="pas1-space"> USERAGENT </span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-string">'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.17 '</span><span class="pas1-symbol">+
</span><span class="pas1-space">                  </span><span class="pas1-string">'(KHTML, maXbox4) Chrome/24.0.1312.27 Safari/537.17'</span><span class="pas1-symbol">;</span><span class="pas1-space"> 

</span><span class="pas1-reservedword">Const</span><span class="pas1-space"> WEBURL</span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-string">'https://jsonplaceholder.typicode.com/todos'</span><span class="pas1-symbol">;</span><span class="pas1-space"> 

</span><span class="pas1-reservedword">Const</span><span class="pas1-space"> REXDEF</span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-string">'def striphtml(data):      '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">               </span><span class="pas1-string">'  p = re.compile(r&quot;&lt;.*?&gt;&quot;)'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">               </span><span class="pas1-string">'  return p.sub(&quot;&quot;, data)  '</span><span class="pas1-symbol">;</span><span class="pas1-space">  
               
</span><span class="pas1-comment">//https://gist.github.com/lkdocs/6519378               
</span><span class="pas1-reservedword">Const</span><span class="pas1-space"> DEF_RSAKEYS</span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-string">'def generate_RSA(bits=2048): '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">          </span><span class="pas1-string">'  '''''</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">          </span><span class="pas1-comment">//'  Generate an RSA keypair with exponent of 65537 in PEM format'+LF+
</span><span class="pas1-space">          </span><span class="pas1-comment">//'  param: bits The key length in bits '+LF+
</span><span class="pas1-space">          </span><span class="pas1-comment">//'  Return private key and public key '+LF+
</span><span class="pas1-space">          </span><span class="pas1-string">'  '''''</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">          </span><span class="pas1-string">'  from Crypto.PublicKey import RSA '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">          </span><span class="pas1-string">'  new_key = RSA.generate(bits, e=65537)'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+</span><span class="pas1-space"> 
          </span><span class="pas1-string">'  public_key = new_key.publickey().exportKey(&quot;PEM&quot;)'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+</span><span class="pas1-space"> 
          </span><span class="pas1-string">'  private_key = new_key.exportKey(&quot;PEM&quot;)'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+</span><span class="pas1-space"> 
          </span><span class="pas1-string">'  return private_key, public_key'</span><span class="pas1-symbol">;
</span><span class="pas1-space">               
</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> GetJSONData</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">var</span><span class="pas1-space">  XMLhttp</span><span class="pas1-symbol">:</span><span class="pas1-space"> OleVariant</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-comment">// As Object Automation
</span><span class="pas1-space">     ajt</span><span class="pas1-symbol">:</span><span class="pas1-space"> TJson</span><span class="pas1-symbol">;</span><span class="pas1-space"> JObj</span><span class="pas1-symbol">:</span><span class="pas1-space"> TJsonObject2</span><span class="pas1-symbol">;</span><span class="pas1-space"> JArray</span><span class="pas1-symbol">:</span><span class="pas1-space"> TJsonArray2</span><span class="pas1-symbol">;
</span><span class="pas1-space">     response</span><span class="pas1-symbol">,</span><span class="pas1-identifier">statuscode</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;</span><span class="pas1-space"> cnt</span><span class="pas1-symbol">:</span><span class="pas1-space"> integer</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">begin</span><span class="pas1-space">  
  XMLhttp</span><span class="pas1-symbol">:=</span><span class="pas1-space"> CreateOleObject</span><span class="pas1-symbol">(</span><span class="pas1-string">'msxml2.xmlhttp'</span><span class="pas1-symbol">)</span><span class="pas1-space">      
  XMLhttp</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Open</span><span class="pas1-symbol">(</span><span class="pas1-string">'GET'</span><span class="pas1-symbol">,</span><span class="pas1-space"> WEBURL</span><span class="pas1-symbol">,</span><span class="pas1-space"> False</span><span class="pas1-symbol">)</span><span class="pas1-space">   </span><span class="pas1-comment">//False is async
</span><span class="pas1-space">  </span><span class="pas1-comment">//XMLhttp.setRequestHeader('Content-Type','application/x-www-form-urlencoded');
</span><span class="pas1-space">  XMLhttp</span><span class="pas1-symbol">.</span><span class="pas1-identifier">setRequestHeader</span><span class="pas1-symbol">(</span><span class="pas1-string">'Content-Type'</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-string">'application/json; charset=utf-8'</span><span class="pas1-symbol">);
</span><span class="pas1-space">  XMLhttp</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Send</span><span class="pas1-symbol">();
</span><span class="pas1-space">  response</span><span class="pas1-symbol">:=</span><span class="pas1-space"> XMLhttp</span><span class="pas1-symbol">.</span><span class="pas1-identifier">responseText</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-comment">//assign the data
</span><span class="pas1-space">  statuscode</span><span class="pas1-symbol">:=</span><span class="pas1-space"> XMLhttp</span><span class="pas1-symbol">.</span><span class="pas1-identifier">status</span><span class="pas1-symbol">;</span><span class="pas1-space"> 
  </span><span class="pas1-comment">//writeln(statuscode +CRLF+ response)
</span><span class="pas1-space">  ajt</span><span class="pas1-symbol">:=</span><span class="pas1-space"> TJson</span><span class="pas1-symbol">.</span><span class="pas1-identifier">create</span><span class="pas1-symbol">();</span><span class="pas1-space"> 
  </span><span class="pas1-reservedword">try
</span><span class="pas1-space">    ajt</span><span class="pas1-symbol">.</span><span class="pas1-identifier">parse</span><span class="pas1-symbol">(</span><span class="pas1-identifier">response</span><span class="pas1-symbol">);
</span><span class="pas1-space">  </span><span class="pas1-reservedword">except
</span><span class="pas1-space">    writeln</span><span class="pas1-symbol">(</span><span class="pas1-space"> </span><span class="pas1-string">'Exception: &lt;TJsonClass&gt;&quot;&quot; parse error: {'</span><span class="pas1-symbol">+
</span><span class="pas1-space">                  exceptiontostring</span><span class="pas1-symbol">(</span><span class="pas1-identifier">exceptiontype</span><span class="pas1-symbol">,</span><span class="pas1-space"> exceptionparam</span><span class="pas1-symbol">))</span><span class="pas1-space"> 
  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;</span><span class="pas1-space"> 
  JArray</span><span class="pas1-symbol">:=</span><span class="pas1-space"> ajt</span><span class="pas1-symbol">.</span><span class="pas1-identifier">JsonArray</span><span class="pas1-symbol">;
</span><span class="pas1-space">  writeln</span><span class="pas1-symbol">(</span><span class="pas1-string">'Get all Titles: '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">itoa</span><span class="pas1-symbol">(</span><span class="pas1-identifier">jarray</span><span class="pas1-symbol">.</span><span class="pas1-identifier">count</span><span class="pas1-symbol">));</span><span class="pas1-space">     
  </span><span class="pas1-reservedword">for</span><span class="pas1-space"> cnt</span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-number">0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> jarray</span><span class="pas1-symbol">.</span><span class="pas1-identifier">count</span><span class="pas1-symbol">-1</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">    writeln</span><span class="pas1-symbol">(</span><span class="pas1-identifier">itoa</span><span class="pas1-symbol">(</span><span class="pas1-identifier">cnt</span><span class="pas1-symbol">)+</span><span class="pas1-string">' '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">Jarray</span><span class="pas1-symbol">.</span><span class="pas1-identifier">items</span><span class="pas1-symbol">[</span><span class="pas1-identifier">cnt</span><span class="pas1-symbol">].</span><span class="pas1-identifier">asObject</span><span class="pas1-symbol">.</span><span class="pas1-identifier">values</span><span class="pas1-symbol">[</span><span class="pas1-string">'title'</span><span class="pas1-symbol">].</span><span class="pas1-identifier">asString</span><span class="pas1-symbol">);</span><span class="pas1-space">   
  ajt</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Free</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">Begin</span><span class="pas1-space">  </span><span class="pas1-comment">//@Main
//&lt;Executable statements&gt;
//https://www.amazon.com/Patterns-konkret-Max-Kleiner/dp/3935042469
{ ISBN-10 ? : 3935042469  ISBN-13 ? : 978-3935042468}</span><span class="pas1-space"> 

  eg</span><span class="pas1-symbol">:=</span><span class="pas1-space"> TPythonEngine</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Create</span><span class="pas1-symbol">(</span><span class="pas1-reservedword">Nil</span><span class="pas1-symbol">);
</span><span class="pas1-space">  eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">pythonhome</span><span class="pas1-symbol">:=</span><span class="pas1-space"> PYHOME32</span><span class="pas1-symbol">;
</span><span class="pas1-space">  eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">opendll</span><span class="pas1-symbol">(</span><span class="pas1-identifier">PYDLL32</span><span class="pas1-symbol">)
</span><span class="pas1-space">  </span><span class="pas1-comment">//eng.IO:= pyMemo;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">try
</span><span class="pas1-space">    eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Execstring</span><span class="pas1-symbol">(</span><span class="pas1-string">'import base64'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+</span><span class="pas1-string">'import urllib.parse'</span><span class="pas1-symbol">);
</span><span class="pas1-space">    eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Execstring</span><span class="pas1-symbol">(</span><span class="pas1-string">'import urllib.request, os, textwrap, json, requests'</span><span class="pas1-symbol">);
</span><span class="pas1-space">    eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Execstring</span><span class="pas1-symbol">(</span><span class="pas1-identifier">REXDEF</span><span class="pas1-symbol">);
</span><span class="pas1-space">    
   </span><span class="pas1-comment">{ eg.Execstring('import nacl');
    eg.Execstring('from nacl.encoding import HexEncoder'+CRLF+
                   'from nacl.exceptions import CryptoError'+CRLF+
                   'from nacl.encoding import Base64Encoder'+CRLF+
                   'from pydub import AudioSegment');  }</span><span class="pas1-space">           
    
   </span><span class="pas1-comment">//eg.Execstring('from Crypto.PublicKey import RSA');                
</span><span class="pas1-space">    
   println</span><span class="pas1-symbol">(</span><span class="pas1-identifier">eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">evalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'base64.b64decode(&quot;2e8WuEr0+5nc14VBxQrOl4ob6guOTySr&quot;)'</span><span class="pas1-symbol">));
</span><span class="pas1-space">  </span><span class="pas1-comment">//eng.Execstring('priv_key = nacl.public.PrivateKey.generate()');
</span><span class="pas1-space">  </span><span class="pas1-comment">//openWeb('http://www.softwareschule.ch/examples/cheatsheetpython.pdf');
</span><span class="pas1-space">    
  </span><span class="pas1-comment">//# 1.map(func, iter) Executes the function on all elements of iterable
</span><span class="pas1-space">   println</span><span class="pas1-symbol">(</span><span class="pas1-identifier">eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">evalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'list(map( lambda x: x[0],[&quot;red&quot;,&quot;green&quot;,&quot;blue&quot;]))'</span><span class="pas1-symbol">));
</span><span class="pas1-space">   
  </span><span class="pas1-comment">//# 2.map(func, i1,...,Executes the function on all k elements of k iterables
</span><span class="pas1-space">   println</span><span class="pas1-symbol">(</span><span class="pas1-identifier">eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">evalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'list(map(lambda x,y: str(x)+&quot; &quot;+y + &quot;s&quot;,[0,2,2],'</span><span class="pas1-symbol">+
</span><span class="pas1-space">                                       </span><span class="pas1-string">'[ &quot;apple&quot; , &quot;orange&quot; , &quot;banana&quot; ]))'</span><span class="pas1-symbol">));
</span><span class="pas1-space">    
  </span><span class="pas1-comment">//# 3.string.join(iter), Concatenates iterable elements separated by string
</span><span class="pas1-space">   println</span><span class="pas1-symbol">(</span><span class="pas1-identifier">eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">evalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'&quot; marries &quot; .join(list([ &quot;Alice&quot; , &quot;Bob&quot; ]))'</span><span class="pas1-symbol">));

</span><span class="pas1-space">  </span><span class="pas1-comment">//# 4.filter(func,iterable),Filters out elements in iterable for function returns False (or 0)
</span><span class="pas1-space">   println</span><span class="pas1-symbol">(</span><span class="pas1-identifier">eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">evalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'list(filter(lambda x: True if x&gt; 17 else False,[1,15,17,18]))'</span><span class="pas1-symbol">));
</span><span class="pas1-space">   
  </span><span class="pas1-comment">//# 5.string.strip(), Removes leading and trailing whitespaces of string
</span><span class="pas1-space">   println</span><span class="pas1-symbol">(</span><span class="pas1-identifier">eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">evalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'( &quot; \n \t 42 \t &quot; .strip())'</span><span class="pas1-symbol">));
</span><span class="pas1-space">   
  </span><span class="pas1-comment">//# 6.sorted(iter), Sorts iterable in ascending order
</span><span class="pas1-space">   println</span><span class="pas1-symbol">(</span><span class="pas1-identifier">eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">evalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'sorted([ 8 , 3 , 2 , 42 , 5 ])'</span><span class="pas1-symbol">));
</span><span class="pas1-space">   
  </span><span class="pas1-comment">//# 7.sorted(iter,key=key) , Sorts according to the key function in ascending order 
</span><span class="pas1-space">   println</span><span class="pas1-symbol">(</span><span class="pas1-identifier">eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">evalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'sorted([ 8,3,2,42,5 ], key=lambda x: 0 if x== 42 else x)'</span><span class="pas1-symbol">));
</span><span class="pas1-space">   
  </span><span class="pas1-comment">//# 8.help(func) , Returns documentation of func
</span><span class="pas1-space">  </span><span class="pas1-comment">// println(eg.evalStr('help(''print'')'));
</span><span class="pas1-space">   saveString</span><span class="pas1-symbol">(</span><span class="pas1-identifier">exepath</span><span class="pas1-symbol">+</span><span class="pas1-string">'pyhelp.py'</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-string">'help(''print'')'</span><span class="pas1-symbol">);
</span><span class="pas1-space">   print</span><span class="pas1-symbol">(</span><span class="pas1-identifier">getDosOutput</span><span class="pas1-symbol">(</span><span class="pas1-string">'py '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">exepath</span><span class="pas1-symbol">+</span><span class="pas1-string">'pyhelp.py'</span><span class="pas1-symbol">,</span><span class="pas1-space"> exePath</span><span class="pas1-symbol">));
</span><span class="pas1-space">   
  </span><span class="pas1-comment">//# 9.zip(i1, i2, ...), Groups the i-th elements of iterators i1,i2,...together
</span><span class="pas1-space">   println</span><span class="pas1-symbol">(</span><span class="pas1-identifier">eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">evalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'list(zip([''Alice'',''Anna''],[''Bob'',''Jon'',''Frank'']))'</span><span class="pas1-symbol">));
</span><span class="pas1-space">   
  </span><span class="pas1-comment">//# 10.Unzip, Equal to: 1) unpack the zipped list, 2) zip the result
</span><span class="pas1-space">   println</span><span class="pas1-symbol">(</span><span class="pas1-identifier">eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">evalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'list(zip(*[(''Alice'',''Bob''),(''Anna'',''Jon'')]))'</span><span class="pas1-symbol">));
</span><span class="pas1-space">  
  </span><span class="pas1-comment">//# 11.enumerate(iter), Assigns a counter value to each element of iterable
</span><span class="pas1-space">   println</span><span class="pas1-symbol">(</span><span class="pas1-identifier">eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">evalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'list(enumerate([&quot;Alice&quot;,&quot;Bob&quot;,&quot;Jon&quot;]))'</span><span class="pas1-symbol">));
</span><span class="pas1-space">   
  </span><span class="pas1-comment">//# 12.python -m http.server&lt;P&gt;,Want to share files between PC and phone?
</span><span class="pas1-space">  </span><span class="pas1-comment">//https://docs.python.org/3/library/http.server.html
</span><span class="pas1-space">   </span><span class="pas1-comment">//print(getDosOutput('py -m http.server&lt;8080&gt;', exePath));
</span><span class="pas1-space">   </span><span class="pas1-comment">//ExecuteShell('py', '-m http.server 8080');
</span><span class="pas1-space">  
  </span><span class="pas1-comment">//# 13.Read comic Open the comic series xkcd in your web browser
</span><span class="pas1-space">  </span><span class="pas1-comment">//eg.Execstring('import antigravity');
</span><span class="pas1-space">  
  </span><span class="pas1-comment">//# 14.Zen of Python import this
</span><span class="pas1-space">   eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">execString</span><span class="pas1-symbol">(</span><span class="pas1-string">'from this import *'</span><span class="pas1-symbol">);
</span><span class="pas1-space">   println</span><span class="pas1-symbol">(</span><span class="pas1-string">'14. import this: '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">CRLF</span><span class="pas1-symbol">+
</span><span class="pas1-space">        StringReplace</span><span class="pas1-symbol">(</span><span class="pas1-identifier">eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">EvalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'repr(&quot;&quot;.join([d.get(c,c) for c in s]))'</span><span class="pas1-symbol">),
</span><span class="pas1-space">                                                </span><span class="pas1-string">'\n'</span><span class="pas1-symbol">,</span><span class="pas1-identifier">CR</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">,[</span><span class="pas1-identifier">rfReplaceAll</span><span class="pas1-symbol">]));
</span><span class="pas1-space">  
  </span><span class="pas1-comment">//# 15.Swapping numbers, Swapping vars is a breeze in Python. No offense, Java!
</span><span class="pas1-space">  eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">execString</span><span class="pas1-symbol">(</span><span class="pas1-string">'a, b = ''Jane'' , ''Alice'''</span><span class="pas1-symbol">+</span><span class="pas1-identifier">CRLF</span><span class="pas1-symbol">+</span><span class="pas1-string">'a, b = b, a'</span><span class="pas1-symbol">);
</span><span class="pas1-space">  println</span><span class="pas1-symbol">(</span><span class="pas1-identifier">eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">evalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'a, b'</span><span class="pas1-symbol">));
</span><span class="pas1-space">  
  </span><span class="pas1-comment">//# 16.Unpacking arguments, Use a sequence as function arguments!
</span><span class="pas1-space">  eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">execString</span><span class="pas1-symbol">(</span><span class="pas1-string">'def f (x, y, z) : return x + y * z'</span><span class="pas1-symbol">);
</span><span class="pas1-space">  println</span><span class="pas1-symbol">(</span><span class="pas1-identifier">eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">evalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'f(*[ 1 , 3 , 4 ])'</span><span class="pas1-symbol">));
</span><span class="pas1-space">  println</span><span class="pas1-symbol">(</span><span class="pas1-identifier">eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">evalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'f(**{ ''z'': 4 , ''x'': 1 , ''y'': 3 })'</span><span class="pas1-symbol">));
</span><span class="pas1-space">    
  </span><span class="pas1-comment">// eg.Execstring('AudioSegment.from_wav(r&quot;C:\maXbox\soundnvision\01_magix.wav&quot;).export(r&quot;C:\maXbox\mX47464\maxbox4\web\G9\G9_magix.mp3&quot;, format=&quot;mp3&quot;)');           

</span><span class="pas1-space">    </span><span class="pas1-comment">{ eng.Execstring(DEF_RSAKEYS);
      eng.Execstring('d=generate_RSA(bits=2048)')
      println('RSA Publickey '+eng.evalStr('d[1]'));  }
</span><span class="pas1-space"> 
   </span><span class="pas1-comment">//# Get the maximum number of complete TODOs.
</span><span class="pas1-space">   </span><span class="pas1-comment">//println('user_max_complete = '+eng.evalStr('top_users[0][1]')); 
</span><span class="pas1-space">                    
  </span><span class="pas1-reservedword">except
</span><span class="pas1-space">    eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">raiseError</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">finally
</span><span class="pas1-space">    eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Free</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-comment">//aPythonVersion.Free;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;</span><span class="pas1-space">  
  
  </span><span class="pas1-comment">//GetJSONData;  
</span><span class="pas1-space">  </span><span class="pas1-comment">//maXcalcF('2^64 /(60*60*24*365)')  
//&lt;Definitions&gt;  
</span><span class="pas1-reservedword">End</span><span class="pas1-symbol">.</span><span class="pas1-space"> 

</span><span class="pas1-reservedword">Ref</span><span class="pas1-symbol">:</span><span class="pas1-space">  https</span><span class="pas1-symbol">:</span><span class="pas1-comment">//www.sonarqube.org/features/multi-languages/python/
</span><span class="pas1-space"> mX4 executed</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">20/09/2021</span><span class="pas1-space"> </span><span class="pas1-number">19:20:40</span><span class="pas1-space">  Runtime</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">0:0:</span><span class="pas1-float">2.782</span><span class="pas1-space">  Memload</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">69%</span><span class="pas1-space"> use

C</span><span class="pas1-symbol">:\</span><span class="pas1-reservedword">maXbox</span><span class="pas1-symbol">\</span><span class="pas1-identifier">mX39998</span><span class="pas1-symbol">\</span><span class="pas1-identifier">maxbox3</span><span class="pas1-symbol">&gt;</span><span class="pas1-identifier">pip3 install </span><span class="pas1-symbol">-</span><span class="pas1-identifier">t C</span><span class="pas1-symbol">:\</span><span class="pas1-identifier">Users</span><span class="pas1-symbol">\</span><span class="pas1-identifier">max</span><span class="pas1-symbol">\</span><span class="pas1-identifier">AppData</span><span class="pas1-symbol">\</span><span class="pas1-identifier">Local</span><span class="pas1-symbol">\</span><span class="pas1-identifier">Programs</span><span class="pas1-symbol">\</span><span class="pas1-identifier">Py
thon</span><span class="pas1-symbol">\</span><span class="pas1-identifier">Python36</span><span class="pas1-symbol">-32\</span><span class="pas1-identifier">Lib pydub
Collecting pydub
  Downloading pydub</span><span class="pas1-symbol">-</span><span class="pas1-float">0.25.1</span><span class="pas1-symbol">-</span><span class="pas1-identifier">py2</span><span class="pas1-symbol">.</span><span class="pas1-identifier">py3</span><span class="pas1-symbol">-</span><span class="pas1-identifier">none</span><span class="pas1-symbol">-</span><span class="pas1-identifier">any</span><span class="pas1-symbol">.</span><span class="pas1-identifier">whl </span><span class="pas1-symbol">(32</span><span class="pas1-space"> kB</span><span class="pas1-symbol">)
</span><span class="pas1-identifier">Installing collected packages</span><span class="pas1-symbol">:</span><span class="pas1-space"> pydub
Successfully installed pydub</span><span class="pas1-symbol">-</span><span class="pas1-float">0.25.1

</span><span class="pas1-reservedword">Then</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> convert any </span><span class="pas1-reservedword">file</span><span class="pas1-space"> from wav </span><span class="pas1-reservedword">to</span><span class="pas1-space"> mp3 just use pydub </span><span class="pas1-reservedword">as
</span><span class="pas1-identifier">import pydub
sound </span><span class="pas1-symbol">=</span><span class="pas1-space"> pydub</span><span class="pas1-symbol">.</span><span class="pas1-identifier">AudioSegment</span><span class="pas1-symbol">.</span><span class="pas1-identifier">from_wav</span><span class="pas1-symbol">(&quot;</span><span class="pas1-identifier">D</span><span class="pas1-symbol">:/</span><span class="pas1-identifier">example</span><span class="pas1-symbol">/</span><span class="pas1-identifier">apple</span><span class="pas1-symbol">.</span><span class="pas1-identifier">wav</span><span class="pas1-symbol">&quot;)
</span><span class="pas1-identifier">sound</span><span class="pas1-symbol">.</span><span class="pas1-reservedword">export</span><span class="pas1-symbol">(&quot;</span><span class="pas1-identifier">D</span><span class="pas1-symbol">:/</span><span class="pas1-identifier">example</span><span class="pas1-symbol">/</span><span class="pas1-identifier">apple</span><span class="pas1-symbol">.</span><span class="pas1-identifier">mp3</span><span class="pas1-symbol">&quot;,</span><span class="pas1-space"> format</span><span class="pas1-symbol">=&quot;</span><span class="pas1-identifier">mp3</span><span class="pas1-symbol">&quot;)

</span><span class="pas1-identifier">Exception</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-symbol">&lt;</span><span class="pas1-reservedword">class</span><span class="pas1-space"> </span><span class="pas1-string">'OSError'</span><span class="pas1-symbol">&gt;:</span><span class="pas1-space"> Cannot load native module </span><span class="pas1-string">'Crypto.Hash._MD5'</span><span class="pas1-symbol">:</span><span class="pas1-space"> Trying </span><span class="pas1-string">'_MD5.cp36-win32.pyd'</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-symbol">[</span><span class="pas1-identifier">WinError </span><span class="pas1-number">126]</span><span class="pas1-space"> The specified module could </span><span class="pas1-reservedword">not</span><span class="pas1-space"> be found</span><span class="pas1-symbol">,</span><span class="pas1-space"> Trying </span><span class="pas1-string">'_MD5.pyd'

</span><span class="pas1-identifier">Patterns konkret</span><span class="pas1-symbol">.
</span><span class="pas1-identifier">ISBN</span><span class="pas1-symbol">-13:</span><span class="pas1-space"> </span><span class="pas1-number">9783935042468</span><span class="pas1-space">  ISBN</span><span class="pas1-symbol">-10:</span><span class="pas1-space"> </span><span class="pas1-number">3935042469
</span><span class="pas1-identifier">Author</span><span class="pas1-symbol">:</span><span class="pas1-space"> Kleiner</span><span class="pas1-symbol">,</span><span class="pas1-space"> Max
Binding</span><span class="pas1-symbol">:</span><span class="pas1-space"> Paperback
Publisher</span><span class="pas1-symbol">:</span><span class="pas1-space"> Software </span><span class="pas1-symbol">+</span><span class="pas1-space"> Support
</span><span class="pas1-reservedword">Published</span><span class="pas1-symbol">:</span><span class="pas1-space"> September </span><span class="pas1-number">2003

</span><span class="pas1-identifier">https</span><span class="pas1-symbol">:</span><span class="pas1-comment">//mymemory.translated.net/doc/spec.php
</span><span class="pas1-identifier">Hello PyWorld_</span><span class="pas1-symbol">,</span><span class="pas1-space"> This data will be written </span><span class="pas1-reservedword">on</span><span class="pas1-space"> the </span><span class="pas1-reservedword">file</span><span class="pas1-symbol">.
</span><span class="pas1-identifier">Hola PyWorld_</span><span class="pas1-symbol">,&amp;</span><span class="pas1-character">#10</span><span class="pas1-symbol">;</span><span class="pas1-space"> Estos datos se escribir</span><span class="pas1-symbol">&aacute;</span><span class="pas1-identifier">n en el archivo</span><span class="pas1-symbol">.

</span><span class="pas1-identifier">Install a </span><span class="pas1-number">32-</span><span class="pas1-identifier">bit </span><span class="pas1-reservedword">package</span><span class="pas1-space"> </span><span class="pas1-reservedword">with</span><span class="pas1-space"> a </span><span class="pas1-number">64</span><span class="pas1-space"> pip installer </span><span class="pas1-symbol">-</span><span class="pas1-identifier">t </span><span class="pas1-symbol">(</span><span class="pas1-identifier">Target</span><span class="pas1-symbol">)
</span><span class="pas1-identifier">C</span><span class="pas1-symbol">:\</span><span class="pas1-identifier">Users</span><span class="pas1-symbol">\</span><span class="pas1-identifier">max</span><span class="pas1-symbol">\</span><span class="pas1-identifier">AppData</span><span class="pas1-symbol">\</span><span class="pas1-identifier">Local</span><span class="pas1-symbol">\</span><span class="pas1-identifier">Programs</span><span class="pas1-symbol">\</span><span class="pas1-identifier">Python</span><span class="pas1-symbol">\</span><span class="pas1-identifier">Python36</span><span class="pas1-symbol">-32&gt;</span><span class="pas1-identifier">pip3 install </span><span class="pas1-symbol">-</span><span class="pas1-identifier">t C</span><span class="pas1-symbol">:\</span><span class="pas1-identifier">Users</span><span class="pas1-symbol">\
</span><span class="pas1-identifier">max</span><span class="pas1-symbol">\</span><span class="pas1-identifier">AppData</span><span class="pas1-symbol">\</span><span class="pas1-identifier">Local</span><span class="pas1-symbol">\</span><span class="pas1-identifier">Programs</span><span class="pas1-symbol">\</span><span class="pas1-identifier">Python</span><span class="pas1-symbol">\</span><span class="pas1-identifier">Python36</span><span class="pas1-symbol">-32\</span><span class="pas1-identifier">Lib bitcoin
</span><span class="pas1-symbol">----</span><span class="pas1-reservedword">File</span><span class="pas1-space"> newtemplate</span><span class="pas1-symbol">.</span><span class="pas1-identifier">txt </span><span class="pas1-reservedword">not</span><span class="pas1-space"> exists </span><span class="pas1-symbol">-</span><span class="pas1-space"> now saved</span><span class="pas1-symbol">!----

</span><span class="pas1-space">       
   
   
</span></code></pre><!--EndFragment--></body>
</html>