Version:0.9
StartHTML:0000000105
EndHTML:0000022833
StartFragment:0000001053
EndFragment:0000022817
<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>mXScriptasHTML</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="generator" content="SynEdit HTML exporter" />
<style type="text/css">
<!--
body { color: #000000; background-color: #FFFFFF; }
.pas1-assembler { }
.pas1-character { color: #0066CC; text-decoration: underline; }
.pas1-comment { color: #000080; font-style: italic; }
.pas1-float { color: #00FF00; }
.pas1-hexadecimal { color: #FF00FF; }
.pas1-identifier { }
.pas1-number { color: #FF0000; }
.pas1-preprocessor { font-style: italic; }
.pas1-reservedword { color: #000080; font-weight: bold; }
.pas1-space { }
.pas1-string { color: #008080; }
.pas1-symbol { color: #FF0000; }
-->
</style>
</head>
<body>
<!--StartFragment--><pre><code><span class="pas1-reservedword">Program</span><span class="pas1-space"> Python_Pascal_PrimeTime32_SynDat</span><span class="pas1-symbol">;

</span><span class="pas1-comment">//https://www.programiz.com/python-programming/time/sleep
//Note: modify PYHOME and PYDLL :  SynDat &lt;make the fake&gt;

</span><span class="pas1-reservedword">Const</span><span class="pas1-space"> </span><span class="pas1-comment">//PYHOME = 'C:\Users\breitsch\AppData\Local\Programs\Python\Python37-32\';
</span><span class="pas1-space">    PYHOME </span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-string">'C:\Users\max\AppData\Local\Programs\Python\Python36-32\'</span><span class="pas1-symbol">;
</span><span class="pas1-space">    PYDLL  </span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-string">'C:\Users\max\AppData\Local\Programs\Python\Python36-32\python36.dll'</span><span class="pas1-symbol">;</span><span class="pas1-space"> 
    PYSCRIPT </span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-string">'C:\maXbox\maxbox3\maxbox3\maXbox3\examples\module1maxbox1.py'</span><span class="pas1-symbol">;
</span><span class="pas1-space">    LB</span><span class="pas1-symbol">=</span><span class="pas1-space"> CR</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">;
</span><span class="pas1-space">       
</span><span class="pas1-reservedword">Const</span><span class="pas1-space"> PRIME </span><span class="pas1-symbol">=</span><span class="pas1-space">  </span><span class="pas1-string">'def py_is_prime(n):'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LB</span><span class="pas1-symbol">+
</span><span class="pas1-space">               </span><span class="pas1-string">'  import math'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LB</span><span class="pas1-symbol">+
</span><span class="pas1-space">               </span><span class="pas1-string">'  &quot;&quot;&quot; totally naive implementation &quot;&quot;&quot;'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LB</span><span class="pas1-symbol">+
</span><span class="pas1-space">               </span><span class="pas1-string">'  if n &lt;= 1:'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LB</span><span class="pas1-symbol">+
</span><span class="pas1-space">               </span><span class="pas1-string">'    return False'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LB</span><span class="pas1-symbol">+
</span><span class="pas1-space">               </span><span class="pas1-string">'  q = math.floor(math.sqrt(n))'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LB</span><span class="pas1-symbol">+
</span><span class="pas1-space">               </span><span class="pas1-string">'  for i in range(2, q + 1):'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LB</span><span class="pas1-symbol">+
</span><span class="pas1-space">               </span><span class="pas1-string">'    if (n % i == 0):'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LB</span><span class="pas1-symbol">+
</span><span class="pas1-space">               </span><span class="pas1-string">'      return False'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LB</span><span class="pas1-symbol">+
</span><span class="pas1-space">               </span><span class="pas1-string">'  return True'</span><span class="pas1-symbol">;

</span><span class="pas1-space">      ATIME</span><span class="pas1-symbol">=</span><span class="pas1-string">'while True: '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LB</span><span class="pas1-symbol">+</span><span class="pas1-space"> 
            </span><span class="pas1-string">'  localtime = time.localtime()'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LB</span><span class="pas1-symbol">+</span><span class="pas1-space"> 
            </span><span class="pas1-string">'  result = time.strftime(&quot;%I:%M:%S %p&quot;, localtime)'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LB</span><span class="pas1-symbol">+</span><span class="pas1-space"> 
            </span><span class="pas1-string">'  print(result, end=&quot;&quot;, flush=True)'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LB</span><span class="pas1-symbol">+</span><span class="pas1-space"> 
            </span><span class="pas1-string">'  print(&quot;\r&quot;, end=&quot;&quot;, flush=True)'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LB</span><span class="pas1-symbol">+</span><span class="pas1-space"> 
            </span><span class="pas1-string">'  time.sleep(1)'</span><span class="pas1-symbol">;</span><span class="pas1-space">                        
              
</span><span class="pas1-reservedword">var</span><span class="pas1-space">  PyForm</span><span class="pas1-symbol">:</span><span class="pas1-space"> TForm</span><span class="pas1-symbol">;</span><span class="pas1-space"> pyMemo</span><span class="pas1-symbol">:</span><span class="pas1-space"> TMemo</span><span class="pas1-symbol">;</span><span class="pas1-space"> pyval</span><span class="pas1-symbol">:</span><span class="pas1-space"> variant</span><span class="pas1-symbol">;
</span><span class="pas1-space">     eg</span><span class="pas1-symbol">:</span><span class="pas1-space"> TPythonEngine</span><span class="pas1-symbol">;</span><span class="pas1-space"> aPythonVersion</span><span class="pas1-symbol">:</span><span class="pas1-space"> TPythonVersion</span><span class="pas1-symbol">;
</span><span class="pas1-space">     apd</span><span class="pas1-symbol">:</span><span class="pas1-space"> TApdMeter</span><span class="pas1-symbol">;</span><span class="pas1-space"> sw</span><span class="pas1-symbol">:</span><span class="pas1-space"> TStopWatch</span><span class="pas1-symbol">;</span><span class="pas1-space"> 

</span><span class="pas1-reservedword">begin</span><span class="pas1-space">  </span><span class="pas1-comment">//@main
</span><span class="pas1-space">  </span><span class="pas1-comment">//myloadscript2:= filetostring(PYSCRIPT2);
</span><span class="pas1-space">  PyForm</span><span class="pas1-symbol">:=</span><span class="pas1-space"> loadForm2</span><span class="pas1-symbol">(200,300,</span><span class="pas1-space"> clgreen</span><span class="pas1-symbol">,</span><span class="pas1-string">'PyFrm4D_SynDat_Tester_EKON25'</span><span class="pas1-symbol">);
</span><span class="pas1-space">  pyMemo</span><span class="pas1-symbol">:=</span><span class="pas1-space"> TMemo</span><span class="pas1-symbol">.</span><span class="pas1-identifier">create</span><span class="pas1-symbol">(</span><span class="pas1-identifier">PyForm</span><span class="pas1-symbol">);
</span><span class="pas1-space">  apd</span><span class="pas1-symbol">:=</span><span class="pas1-space"> TApdMeter</span><span class="pas1-symbol">.</span><span class="pas1-identifier">create</span><span class="pas1-symbol">(</span><span class="pas1-identifier">pyform</span><span class="pas1-symbol">);
</span><span class="pas1-space">  </span><span class="pas1-comment">//apd.color:= clyellow;
</span><span class="pas1-space">  apd</span><span class="pas1-symbol">.</span><span class="pas1-identifier">parent</span><span class="pas1-symbol">:=</span><span class="pas1-space"> pyform</span><span class="pas1-symbol">;
</span><span class="pas1-space">  apd</span><span class="pas1-symbol">.</span><span class="pas1-identifier">barcolor</span><span class="pas1-symbol">:=</span><span class="pas1-space"> clred</span><span class="pas1-symbol">;
</span><span class="pas1-space">  apd</span><span class="pas1-symbol">.</span><span class="pas1-identifier">position</span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-number">30;
</span><span class="pas1-space">  apd</span><span class="pas1-symbol">.</span><span class="pas1-identifier">SetBounds</span><span class="pas1-symbol">(10,100,</span><span class="pas1-space"> </span><span class="pas1-number">150,</span><span class="pas1-space"> </span><span class="pas1-number">150);
</span><span class="pas1-space">  apd</span><span class="pas1-symbol">.</span><span class="pas1-identifier">visible</span><span class="pas1-symbol">:=</span><span class="pas1-space"> true</span><span class="pas1-symbol">;
</span><span class="pas1-space">  pyMemo</span><span class="pas1-symbol">.</span><span class="pas1-identifier">parent</span><span class="pas1-symbol">:=</span><span class="pas1-space"> PyForm
  PyForm</span><span class="pas1-symbol">.</span><span class="pas1-identifier">show</span><span class="pas1-symbol">;
</span><span class="pas1-space">  
  </span><span class="pas1-comment">//println('user_max_complete = '+eng.evalStr('top_users[0][1]')); 
</span><span class="pas1-space">  </span><span class="pas1-comment">//https://medium.com/@swathiarun63/10-fantastic-python-packages-af2a16a1183a
</span><span class="pas1-space">  </span><span class="pas1-comment">//PYLaz_P4D_Demo2;   EKON25 - explicit better than implicit
</span><span class="pas1-space">  eg</span><span class="pas1-symbol">:=</span><span class="pas1-space"> TPythonEngine</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Create</span><span class="pas1-symbol">(</span><span class="pas1-reservedword">Nil</span><span class="pas1-symbol">);
</span><span class="pas1-space">  </span><span class="pas1-reservedword">try
</span><span class="pas1-space">    eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">pythonhome</span><span class="pas1-symbol">:=</span><span class="pas1-space"> PYHOME</span><span class="pas1-symbol">;
</span><span class="pas1-space">    eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">loadDLL</span><span class="pas1-symbol">;
</span><span class="pas1-space">    println</span><span class="pas1-symbol">(</span><span class="pas1-string">'test import '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">GetPythonEngine</span><span class="pas1-symbol">.</span><span class="pas1-identifier">EvalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'__import__(&quot;decimal&quot;).Decimal(0.1)'</span><span class="pas1-symbol">));
</span><span class="pas1-space">    println</span><span class="pas1-symbol">(</span><span class="pas1-string">'test import '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">EvalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'__import__(&quot;decimal&quot;).Decimal(0.1)'</span><span class="pas1-symbol">));</span><span class="pas1-space">  
    </span><span class="pas1-comment">//https://medium.com/@swathiarun63/10-fantastic-python-packages-af2a16a1183a
</span><span class="pas1-space">    apd</span><span class="pas1-symbol">.</span><span class="pas1-identifier">position</span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-number">60;
</span><span class="pas1-space">    pyMemo</span><span class="pas1-symbol">.</span><span class="pas1-identifier">lines</span><span class="pas1-symbol">.</span><span class="pas1-identifier">add</span><span class="pas1-symbol">(</span><span class="pas1-string">'call test with execStr() from faker import Faker'</span><span class="pas1-symbol">);
</span><span class="pas1-space">    sw</span><span class="pas1-symbol">:=</span><span class="pas1-space"> TStopWatch</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Create</span><span class="pas1-symbol">();
</span><span class="pas1-space">    sw</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Start</span><span class="pas1-symbol">;
</span><span class="pas1-space">    eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">execStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'from faker import Faker'</span><span class="pas1-symbol">);
</span><span class="pas1-space">    eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">execStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'import simplejson as json'</span><span class="pas1-symbol">);</span><span class="pas1-space">  </span><span class="pas1-comment">// # instead of import json
</span><span class="pas1-space">    eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">execStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'fake = Faker()'</span><span class="pas1-symbol">);
</span><span class="pas1-space">    println</span><span class="pas1-symbol">(</span><span class="pas1-identifier">eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">evalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'fake.profile()'</span><span class="pas1-symbol">));
</span><span class="pas1-space">    </span><span class="pas1-comment">//println(eg.evalStr('json.dumps(fake.profile(),indent=4)'));
</span><span class="pas1-space">    println</span><span class="pas1-symbol">(</span><span class="pas1-identifier">eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">evalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'fake.credit_card_number()'</span><span class="pas1-symbol">));</span><span class="pas1-space"> </span><span class="pas1-comment">//}
</span><span class="pas1-space">    sw</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Stop</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-comment">//sw.ElapsedMilliseconds;
</span><span class="pas1-space">    writeln</span><span class="pas1-symbol">(</span><span class="pas1-string">'Stop Watch Faker Tester1: '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">sw</span><span class="pas1-symbol">.</span><span class="pas1-identifier">getValueStr</span><span class="pas1-symbol">)
</span><span class="pas1-space">  </span><span class="pas1-reservedword">except
</span><span class="pas1-space">    eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">raiseError</span><span class="pas1-symbol">;
</span><span class="pas1-space">    writeln</span><span class="pas1-symbol">(</span><span class="pas1-identifier">ExceptionToString</span><span class="pas1-symbol">(</span><span class="pas1-identifier">ExceptionType</span><span class="pas1-symbol">,</span><span class="pas1-space"> ExceptionParam</span><span class="pas1-symbol">));</span><span class="pas1-space">  
  </span><span class="pas1-reservedword">finally
</span><span class="pas1-space">    eg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Free</span><span class="pas1-symbol">;
</span><span class="pas1-space">    sw</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Free</span><span class="pas1-symbol">;
</span><span class="pas1-space">    sw</span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-reservedword">Nil</span><span class="pas1-symbol">;
</span><span class="pas1-space">    apd</span><span class="pas1-symbol">.</span><span class="pas1-identifier">position</span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-number">100;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;</span><span class="pas1-space">  
</span><span class="pas1-reservedword">End</span><span class="pas1-symbol">.

</span><span class="pas1-reservedword">Ref</span><span class="pas1-symbol">:</span><span class="pas1-space"> https</span><span class="pas1-symbol">:</span><span class="pas1-comment">//towardsdatascience.com/build-a-data-streaming-job-in-5-mins-with-pyspark-faker-a4f3d2420384
</span><span class="pas1-space">     https</span><span class="pas1-symbol">:</span><span class="pas1-comment">//www.codespeedy.com/faker-library-in-python/
{'job': 'Research officer, political party', 'company': 'Davis-Perez', 'ssn': '520-11-9286', 'residence': '18365 Katherine Plains\nAliceville, OK 31762', 'current_location': (Decimal('47.667757'), Decimal('14.943272')), 'blood_group': 'O-', 'website': ['https://www.thompson.com/', 'https://graham.com/', 'http://www.thomas.com/'], 'username': 'hbass', 'name': 'Tammy Crane', 'sex': 'F', 'address': '3144 Stephanie Road\nWilliambury, MT 95571', 'mail': 'wthompson@yahoo.com', 'birthdate': datetime.date(1962, 11, 25)}
</span><span class="pas1-number">4978088480978
</span><span class="pas1-space"> mX4 executed</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">05/12/2021</span><span class="pas1-space"> </span><span class="pas1-number">11:43:04</span><span class="pas1-space">  Runtime</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">0:0:</span><span class="pas1-float">2.197</span><span class="pas1-space">  Memload</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">36%</span><span class="pas1-space"> use

</span><span class="pas1-reservedword">Doc</span><span class="pas1-symbol">:</span><span class="pas1-space"> One thing </span><span class="pas1-reservedword">to</span><span class="pas1-space"> note </span><span class="pas1-reservedword">is</span><span class="pas1-space"> that the map</span><span class="pas1-symbol">()</span><span class="pas1-space"> </span><span class="pas1-reservedword">function</span><span class="pas1-space"> returns an iterable </span><span class="pas1-reservedword">object</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-reservedword">and</span><span class="pas1-space"> thus we can use the list</span><span class="pas1-symbol">()</span><span class="pas1-space"> </span><span class="pas1-reservedword">function</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> generate a list from this iterable</span><span class="pas1-symbol">.
</span><span class="pas1-identifier">writeln</span><span class="pas1-symbol">(</span><span class="pas1-string">'RegVersion: '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">itoa</span><span class="pas1-symbol">(</span><span class="pas1-identifier">TPythonEngine</span><span class="pas1-symbol">(</span><span class="pas1-identifier">eng</span><span class="pas1-symbol">).</span><span class="pas1-identifier">RegVersion</span><span class="pas1-symbol">));
</span><span class="pas1-identifier">https</span><span class="pas1-symbol">:</span><span class="pas1-comment">//stackoverflow.com/questions/16779799/py-initialize-and-py-finalize-and-matplotlib

</span><span class="pas1-identifier">import threading 
  
</span><span class="pas1-reservedword">def</span><span class="pas1-space"> print_hello_three_times</span><span class="pas1-symbol">():
</span><span class="pas1-space">  </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i </span><span class="pas1-reservedword">in</span><span class="pas1-space"> range</span><span class="pas1-symbol">(3):
</span><span class="pas1-space">    print</span><span class="pas1-symbol">(&quot;</span><span class="pas1-identifier">Hello</span><span class="pas1-symbol">&quot;)
</span><span class="pas1-space">  
</span><span class="pas1-reservedword">def</span><span class="pas1-space"> print_hi_three_times</span><span class="pas1-symbol">():</span><span class="pas1-space"> 
    </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i </span><span class="pas1-reservedword">in</span><span class="pas1-space"> range</span><span class="pas1-symbol">(3):</span><span class="pas1-space"> 
      print</span><span class="pas1-symbol">(&quot;</span><span class="pas1-identifier">Hi</span><span class="pas1-symbol">&quot;)</span><span class="pas1-space"> 

t1 </span><span class="pas1-symbol">=</span><span class="pas1-space"> threading</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Thread</span><span class="pas1-symbol">(</span><span class="pas1-identifier">target</span><span class="pas1-symbol">=</span><span class="pas1-identifier">print_hello_three_times</span><span class="pas1-symbol">)</span><span class="pas1-space">  
t2 </span><span class="pas1-symbol">=</span><span class="pas1-space"> threading</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Thread</span><span class="pas1-symbol">(</span><span class="pas1-identifier">target</span><span class="pas1-symbol">=</span><span class="pas1-identifier">print_hi_three_times</span><span class="pas1-symbol">)</span><span class="pas1-space">  
t1</span><span class="pas1-symbol">.</span><span class="pas1-identifier">start</span><span class="pas1-symbol">()
</span><span class="pas1-identifier">t2</span><span class="pas1-symbol">.</span><span class="pas1-identifier">start</span><span class="pas1-symbol">()

</span><span class="pas1-identifier">This </span><span class="pas1-reservedword">package</span><span class="pas1-space"> implements JSON support </span><span class="pas1-reservedword">for</span><span class="pas1-space"> FPC</span><span class="pas1-symbol">.
</span><span class="pas1-space">    
</span></code></pre><!--EndFragment--></body>
</html>