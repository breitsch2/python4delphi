<?xml version="1.0" encoding="utf-8"?>
<TestRun xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Test Id="1">
    <TestInfo>
      <Name>ControlType.Window:FocusedElement.1</Name>
      <Summary>Verify that obtaining the AutomationElement.FocusedElement property does not throw any exception</Summary>
      <Priority>Pri0</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Step: Verify that one can call AutomationElement.FocusedElement without an exception</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestGetFocus1</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:08:34]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="2">
    <TestInfo>
      <Name>ControlType.Window:GetRuntimeIdType.1</Name>
      <Summary>Verify the format of the RuntimeId returned from the AutomationElement</Summary>
      <Priority>Pri0</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Verification: RuntimeId's should be of type int[]</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>RuntimeId</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:08:39]:0: Verify that Type for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns System.Int32[]</Comment>
      <Comment>[23:46:08:39]:0: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property Type is System.Int32[]</Comment>
      <Comment>[23:46:08:39]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="3">
    <TestInfo>
      <Name>ControlType.Window:GetSupportedPatterns.1</Name>
      <Summary>Verify that a call to GetSupportedPatterns succeeds without throwing an exception</Summary>
      <Priority>Pri0</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Verify success call to GetSupportedPatterns()</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestGetSupportedPatterns</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:08:43]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="4">
    <TestInfo>
      <Name>ControlType.Window:GetSupportedProperties.1</Name>
      <Summary>Verify that a call to GetSupportedProperties succeeds without throwing an exception</Summary>
      <Priority>Pri0</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Verify success call to GetSupportedProperties()</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestGetSupportedProperties</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:08:46]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="5">
    <TestInfo>
      <Name>ControlType.Window:GetType.1</Name>
      <Summary>Verify that a call to GetType succeeds without throwing an exception</Summary>
      <Priority>Pri0</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Verify success call to GetType()</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestGetType</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:08:50]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="6">
    <TestInfo>
      <Name>ControlType.Window:HwndWindowRect.1.MSAA</Name>
      <Summary>Verify MSAA rectangle is correct for Hwnd based window</Summary>
      <Priority>Pri0</Priority>
      <Status>Works</Status>
      <Author />
      <TestCaseType>Generic</TestCaseType>
      <Description>Precondition: Element has a valid hwnd</Description>
      <Description>Verification: Obtain the element's rectangle using IAccessible::get_accLocation()</Description>
      <Description>Verification: Obtain the element's rectangle using Win32 GetWindowRect()</Description>
      <Description>Verification: That the AutomationElement.GetBoundingRectangle is the same as IAccessible::get_accLocation()</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>HwndWindowRect1MSAA</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:08:53]:0: Verify that AutomationElementIdentifiers.NativeWindowHandleProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does not returns 0</Comment>
      <Comment>[23:46:08:53]:0: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property AutomationElementIdentifiers.NativeWindowHandleProperty is 20647390</Comment>
      <Comment>[23:46:08:54]:3: UIA BoundingRectangle returned (Left=95, Top=50, Right=1422, Bottom=802</Comment>
      <Comment>[23:46:08:54]:3: Other rectangle was (Left=95, Top=50, Right=1422, Bottom=802</Comment>
      <Comment>[23:46:08:54]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="7">
    <TestInfo>
      <Name>ControlType.Window:HwndWindowRect.2.UIA</Name>
      <Summary>Verify UIA rectangle available</Summary>
      <Priority>Pri0</Priority>
      <Status>Works</Status>
      <Author />
      <TestCaseType>Generic</TestCaseType>
      <Description>Verification: Obtain AutomationElement.GetBoundingRectangle (regression for TitleBar / WindowsOSBug:1559184</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>HwndWindowRect2UIA</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:08:58]:0: UIA BoundingRectangle returned (Left=95, Top=50, Right=1422, Bottom=802</Comment>
      <Comment>[23:46:08:58]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="8">
    <TestInfo>
      <Name>ControlType.Window:LocalizedControlType.1.8.1</Name>
      <Summary>Test that an element has a non zero length string associated with the localized control type</Summary>
      <Priority>Pri0</Priority>
      <Status>Works</Status>
      <Author />
      <TestCaseType>Generic</TestCaseType>
      <Description>Verify: LocalizedControlType != null</Description>
      <Description>Verify: LocalizedControlType.Length != 0</Description>
      <Description>Verify: LocalizedControlType != string.Empty</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>LocalizedControlType181</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:08:63]:0: Verify that LocalizedControlType for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) returns null</Comment>
      <Comment>[23:46:08:63]:0: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property LocalizedControlType is window</Comment>
      <Comment>[23:46:08:64]:1: Verify that LocalizedControlType for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does not returns 0</Comment>
      <Comment>[23:46:08:64]:1: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property LocalizedControlType is 6</Comment>
      <Comment>[23:46:08:64]:2: Verify that LocalizedControlType for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does not returns ""</Comment>
      <Comment>[23:46:08:64]:2: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property LocalizedControlType is window</Comment>
      <Comment>[23:46:08:64]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="9">
    <TestInfo>
      <Name>ControlType.Window:ToString.1</Name>
      <Summary>Verify that a call to ToString() succeeds without throwing an exception</Summary>
      <Priority>Pri0</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Verify success call to ToString()</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestToString1</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:08:68]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="10">
    <TestInfo>
      <Name>ControlType.Window:AutomationIdProperty.1.7.1</Name>
      <Summary>Test that the AutomationElement has no sibling with the same AutomationId</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author />
      <TestCaseType>Generic</TestCaseType>
      <Description>Precondition: This is not the RootElement and thus should have a parent</Description>
      <Description>Verify: No siblings have the same AutomationIdProperty</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>AutomationIdProperty171</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:08:74]:0: Verify that AutomationElement.RootElement for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does not returns System.Windows.Automation.AutomationElement</Comment>
      <Comment>[23:46:08:76]:0: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property AutomationElement.RootElement is System.Windows.Automation.AutomationElement</Comment>
      <Comment>[23:46:08:98]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="11">
    <TestInfo>
      <Name>ControlType.Window:AutomationIdProperty.1.7.8</Name>
      <Summary>Test that items that have the ControlView = true, has an AutomationIdProperty that is not string.Empty</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author />
      <TestCaseType>Generic</TestCaseType>
      <Description>PreCondition: Element must support ControlType property to determine if supporting ControlType is required</Description>
      <Description>Precondition: Element does not support the WindowPattern, thus is not a window</Description>
      <Description>Precondition: IsControlElementProperty == true</Description>
      <Description>Precondition: ControlType != ListItem (known item that does not support AutomationIdProperty)</Description>
      <Description>Precondition: ControlType != DataItem (known item that does not support AutomationIdProperty)</Description>
      <Description>Precondition: ControlType != TreeItem (known item that does not support AutomationIdProperty)</Description>
      <Description>Precondition: ControlType != TabViewItem (known item that does not support AutomationIdProperty)</Description>
      <Description>Precondition: ControlType != TitleBar (known item that does not support AutomationIdProperty)</Description>
      <Description>Precondition: Parent's ControlType != ListItem(known item that does not support AutomationIdProperty)</Description>
      <Description>Precondition: Parent's ControlType != DataItem(known item that does not support AutomationIdProperty)</Description>
      <Description>Verify: AutomationIdProperty != string.Empty</Description>
      <Description>Verify: AutomationIdProperty != 0</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>AutomationIdProperty178</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:09:50]:0: AutomationIdProperty = </Comment>
      <Comment>[23:46:09:50]:0: Verify that AutomationElementIdentifiers.ControlTypeProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) returns null</Comment>
      <Comment>[23:46:09:50]:0: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property AutomationElementIdentifiers.ControlTypeProperty is System.Windows.Automation.ControlType</Comment>
      <Comment>[23:46:09:50]:1: Verify that AutomationElementIdentifiers.IsWindowPatternAvailableProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns False</Comment>
      <Comment>[23:46:09:50]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="12">
    <TestInfo>
      <Name>ControlType.Window:BoundingRect.1</Name>
      <Summary>Verify that BoundingRectangleProperty returns an acceptable value</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Precondition: AutomationElement.BoundingRectangleProperty !=  Rect.Empty</Description>
      <Description>Verify: AutomationElement.BoundingRectangleProperty != AutomationElement.NotSupported</Description>
      <Description>Verify: AutomationElement.BoundingRectangleProperty != null</Description>
      <Description>Verify: AutomationElement.BoundingRectangleProperty != ""</Description>
      <Description>Verify: AutomationElement.BoundingRectangle Top is less then Bottom</Description>
      <Description>Verify: AutomationElement.BoundingRectangle left is less then Right</Description>
      <Description>Verify: AutomationElement.BoundingRectangle Top != Infinity</Description>
      <Description>Verify: AutomationElement.BoundingRectangle Left != Infinity</Description>
      <Description>Verify: AutomationElement.BoundingRectangle Right != Infinity</Description>
      <Description>Verify: AutomationElement.BoundingRectangle Bottom != Infinity</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestBoundingRect2</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:09:81]:0: GetCurrentPropertyValue(AutomationElement.BoundingRectangleProperty) returned 95,50,1327,752</Comment>
      <Comment>[23:46:09:81]:4: Fail if BoundingRect.Top (50) &gt; BoundingRect.Bottom (802)</Comment>
      <Comment>[23:46:09:81]:5: Fail if BoundingRect.Left (95) &gt; BoundingRect.Right (1422)</Comment>
      <Comment>[23:46:09:81]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="13">
    <TestInfo>
      <Name>ControlType.Window:ClickablePointProperty.1</Name>
      <Summary>Verify that AutomationElement.ClickablePointProperty returned a point withing the BoundingRectangle</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Verify if element is not off screen, AutomationElement.ClickablePointProperty is within the BoundingRectangle</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestClickablePointProperty2</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:09:11]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="14">
    <TestInfo>
      <Name>ControlType.Window:ControlTypeProperty.1</Name>
      <Summary>Verify that AutomationElement.ControlTypeProperty does not return null or AutomationElement.NotSupported</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Verify that GetCurrentPropertyValue(AutomationElement.ControlTypeProperty) does not return null</Description>
      <Description>Verify that GetCurrentPropertyValue(AutomationElement.ControlTypeProperty) does not return AutomationElement.NotSupported</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestControlTypeProperty</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:09:15]:0: Verify that ControlType for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) returns null</Comment>
      <Comment>[23:46:09:16]:0: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property ControlType is System.Windows.Automation.ControlType</Comment>
      <Comment>[23:46:09:16]:1: Verify that ControlType for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does not returns System.__ComObject</Comment>
      <Comment>[23:46:09:16]:1: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property ControlType is System.Windows.Automation.ControlType</Comment>
      <Comment>[23:46:09:16]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="15">
    <TestInfo>
      <Name>ControlType.Window:GetClickablePoint.2</Name>
      <Summary>Verify that the point returned from GetClickablePoint() is within the boundaries returned from the element's BoundaryRectangleProperty</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Step: Call GetClickablePoint()</Description>
      <Description>Step: If NoClickablePointException is not thrown, verify that pt returned from GetClickablePoint is within the AutomationElement's BoundingRectangle</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestGetClickablePoint2</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:09:26]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="16">
    <TestInfo>
      <Name>ControlType.Window:GetHashCode.1</Name>
      <Summary>Verify that a call to GetSupportedProperties succeeds without throwing an exception</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Verify success call to GetHashCode</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestGetHashCode</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:09:30]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="17">
    <TestInfo>
      <Name>ControlType.Window:IsKeyboardFocusable.1.1.1</Name>
      <Summary>If IsKeyboardFocusable = false, call SetFocus() and verify that KeyboardFocusabe is still false and no events were fired</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author />
      <TestCaseType>Generic</TestCaseType>
      <Description>Precondition: Verify that this control supports SetFocus tests, some controls such as MenuItem's do not support SetFocus()</Description>
      <Description>Precondition: IsKeyboardFocusable == false</Description>
      <Description>Verify: Call SetFocus() and expect an exception to be thrown</Description>
      <Description>Verify: IsKeyboardFocusable still false</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestKeyboardFocusable111</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:09:35]:1: Verify that AutomationElementIdentifiers.IsKeyboardFocusableProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns False</Comment>
      <Comment>[23:46:09:35]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="18">
    <TestInfo>
      <Name>ControlType.Window:IsPasswordProperty.1.3.2</Name>
      <Summary>If IsPasswordProperty == true, Calling ValuePattern.Value throws an InvalidOperastionException</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author />
      <TestCaseType>Generic</TestCaseType>
      <Description>Precondition: AutomationElement.IsPasswordProperty == true</Description>
      <Description>Verify: Calling ValuePattern.Value throws an InvalidOperationException</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestIsPasswordProperty132</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:09:38]:0: Verify that AutomationElementIdentifiers.IsKeyboardFocusableProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns True</Comment>
      <Comment>[23:46:09:38]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="19">
    <TestInfo>
      <Name>ControlType.Window:KeyboardFocusable.1.1.2</Name>
      <Summary>If KeyboardFocusable = true, call SetFocus() and verify that IsKeyboardFocusable is still true and PropertyChangedEvent was fired</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author />
      <TestCaseType>Generic</TestCaseType>
      <Description>Precondition: Verify that this control supports SetFocus tests, some controls such as MenuItem's do not support SetFocus()</Description>
      <Description>Precondition: IsKeyboardFocusable == true</Description>
      <Description>Verify: Call SetFocus() set focus to the element</Description>
      <Description>Verify: IsKeyboardFocusable still true</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestKeyboardFocusable112</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:09:46]:1: Verify that AutomationElementIdentifiers.IsKeyboardFocusableProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns True</Comment>
      <Comment>[23:46:09:46]:1: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property AutomationElementIdentifiers.IsKeyboardFocusableProperty is True</Comment>
      <Comment>[23:46:09:46]:2: Setting focus to "Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" </Comment>
      <Comment>[23:46:09:46]:2: Calling SetFocus("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:10:48]:2: Successfully called SetFocus() without an exception thrown</Comment>
      <Comment>[23:46:10:48]:3: Verify that AutomationElementIdentifiers.IsKeyboardFocusableProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns True</Comment>
      <Comment>[23:46:10:48]:3: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property AutomationElementIdentifiers.IsKeyboardFocusableProperty is True</Comment>
      <Comment>[23:46:10:48]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="20">
    <TestInfo>
      <Name>ControlType.Window:Navigation.1</Name>
      <Summary>If NextSibling != null, verify NextSiblings.PreviousSibling is current AutomationElement</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Precondition: AutomationElement's NextSibling != null</Description>
      <Description>Verify that the NextSibling.PreviousSibling != null</Description>
      <Description>Verify that my NextSibling's PreviousSibling is me</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestNavigation1</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:10:58]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="21">
    <TestInfo>
      <Name>ControlType.Window:Navigation.10</Name>
      <Summary>Verify element's last child's previous sibling is not null</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Verify: The the element has children...AutomationElement.FirstChild != null</Description>
      <Description>Verify: My LastChild.NextSibling == null</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestNavigation10</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:10:75]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="22">
    <TestInfo>
      <Name>ControlType.Window:Navigation.11</Name>
      <Summary>Verify element's last childs parent equals elements first childs parent</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Verify: The the element has children...AutomationElement.FirstChild != null</Description>
      <Description>Verify: My AutomationElement.LastChild.Parent == AutomationElement.FirstChild.Parent</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestNavigation11</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:10:85]:1: Both elements are equal</Comment>
      <Comment>[23:46:10:85]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="23">
    <TestInfo>
      <Name>ControlType.Window:Navigation.2</Name>
      <Summary>If GetPreviousSibling != null, verify GetPreviousSibling.NextSibling is current AutomationElement</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Precondition: AutomationElement's PreviousSibling != null</Description>
      <Description>Verify: AutomattinElement's Previous Sibling's Next Sibling != null</Description>
      <Description>Verify that my PreviousSibling's NextSibling is me</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestNavigation2</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:10:92]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="24">
    <TestInfo>
      <Name>ControlType.Window:Navigation.3</Name>
      <Summary>If FirstChild != null, verify GetParent == parents FirstChild</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Precondition: AutomationElement's FirstChild != null</Description>
      <Description>Verify that my FirstChild's Parent != null</Description>
      <Description>Verify that my FirstChild's Parent is me</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestNavigation3</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:10:96]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="25">
    <TestInfo>
      <Name>ControlType.Window:Navigation.4</Name>
      <Summary>If LastChild != null, verify elements LastChild's parent is element</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Precondition: AutomationElement's LastChild != null</Description>
      <Description>Verify that my LastChild's Parent != null</Description>
      <Description>Verify that my LastChild's Parent is me</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestNavigation4</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:11:53]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="26">
    <TestInfo>
      <Name>ControlType.Window:Navigation.5</Name>
      <Summary>If element's parent != null, verify that element is child of parent element</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Precondition: This is not the RootElement and thus should have a parent</Description>
      <Description>Verify that my Parent has siblings</Description>
      <Description>Verify that I am a child of my Parent</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestNavigation5</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:11:10]:0: Verify that AutomationElement.RootElement for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does not returns System.Windows.Automation.AutomationElement</Comment>
      <Comment>[23:46:11:10]:0: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property AutomationElement.RootElement is System.Windows.Automation.AutomationElement</Comment>
      <Comment>[23:46:11:10]:1: Parent: "Pane" "Desktop 1" "" </Comment>
      <Comment>[23:46:11:12]:1: Parent 1st child: "Pane" "1885 Cursor: 5  Mouse: 5" "" </Comment>
      <Comment>[23:46:11:12]:2: Comparing sibling("Pane" "1885 Cursor: 5  Mouse: 5" "" ) with me("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:11:12]:2: Comparing sibling("Pane" "" "" ) with me("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:11:12]:2: Comparing sibling("Pane" "" "" ) with me("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:11:13]:2: Comparing sibling("Pane" "" "" ) with me("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:11:13]:2: Comparing sibling("Pane" "" "" ) with me("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:11:13]:2: Comparing sibling("Pane" "" "" ) with me("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:11:13]:2: Comparing sibling("Pane" "" "" ) with me("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:11:13]:2: Comparing sibling("Pane" "" "" ) with me("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:11:13]:2: Comparing sibling("Pane" "" "" ) with me("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:11:15]:2: Comparing sibling("Pane" "" "" ) with me("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:11:15]:2: Comparing sibling("Pane" "" "" ) with me("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:11:15]:2: Comparing sibling("Pane" "" "" ) with me("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:11:15]:2: Comparing sibling("Pane" "" "" ) with me("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:11:15]:2: Comparing sibling("Pane" "" "" ) with me("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:11:15]:2: Comparing sibling("Pane" "Taskbar" "" ) with me("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:11:16]:2: Comparing sibling("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) with me("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:11:16]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="27">
    <TestInfo>
      <Name>ControlType.Window:Navigation.6</Name>
      <Summary>Verify elements last sibling is element's parents last child</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Precondition: This is not the RootElement and thus should have a parent</Description>
      <Description>Step: Get the last Sibling(me.NextSibling.NextSibling...)</Description>
      <Description>Step: Verify that this element is the same as my Parent's LastChild</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestNavigation6</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:11:20]:0: Verify that AutomationElement.RootElement for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does not returns System.Windows.Automation.AutomationElement</Comment>
      <Comment>[23:46:11:20]:0: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property AutomationElement.RootElement is System.Windows.Automation.AutomationElement</Comment>
      <Comment>[23:46:11:22]:1: Navigating with NextSibling to "Window" "Visual UI Automation Verify : Client Side Provider" "MainWindow" </Comment>
      <Comment>[23:46:11:22]:1: Navigating with NextSibling to "Window" "maxbox4" "" </Comment>
      <Comment>[23:46:11:22]:1: Navigating with NextSibling to "Window" "UIAVerify" "" </Comment>
      <Comment>[23:46:11:22]:1: Navigating with NextSibling to "Window" "source" "" </Comment>
      <Comment>[23:46:11:23]:1: Navigating with NextSibling to "Window" "examples" "" </Comment>
      <Comment>[23:46:11:23]:1: Navigating with NextSibling to "Window" "Import" "" </Comment>
      <Comment>[23:46:11:23]:1: Navigating with NextSibling to "Window" "maxbox news — Mozilla Firefox" "" </Comment>
      <Comment>[23:46:11:23]:1: Navigating with NextSibling to "Window" "readme_maxbox4.txt - Notepad" "" </Comment>
      <Comment>[23:46:11:23]:1: Navigating with NextSibling to "Window" "REST" "" </Comment>
      <Comment>[23:46:11:23]:1: Navigating with NextSibling to "Window" "maxbox36beta" "" </Comment>
      <Comment>[23:46:11:25]:1: Navigating with NextSibling to "Pane" "Program Manager" "" </Comment>
      <Comment>[23:46:11:80]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="28">
    <TestInfo>
      <Name>ControlType.Window:Navigation.7</Name>
      <Summary>Verify elements first sibling is element's parents first child</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Precondition: This is not the RootElement and thus has a parent</Description>
      <Description>Step: Get the AutomationElement's first Sibling(AutomationElement.PreviousSibling.PreviousSibling...)</Description>
      <Description>Step: Verify that this element is the same as the AutomationElement's Parent.FirstChild</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestNavigation7</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:11:84]:0: Verify that AutomationElement.RootElement for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does not returns System.Windows.Automation.AutomationElement</Comment>
      <Comment>[23:46:11:84]:0: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property AutomationElement.RootElement is System.Windows.Automation.AutomationElement</Comment>
      <Comment>[23:46:11:85]:1: Navigating with PreviousSibling to "Pane" "Taskbar" "" </Comment>
      <Comment>[23:46:11:87]:1: Navigating with PreviousSibling to "Pane" "" "" </Comment>
      <Comment>[23:46:11:87]:1: Navigating with PreviousSibling to "Pane" "" "" </Comment>
      <Comment>[23:46:11:87]:1: Navigating with PreviousSibling to "Pane" "" "" </Comment>
      <Comment>[23:46:11:88]:1: Navigating with PreviousSibling to "Pane" "" "" </Comment>
      <Comment>[23:46:11:88]:1: Navigating with PreviousSibling to "Pane" "" "" </Comment>
      <Comment>[23:46:11:88]:1: Navigating with PreviousSibling to "Pane" "" "" </Comment>
      <Comment>[23:46:11:88]:1: Navigating with PreviousSibling to "Pane" "" "" </Comment>
      <Comment>[23:46:11:90]:1: Navigating with PreviousSibling to "Pane" "" "" </Comment>
      <Comment>[23:46:11:90]:1: Navigating with PreviousSibling to "Pane" "" "" </Comment>
      <Comment>[23:46:11:90]:1: Navigating with PreviousSibling to "Pane" "" "" </Comment>
      <Comment>[23:46:11:90]:1: Navigating with PreviousSibling to "Pane" "" "" </Comment>
      <Comment>[23:46:11:90]:1: Navigating with PreviousSibling to "Pane" "" "" </Comment>
      <Comment>[23:46:11:90]:1: Navigating with PreviousSibling to "Pane" "" "" </Comment>
      <Comment>[23:46:11:92]:1: Navigating with PreviousSibling to "Pane" "1885 Cursor: 5  Mouse: 5" "" </Comment>
      <Comment>[23:46:11:92]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="29">
    <TestInfo>
      <Name>ControlType.Window:Navigation.8</Name>
      <Summary>Verify elements oldest ancestor is the AutomationElement.RootElement</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Precondition: This is not the RootElement and thus has a parent</Description>
      <Description>Step: Get my root element(me.Parent...)</Description>
      <Description>Step: Verify that this element is the same AutomationElement.RootElement</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestNavigation8</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:11:95]:0: Verify that AutomationElement.RootElement for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does not returns System.Windows.Automation.AutomationElement</Comment>
      <Comment>[23:46:11:95]:0: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property AutomationElement.RootElement is System.Windows.Automation.AutomationElement</Comment>
      <Comment>[23:46:11:97]:1: Navigating with Parent to "Pane" "Desktop 1" "" </Comment>
      <Comment>[23:46:11:97]:2: Comparing '"Pane" "Desktop 1" "" ' and '"Pane" "Desktop 1" "" '</Comment>
      <Comment>[23:46:11:97]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="30">
    <TestInfo>
      <Name>ControlType.Window:Navigation.9</Name>
      <Summary>Verify elements first child's previous sibling is null</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Verify: The the element has children...AutomationElement.FirstChild != null</Description>
      <Description>Verify: My FirstChild.PreviousSibling == null</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestNavigation9</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:12:24]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="31">
    <TestInfo>
      <Name>ControlType.Window:Navigation.ControlFirstChild.1</Name>
      <Summary>Verify no exceptions are not thrown when calling TreeWalker.ControlViewWalker.GetFirstChild</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Verify success call to FirstChild</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestFirstChild1</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:12:71]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="32">
    <TestInfo>
      <Name>ControlType.Window:Navigation.ControlLastChild.1</Name>
      <Summary>Verify no exceptions are not thrown when calling TreeWalker.ControlViewWalker.GetLastChild</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Verify success call to LastChild</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestLastChild1</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:12:14]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="33">
    <TestInfo>
      <Name>ControlType.Window:Navigation.ControlNextSibling.1</Name>
      <Summary>Verify no exceptions are not thrown when calling TreeWalker.ControlViewWalker.GetNextSibling</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Verify success call to NextSibling</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestNextSibling1</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:12:22]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="34">
    <TestInfo>
      <Name>ControlType.Window:Navigation.ControlParent.1</Name>
      <Summary>Verify no exceptions are not thrown when calling TreeWalker.ControlViewWalker.GetParent</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Verify success call to Parent</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestParent1</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:12:27]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="35">
    <TestInfo>
      <Name>ControlType.Window:Navigation.ControlPreviousSibling.1</Name>
      <Summary>Verify no exceptions are not thrown when calling TreeWalker.ControlViewWalker.GetPreviousSibling</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Verify success call to PreviousSibling</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestPreviousSibling1</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:12:30]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="36">
    <TestInfo>
      <Name>ControlType.Window:SetFocus.1</Name>
      <Summary>After removing the focus from an element, call SetFocus() programmatically and verify that the element receives the focus and the event is fired</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic, Events</TestCaseType>
      <Description>Precondition: Some controls are not persisted after they loose focus (ie, Floating edit in Excel), don't tests these</Description>
      <Description>Precondition: Verify that the element is enabled</Description>
      <Description>Precondition: Verify that the element's IsOffScreen = false</Description>
      <Description>Precondition: Verify that this control supports SetFocus tests</Description>
      <Description>Precondition: Verify that the object's IsFocusableProperty == true</Description>
      <Description>Step: Ensure the AutomationElement does not have focus by calling SetFocus(RANDOM)</Description>
      <Description>Step: Verify that the AutomationElement's HasKeyboardFocusProperty == false</Description>
      <Description>Precondition: Verify that the object's IsFocusableProperty is still true</Description>
      <Description>Step: Add FocusChangedListener event on the AutomationElement</Description>
      <Description>Step: Call SetFocus(AutomationElement)</Description>
      <Description>Step: Verify that the element or one of it's children have the focus now</Description>
      <Description>Step: Wait for events</Description>
      <Description>Step: Verify that AutomationElement or one of it's children fired the FocusChangeEvent, or if the AutomationElement is a title bar, then the child in the application</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestSetFocus1a</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:12:35]:2: Verify that AutomationElementIdentifiers.IsOffscreenProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns False</Comment>
      <Comment>[23:46:12:35]:2: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property AutomationElementIdentifiers.IsOffscreenProperty is False</Comment>
      <Comment>[23:46:12:35]:4: Verify that AutomationElementIdentifiers.IsKeyboardFocusableProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns True</Comment>
      <Comment>[23:46:12:35]:4: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property AutomationElementIdentifiers.IsKeyboardFocusableProperty is True</Comment>
      <Comment>[23:46:12:55]:5: Setting focus to "Pane" "1885 Cursor: 5  Mouse: 5" "" </Comment>
      <Comment>[23:46:12:55]:5: Calling SetFocus("Pane" "1885 Cursor: 5  Mouse: 5" "" )</Comment>
      <Comment>[23:46:13:57]:5: Successfully called SetFocus() without an exception thrown</Comment>
      <Comment>[23:46:13:57]:6: Verify that AutomationElementIdentifiers.HasKeyboardFocusProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns False</Comment>
      <Comment>[23:46:13:57]:6: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property AutomationElementIdentifiers.HasKeyboardFocusProperty is False</Comment>
      <Comment>[23:46:13:57]:7: Verify that AutomationElementIdentifiers.IsKeyboardFocusableProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns True</Comment>
      <Comment>[23:46:13:57]:7: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property AutomationElementIdentifiers.IsKeyboardFocusableProperty is True</Comment>
      <Comment>[23:46:13:58]:8: Adding FocusChangedListener</Comment>
      <Comment>[23:46:13:58]:    EVENTS:   Adding AddAutomationFocusChangedEventHandler</Comment>
      <Comment>[23:46:14:30]:    EVENTS:   Got event on...("Button" "" "ImmersiveBackground" )</Comment>
      <Comment>[23:46:15:30]:    EVENTS:      FIRED!! EVENT[0/1]("Button" "" "ImmersiveBackground" )...INFO(AutomationElementIdentifiers.AutomationFocusChangedEvent) Control Path = &lt;ControlType&gt;&lt;AutomationElement&gt;&lt;ControlType&gt;ControlType.Button&lt;/ControlType&gt;&lt;AutomationId&gt;ImmersiveBackground&lt;/AutomationId&gt;&lt;Classname&gt;ApplicationManager_ImmersiveShellWindow&lt;/Classname&gt;&lt;/AutomationElement&gt;&lt;/ControlType&gt;</Comment>
      <Comment>[23:46:15:42]:9: Setting focus to "Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" </Comment>
      <Comment>[23:46:15:42]:9: Calling SetFocus("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:15:69]:    EVENTS:   Got event on...("Pane" "" "" )</Comment>
      <Comment>[23:46:16:44]:9: Successfully called SetFocus() without an exception thrown</Comment>
      <Comment>[23:46:16:44]:10: &lt;ControlType&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TMaxForm1&lt;/Classname&gt;&lt;/AutomationElement&gt;&lt;/ControlType&gt; has the focus</Comment>
      <Comment>[23:46:16:70]:    EVENTS:      FIRED!! EVENT[1/2]("Pane" "" "" )...INFO(AutomationElementIdentifiers.AutomationFocusChangedEvent) Control Path = &lt;ControlType&gt;&lt;AutomationElement&gt;&lt;ControlType&gt;ControlType.Pane&lt;/ControlType&gt;&lt;Classname&gt;ForegroundStaging&lt;/Classname&gt;&lt;/AutomationElement&gt;&lt;/ControlType&gt;</Comment>
      <Comment>[23:46:16:74]:    EVENTS:   Got event on...("Button" "Cancel" "btnCancel" )</Comment>
      <Comment>[23:46:17:20]:10: _________</Comment>
      <Comment>[23:46:17:20]:10: Test Method        = Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests.TestSetFocus1a</Comment>
      <Comment>[23:46:17:20]:10: FailedStep Step    = 10</Comment>
      <Comment>[23:46:17:20]:10: Issue Verification = Check_IsWindow</Comment>
      <Comment>[23:46:17:20]:10: Path               = </Comment>
      <Comment>[23:46:17:20]:10: XML                = &lt;Issue Verification="Check_IsWindow"&gt;&lt;Repro OS="6.2" ClientSideProvider="T" PS="TBD" ControlPath="" Error="Step 10 : There were no element or its children that had focus" CommandLine="" OSVersion="Microsoft Windows NT 6.2.9200.0" Date="27/07/2021 23:46:17" /&gt;&lt;/Issue&gt;</Comment>
      <Comment>[23:46:17:20]:10: _________</Comment>
      <Comment>[23:46:17:24]:10: FailedFilter.xml is saved.</Comment>
      <Exception Unexpected="false" KnownBug="false" IncorrectConfiguration="false">
        <Message>Step 10 : There were no element or it's children that had focus</Message>
        <StackTrace>   at InternalHelper.Tests.TestObject.ThrowMe(CheckType checkType, Exception exceptionThrown, String format, Object[] args)
   at Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests.TS_Focused(AutomationElement m_le, Boolean shouldbe, CheckType checkType)
   at Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests.TestSetFocus1a(TestCaseAttribute testCaseAttribute)</StackTrace>
      </Exception>
      <Comment>[23:46:17:24]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Failed" />
  </Test>
  <Test Id="37">
    <TestInfo>
      <Name>ControlType.Window:SetFocus.10</Name>
      <Summary>Setting focus to list that has no items selected should fire a focus change event</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic, Events</TestCaseType>
      <Description>Precondition: ControlType is ControlType.ListBox</Description>
      <Description>Precondition: Verify that the element's IsOffScreen = false</Description>
      <Description>Precondition: IsSelectionRequired = false</Description>
      <Description>Precondition: Verify that the object's IsKeyboardFocusableProperty == true</Description>
      <Description>Precondition: Make sure that there are no ListItems that are selected</Description>
      <Description>Step: Ensure the AutomationElement does not have focus by calling SetFocus(AutomationElement.RootElement.FirstChild)</Description>
      <Description>Step: Verify that the AutomationElement's HasKeyboardFocusProperty == false</Description>
      <Description>Step: Add FocusChangedListener event on the AutomationElement</Description>
      <Description>Step: Call and verify that SetFocus(AutomationElement) returns true</Description>
      <Description>Step: Wait for events</Description>
      <Description>Step: Verify that AutomationElement or child fired the FocusChangeEvent, or if the AutomationElement is a title bar, then the child in the application</Description>
      <Description>Step: Verify that the AutomationElement's HasKeyboardFocusProperty == true</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestSetFocus10</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:17:36]:0: Verify that AutomationElementIdentifiers.ControlTypeProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns System.Windows.Automation.ControlType</Comment>
      <Comment>[23:46:17:37]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="38">
    <TestInfo>
      <Name>ControlType.Window:SetFocus.3</Name>
      <Summary>If IsKeyboardFocusable == true, verify that when the element does not have the focus and you call SetFocus(), AutomationElement.HasKeyboardFocusProperty == true</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic, Events</TestCaseType>
      <Description>Precondition: Some controls are not persisted after they loose focus (ie, Floating edit in Excel), don't tests these</Description>
      <Description>Precondition: Verify that the element is enabled</Description>
      <Description>Precondition: Verify that the element's IsOffScreen = false</Description>
      <Description>Precondition: Verify that this control supports SetFocus tests</Description>
      <Description>Precondition: Verify that the object's IsFocusableProperty == true</Description>
      <Description>Step: Ensure the AutomationElement does not have focus by calling SetFocus(AutomationElement.RootElement.FirstChild)</Description>
      <Description>Step: Verify that the AutomationElement's HasKeyboardFocusProperty == false</Description>
      <Description>Step: Add FocusChangedListener event on the AutomationElement</Description>
      <Description>Step: Call and verify that SetFocus(AutomationElement) returns true</Description>
      <Description>Step: Wait for events</Description>
      <Description>Step: Verify that AutomationElement or child fired the FocusChangeEvent, or if the AutomationElement is a title bar, then the child in the application</Description>
      <Description>Step: Verify that the AutomationElement's HasKeyboardFocusProperty == true</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestSetFocus3</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:17:41]:2: Verify that AutomationElementIdentifiers.IsOffscreenProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns False</Comment>
      <Comment>[23:46:17:41]:2: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property AutomationElementIdentifiers.IsOffscreenProperty is False</Comment>
      <Comment>[23:46:17:43]:4: Verify that AutomationElementIdentifiers.IsKeyboardFocusableProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns True</Comment>
      <Comment>[23:46:17:43]:4: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property AutomationElementIdentifiers.IsKeyboardFocusableProperty is True</Comment>
      <Comment>[23:46:17:64]:5: Setting focus to "Pane" "Taskbar" "" </Comment>
      <Comment>[23:46:17:64]:5: Calling SetFocus("Pane" "Taskbar" "" )</Comment>
      <Comment>[23:46:17:74]:    EVENTS:      FIRED!! EVENT[0/1]("Button" "Cancel" "btnCancel" )...INFO(AutomationElementIdentifiers.AutomationFocusChangedEvent) Control Path = &lt;ControlType&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;Visual UI Automation Verify : Client Side Provider&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;AutomationId&gt;MainWindow&lt;/AutomationId&gt;&lt;Classname&gt;WindowsForms10.Window.8.app.0.141b42a_r6_ad1&lt;/Classname&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;Tests running&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;AutomationId&gt;RunningTestsWindow&lt;/AutomationId&gt;&lt;Classname&gt;WindowsForms10.Window.8.app.0.141b42a_r6_ad1&lt;/Classname&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;Cancel&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Button&lt;/ControlType&gt;&lt;AutomationId&gt;btnCancel&lt;/AutomationId&gt;&lt;Classname&gt;WindowsForms10.BUTTON.app.0.141b42a_r6_ad1&lt;/Classname&gt;&lt;/AutomationElement&gt;&lt;/AutomationElement&gt;&lt;/AutomationElement&gt;&lt;/ControlType&gt;</Comment>
      <Comment>[23:46:18:66]:5: Successfully called SetFocus() without an exception thrown</Comment>
      <Comment>[23:46:18:66]:6: Verify that AutomationElementIdentifiers.HasKeyboardFocusProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns False</Comment>
      <Comment>[23:46:18:66]:6: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property AutomationElementIdentifiers.HasKeyboardFocusProperty is False</Comment>
      <Comment>[23:46:18:66]:7: Adding FocusChangedListener</Comment>
      <Comment>[23:46:18:66]:    EVENTS:   Adding AddAutomationFocusChangedEventHandler</Comment>
      <Comment>[23:46:19:16]:    EVENTS:   Got event on...("Button" "" "ImmersiveBackground" )</Comment>
      <Comment>[23:46:20:16]:    EVENTS:      FIRED!! EVENT[1/2]("Button" "" "ImmersiveBackground" )...INFO(AutomationElementIdentifiers.AutomationFocusChangedEvent) Control Path = &lt;ControlType&gt;&lt;AutomationElement&gt;&lt;ControlType&gt;ControlType.Button&lt;/ControlType&gt;&lt;AutomationId&gt;ImmersiveBackground&lt;/AutomationId&gt;&lt;Classname&gt;ApplicationManager_ImmersiveShellWindow&lt;/Classname&gt;&lt;/AutomationElement&gt;&lt;/ControlType&gt;</Comment>
      <Comment>[23:46:20:28]:8: Setting focus to "Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" </Comment>
      <Comment>[23:46:20:28]:8: Calling SetFocus("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:20:35]:    EVENTS:   Got event on...("Pane" " PROGRAM Extract_Functions_of_EXE_2;

//depends on the debug, map and symbol options of the co mpiler
//don't stripe the symbols if you wanna see it!
//shows functions and procedures and constructors  out of the EXE , #locs=250
//#head:.txt Max: MAXBOX10: 27/07/2021 18:53:06 C:\maXbox\TestApp2\maxbox2\maxbox2\source_2007\maxbox29\maxbox36beta\256_findfunctions4_of_EXE_80_1.txt _EXE.txt 

CONST                           //s
//&lt;Constant declarations&gt; (loc's=42)
 // AEXENAME = 'maXbox42sign.exe';
  AEXENAME = 'maXbox4.exe';
 
  FUNCTIONLIST = 'maxbox_functions_sortlist47580.txt'; //maxbox_extract_funclist458_.txt';
  ONE_SUGAR_MASS = 3;                              

{TYPE 
&lt;Type declarations&gt; 
&lt;Variable declarations&gt;}
//&lt;PROCEDURE&gt; 
//http://4coder.org/delphi-source-code/?72

var 
  listbox1, listbox2: TListBox;
  funclist, proclist, constrlist, destrlist: integer;

Function EinsteinEnergyCube: extended;
// one sugar cube of 3 gram(m): E=mc^2 example
begin
 //result:= 0.003 * Power(300000000, 2);
 Result:= ONE_SUGAR_MASS/1000 * Power(MetersPerLightSecond, 2);
 //writelegend
end; 

function FileToString(afilename: string): string;
begin
 with TFileStream.Create(afilename, fmOpenRead or fmShareCompat) do begin
   try 
     SetLength(result, Size);
     Read(result, Size);
   finally 
     Free;
   end  
 end
end;

procedure StringToFile(acontent, afilename:string);
begin
 with TFileStream.Create(afilename, fmOpenWrite or fmCreate) do begin
   try
     Write(acontent, length(acontent));
   finally
     Free;
   end
 end  
end;

function SearchAndGet(aStrList: TStrings; aSearchStr: string): string;
var i, TT1, TT2: integer;
    s1, tmps, tmps2: string;
begin
  for i:= 0 to aStrList.Count -1 do begin
    s1:= aStrList[i];
      TT1:= pos(uppercase(aSearchStr), uppercase(s1));
      TT2:= pos(';',s1);
      if (TT1 &gt; 0) and (TT2 &gt; 0) then begin
        tmps:= Copy(s1, TT1, TT2-TT1+1);
        tmps2:= tmps2 + tmps +#13#10;
      end;
  end; 
  result:= tmps2;
end;


function SearchAndGet3(s1: string; aSearchStr: string): TStringlist;
var i, T1, T2, T3, T4: integer;
    tmps: string;
begin
  result:= TStringlist.create;
  result.Sorted:= true;   //before dup!
  result.duplicates:= dupIgnore;
  Delete(s1,0,30)   //skip header
  for i:= 0 to length(s1) do begin
  //writeln(itoa(length(s1)))
    T1:= Pos(uppercase(aSearchStr), uppercase(s1));
    if (T1 &gt; 0) then begin
      Delete(s1,1,T1-1)    //delete before
      T2:= Pos('(',s1);   // with params
      T3:= Pos(':',s1);   // no params
      if (T2 &gt; 0) or (T3 &gt; 0) then begin
        if T3 &gt; 0 then
          t4:= Pos(')',s1);
        if t4 &gt; 0 then 
          tmps:= Copy(s1, 0, t3+ t4+2);
        result.add(tmps) 
        if (T3 &gt; 0) and (T4 &gt; 0) then   
          //Delete(s1,1,T3+ t4+2);
          Delete(s1,1,T3+ 2);  //delete found after
      end; 
    end else Break;
  end;
  result.sort; 
end;

function SelectLine(Memo: TMemo; Zeile,Pos: integer): integer;
Var j: integer;
begin
 Result:= 0;
 If Zeile &gt; 0 then
    For j:= 0 To Zeile-1 do Result:= Result + Length(Memo.Lines[j])+ 2;
 Result:= Result +  Pos;
end;

procedure MergeStrings(Dest, Source: TStrings);
var
  I, DI: Integer;
  begin
  for I := 0 to Source.Count - 1 do begin
    if Pos ('=', Source[I]) &gt; 1 then begin
      DI := Dest.IndexOfName(Source.Names[I]);
      if DI &gt; -1 then Dest[DI] := Source[I];
    end;
  end;
end;
 
procedure TForm1_Button1Click(Sender: TObject);
begin
  MergeStrings(ListBox1.Items, ListBox2.Items);
end;
 
procedure TForm1_FormCreate(Sender: TObject);
begin
  ListBox1.Items.Add('Plants = 10');
  ListBox1.Items.Add('Animals = 20');
  ListBox1.Items.Add('Minerals = 15');
  ListBox2.Items.Add('Animals = 4');
  ListBox2.Items.Add('Plants = 3');
  ListBox2.Items.Add('Minerals = 778');
end;

var 
  myfile, listback: TStringList;
  strback: string; 
  //mi: IStreamLoader;
  //mm: TMemoryStream;
  insize,i: integer;

BEGIN  //Main
//&lt;Executable statements" "8326688" )</Comment>
      <Comment>[23:46:21:29]:8: Successfully called SetFocus() without an exception thrown</Comment>
      <Comment>[23:46:21:29]:9: Waiting for 1 event(s)</Comment>
      <Comment>[23:46:21:29]:    EVENTS:   Waiting for a period of 2000 milliseconds for no events to occur</Comment>
      <Comment>[23:46:21:29]:    EVENTS:      FIRED!! EVENT[2/3]("Pane" " PROGRAM Extract_Functions_of_EXE_2;

//depends on the debug, map and symbol options of the co mpiler
//don't stripe the symbols if you wanna see it!
//shows functions and procedures and constructors  out of the EXE , #locs=250
//#head:.txt Max: MAXBOX10: 27/07/2021 18:53:06 C:\maXbox\TestApp2\maxbox2\maxbox2\source_2007\maxbox29\maxbox36beta\256_findfunctions4_of_EXE_80_1.txt _EXE.txt 

CONST                           //s
//&lt;Constant declarations&gt; (loc's=42)
 // AEXENAME = 'maXbox42sign.exe';
  AEXENAME = 'maXbox4.exe';
 
  FUNCTIONLIST = 'maxbox_functions_sortlist47580.txt'; //maxbox_extract_funclist458_.txt';
  ONE_SUGAR_MASS = 3;                              

[TYPE 
&lt;Type declarations&gt; 
&lt;Variable declarations&gt;]
//&lt;PROCEDURE&gt; 
//http://4coder.org/delphi-source-code/?72

var 
  listbox1, listbox2: TListBox;
  funclist, proclist, constrlist, destrlist: integer;

Function EinsteinEnergyCube: extended;
// one sugar cube of 3 gram(m): E=mc^2 example
begin
 //result:= 0.003 * Power(300000000, 2);
 Result:= ONE_SUGAR_MASS/1000 * Power(MetersPerLightSecond, 2);
 //writelegend
end; 

function FileToString(afilename: string): string;
begin
 with TFileStream.Create(afilename, fmOpenRead or fmShareCompat) do begin
   try 
     SetLength(result, Size);
     Read(result, Size);
   finally 
     Free;
   end  
 end
end;

procedure StringToFile(acontent, afilename:string);
begin
 with TFileStream.Create(afilename, fmOpenWrite or fmCreate) do begin
   try
     Write(acontent, length(acontent));
   finally
     Free;
   end
 end  
end;

function SearchAndGet(aStrList: TStrings; aSearchStr: string): string;
var i, TT1, TT2: integer;
    s1, tmps, tmps2: string;
begin
  for i:= 0 to aStrList.Count -1 do begin
    s1:= aStrList[i];
      TT1:= pos(uppercase(aSearchStr), uppercase(s1));
      TT2:= pos(';',s1);
      if (TT1 &gt; 0) and (TT2 &gt; 0) then begin
        tmps:= Copy(s1, TT1, TT2-TT1+1);
        tmps2:= tmps2 + tmps +#13#10;
      end;
  end; 
  result:= tmps2;
end;


function SearchAndGet3(s1: string; aSearchStr: string): TStringlist;
var i, T1, T2, T3, T4: integer;
    tmps: string;
begin
  result:= TStringlist.create;
  result.Sorted:= true;   //before dup!
  result.duplicates:= dupIgnore;
  Delete(s1,0,30)   //skip header
  for i:= 0 to length(s1) do begin
  //writeln(itoa(length(s1)))
    T1:= Pos(uppercase(aSearchStr), uppercase(s1));
    if (T1 &gt; 0) then begin
      Delete(s1,1,T1-1)    //delete before
      T2:= Pos('(',s1);   // with params
      T3:= Pos(':',s1);   // no params
      if (T2 &gt; 0) or (T3 &gt; 0) then begin
        if T3 &gt; 0 then
          t4:= Pos(')',s1);
        if t4 &gt; 0 then 
          tmps:= Copy(s1, 0, t3+ t4+2);
        result.add(tmps) 
        if (T3 &gt; 0) and (T4 &gt; 0) then   
          //Delete(s1,1,T3+ t4+2);
          Delete(s1,1,T3+ 2);  //delete found after
      end; 
    end else Break;
  end;
  result.sort; 
end;

function SelectLine(Memo: TMemo; Zeile,Pos: integer): integer;
Var j: integer;
begin
 Result:= 0;
 If Zeile &gt; 0 then
    For j:= 0 To Zeile-1 do Result:= Result + Length(Memo.Lines[j])+ 2;
 Result:= Result +  Pos;
end;

procedure MergeStrings(Dest, Source: TStrings);
var
  I, DI: Integer;
  begin
  for I := 0 to Source.Count - 1 do begin
    if Pos ('=', Source[I]) &gt; 1 then begin
      DI := Dest.IndexOfName(Source.Names[I]);
      if DI &gt; -1 then Dest[DI] := Source[I];
    end;
  end;
end;
 
procedure TForm1_Button1Click(Sender: TObject);
begin
  MergeStrings(ListBox1.Items, ListBox2.Items);
end;
 
procedure TForm1_FormCreate(Sender: TObject);
begin
  ListBox1.Items.Add('Plants = 10');
  ListBox1.Items.Add('Animals = 20');
  ListBox1.Items.Add('Minerals = 15');
  ListBox2.Items.Add('Animals = 4');
  ListBox2.Items.Add('Plants = 3');
  ListBox2.Items.Add('Minerals = 778');
end;

var 
  myfile, listback: TStringList;
  strback: string; 
  //mi: IStreamLoader;
  //mm: TMemoryStream;
  insize,i: integer;

BEGIN  //Main
//&lt;Executable statements" "8326688" )...INFO(AutomationElementIdentifiers.AutomationFocusChangedEvent) Control Path = &lt;ControlType&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TMaxForm1&lt;/Classname&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt; PROGRAM Extract_Functions_of_EXE_2;

//depends on the debug, map and symbol options of the co mpiler
//don't stripe the symbols if you wanna see it!
//shows functions and procedures and constructors  out of the EXE , #locs=250
//#head:.txt Max: MAXBOX10: 27/07/2021 18:53:06 C:\maXbox\TestApp2\maxbox2\maxbox2\source_2007\maxbox29\maxbox36beta\256_findfunctions4_of_EXE_80_1.txt _EXE.txt 

CONST                           //s
//&amp;lt;Constant declarations&amp;gt; (loc's=42)
 // AEXENAME = 'maXbox42sign.exe';
  AEXENAME = 'maXbox4.exe';
 
  FUNCTIONLIST = 'maxbox_functions_sortlist47580.txt'; //maxbox_extract_funclist458_.txt';
  ONE_SUGAR_MASS = 3;                              

[TYPE 
&amp;lt;Type declarations&amp;gt; 
&amp;lt;Variable declarations&amp;gt;]
//&amp;lt;PROCEDURE&amp;gt; 
//http://4coder.org/delphi-source-code/?72

var 
  listbox1, listbox2: TListBox;
  funclist, proclist, constrlist, destrlist: integer;

Function EinsteinEnergyCube: extended;
// one sugar cube of 3 gram(m): E=mc^2 example
begin
 //result:= 0.003 * Power(300000000, 2);
 Result:= ONE_SUGAR_MASS/1000 * Power(MetersPerLightSecond, 2);
 //writelegend
end; 

function FileToString(afilename: string): string;
begin
 with TFileStream.Create(afilename, fmOpenRead or fmShareCompat) do begin
   try 
     SetLength(result, Size);
     Read(result, Size);
   finally 
     Free;
   end  
 end
end;

procedure StringToFile(acontent, afilename:string);
begin
 with TFileStream.Create(afilename, fmOpenWrite or fmCreate) do begin
   try
     Write(acontent, length(acontent));
   finally
     Free;
   end
 end  
end;

function SearchAndGet(aStrList: TStrings; aSearchStr: string): string;
var i, TT1, TT2: integer;
    s1, tmps, tmps2: string;
begin
  for i:= 0 to aStrList.Count -1 do begin
    s1:= aStrList[i];
      TT1:= pos(uppercase(aSearchStr), uppercase(s1));
      TT2:= pos(';',s1);
      if (TT1 &amp;gt; 0) and (TT2 &amp;gt; 0) then begin
        tmps:= Copy(s1, TT1, TT2-TT1+1);
        tmps2:= tmps2 + tmps +#13#10;
      end;
  end; 
  result:= tmps2;
end;


function SearchAndGet3(s1: string; aSearchStr: string): TStringlist;
var i, T1, T2, T3, T4: integer;
    tmps: string;
begin
  result:= TStringlist.create;
  result.Sorted:= true;   //before dup!
  result.duplicates:= dupIgnore;
  Delete(s1,0,30)   //skip header
  for i:= 0 to length(s1) do begin
  //writeln(itoa(length(s1)))
    T1:= Pos(uppercase(aSearchStr), uppercase(s1));
    if (T1 &amp;gt; 0) then begin
      Delete(s1,1,T1-1)    //delete before
      T2:= Pos('(',s1);   // with params
      T3:= Pos(':',s1);   // no params
      if (T2 &amp;gt; 0) or (T3 &amp;gt; 0) then begin
        if T3 &amp;gt; 0 then
          t4:= Pos(')',s1);
        if t4 &amp;gt; 0 then 
          tmps:= Copy(s1, 0, t3+ t4+2);
        result.add(tmps) 
        if (T3 &amp;gt; 0) and (T4 &amp;gt; 0) then   
          //Delete(s1,1,T3+ t4+2);
          Delete(s1,1,T3+ 2);  //delete found after
      end; 
    end else Break;
  end;
  result.sort; 
end;

function SelectLine(Memo: TMemo; Zeile,Pos: integer): integer;
Var j: integer;
begin
 Result:= 0;
 If Zeile &amp;gt; 0 then
    For j:= 0 To Zeile-1 do Result:= Result + Length(Memo.Lines[j])+ 2;
 Result:= Result +  Pos;
end;

procedure MergeStrings(Dest, Source: TStrings);
var
  I, DI: Integer;
  begin
  for I := 0 to Source.Count - 1 do begin
    if Pos ('=', Source[I]) &amp;gt; 1 then begin
      DI := Dest.IndexOfName(Source.Names[I]);
      if DI &amp;gt; -1 then Dest[DI] := Source[I];
    end;
  end;
end;
 
procedure TForm1_Button1Click(Sender: TObject);
begin
  MergeStrings(ListBox1.Items, ListBox2.Items);
end;
 
procedure TForm1_FormCreate(Sender: TObject);
begin
  ListBox1.Items.Add('Plants = 10');
  ListBox1.Items.Add('Animals = 20');
  ListBox1.Items.Add('Minerals = 15');
  ListBox2.Items.Add('Animals = 4');
  ListBox2.Items.Add('Plants = 3');
  ListBox2.Items.Add('Minerals = 778');
end;

var 
  myfile, listback: TStringList;
  strback: string; 
  //mi: IStreamLoader;
  //mm: TMemoryStream;
  insize,i: integer;

BEGIN  //Main
//&amp;lt;Executable statements&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Pane&lt;/ControlType&gt;&lt;AutomationId&gt;8326688&lt;/AutomationId&gt;&lt;Classname&gt;TSynMemo&lt;/Classname&gt;&lt;/AutomationElement&gt;&lt;/AutomationElement&gt;&lt;/ControlType&gt;</Comment>
      <Comment>[23:46:23:30]:    EVENTS:   Stop waiting for events.  Found 3 event(s)</Comment>
      <Comment>[23:46:23:30]:9: End waiting for events</Comment>
      <Comment>[23:46:23:32]:10: Start: Looking for event that might have been fired</Comment>
      <Comment>[23:46:23:32]:    EVENTS:   3 was/were fired</Comment>
      <Comment>[23:46:23:33]:10: End : Looking for event that might have been fired</Comment>
      <Comment>[23:46:23:33]:10: Focus change event did get fired and was expected to be fired</Comment>
      <Comment>[23:46:23:41]:    EVENTS:   Got event on...("Pane" "" "" )</Comment>
      <Comment>[23:46:23:41]:    EVENTS:      FIRED!! EVENT[3/4]("Pane" "" "" )...INFO(AutomationElementIdentifiers.AutomationFocusChangedEvent) Control Path = &lt;ControlType&gt;&lt;AutomationElement&gt;&lt;ControlType&gt;ControlType.Pane&lt;/ControlType&gt;&lt;Classname&gt;ForegroundStaging&lt;/Classname&gt;&lt;/AutomationElement&gt;&lt;/ControlType&gt;</Comment>
      <Comment>[23:46:23:54]:    EVENTS:   Got event on...("Button" "Cancel" "btnCancel" )</Comment>
      <Comment>[23:46:24:10]:11: _________</Comment>
      <Comment>[23:46:24:10]:11: Test Method        = Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests.TestSetFocus3</Comment>
      <Comment>[23:46:24:10]:11: FailedStep Step    = 11</Comment>
      <Comment>[23:46:24:10]:11: Issue Verification = Check_IsWindow</Comment>
      <Comment>[23:46:24:10]:11: Path               = </Comment>
      <Comment>[23:46:24:10]:11: XML                = &lt;Issue Verification="Check_IsWindow"&gt;&lt;Repro OS="6.2" ClientSideProvider="T" PS="TBD" ControlPath="" Error="Step 11 : Could not find any element or child whos property is &amp;quot;AutomationElementIdentifiers.HasKeyboardFocusProperty&amp;quot; is &amp;quot;True&amp;quot;" CommandLine="" OSVersion="Microsoft Windows NT 6.2.9200.0" Date="27/07/2021 23:46:24" /&gt;&lt;/Issue&gt;</Comment>
      <Comment>[23:46:24:10]:11: _________</Comment>
      <Comment>[23:46:24:10]:11: FailedFilter.xml is saved.</Comment>
      <Exception Unexpected="false" KnownBug="false" IncorrectConfiguration="false">
        <Message>Step 11 : Could not find any element or child whos property is "AutomationElementIdentifiers.HasKeyboardFocusProperty" is "True"</Message>
        <StackTrace>   at InternalHelper.Tests.TestObject.ThrowMe(CheckType checkType, Exception exceptionThrown, String format, Object[] args)
   at InternalHelper.Tests.TestObject.TS_VerifyOnElementOrChild(AutomationElement element, AutomationProperty property, Object compareValue, Boolean shouldBeEqual, CheckType checkType)
   at Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests.TestSetFocus3(TestCaseAttribute testCaseAttribute)</StackTrace>
      </Exception>
      <Comment>[23:46:24:10]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Failed" />
  </Test>
  <Test Id="39">
    <TestInfo>
      <Name>ControlType.Window:AutomationElement.PropertyChange.Enabled.1</Name>
      <Summary>Verify that PropertyChangeEvent is fired when disabled element is enabled</Summary>
      <Priority>Pri2</Priority>
      <Status>Works</Status>
      <Author />
      <TestCaseType>Generic, Scenario, Events</TestCaseType>
      <Description>Precondition: Verify that this control supports testing PropertyChanges</Description>
      <Description>Step: Reset the control to it's original state</Description>
      <Description>Step: Display the current AutomationElement.IsEnabledProperty</Description>
      <Description>Step: Add Property Change Listener</Description>
      <Description>Step: Change the AutomationElement.IsEnabledProperty of the element</Description>
      <Description>Step: Wait for 1 event</Description>
      <Description>Step: Display the current AutomationElement.IsEnabledProperty</Description>
      <Description>Verify: That a property change event was fired</Description>
      <Description>Step: Reset the control to it's initial state</Description>
      <Description>Step: Display the current AutomationElement.IsEnabledProperty</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>PropertyChangeEnabled1</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:24:15]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="40">
    <TestInfo>
      <Name>ControlType.Window:AutomationElement.PropertyChange.Name.1</Name>
      <Summary>Verify that PropertyChangeEvent is fired for AutomationElement.NameProperty</Summary>
      <Priority>Pri2</Priority>
      <Status>Works</Status>
      <Author />
      <TestCaseType>Generic, Scenario, Events</TestCaseType>
      <Description>Precondition: Verify that this control supports testing PropertyChanges</Description>
      <Description>Step: Reset the control to it's original state</Description>
      <Description>Step: Display the current AutomationElement.NameProperty</Description>
      <Description>Step: Add Property Change Listener</Description>
      <Description>Step: Change the name of the element</Description>
      <Description>Step: Wait for 1 event</Description>
      <Description>Step: Display the current AutomationElement.NameProperty</Description>
      <Description>Verify: That a property change event was fired</Description>
      <Description>Step: Reset the control to it's initial state</Description>
      <Description>Step: Display the current AutomationElement.NameProperty</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>PropertyChangeName1</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:24:18]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="41">
    <TestInfo>
      <Name>ControlType.Window:GetCurrentPattern.1</Name>
      <Summary>Enumerate through all the Automation.Pattern variables, and call GetCurrentPattern().  If the value of Is*PatternAvailableProperty true, verify that GetCurrentPattern() succeeds, else if Is*PatternAvailableProperty is false then InvalidOperationException is thrown </Summary>
      <Priority>Pri2</Priority>
      <Status>Works</Status>
      <Author />
      <TestCaseType>Generic</TestCaseType>
      <Description>Verify success call to GetCurrentPattern(*Pattern.PatternObject)</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestAllPattern</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:24:24]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="42">
    <TestInfo>
      <Name>ControlType.Window:GetCurrentPropertyValue.1</Name>
      <Summary>Enumerating through all AutomationProperties using reflection and call GetCurrentPropertyValue().  Verrify that no exception is thrown</Summary>
      <Priority>Pri2</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Verify success call to all GetCurrentPropertyValue(AutomationElement property)</Description>
      <Description>Verify success call to all GetCurrentPropertyValue(AutomationPattern property)</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestProperty1</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:24:28]:0: Do the AutomationProperties off of the AutomationElement</Comment>
      <Comment>[23:46:24:28]:0: Getting property value for (AcceleratorKeyProperty)</Comment>
      <Comment>[23:46:24:28]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.AcceleratorKeyProperty)</Comment>
      <Comment>[23:46:24:28]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.AcceleratorKeyProperty)</Comment>
      <Comment>[23:46:24:28]:0: Getting property value for (AccessKeyProperty)</Comment>
      <Comment>[23:46:24:28]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.AccessKeyProperty)</Comment>
      <Comment>[23:46:24:28]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.AccessKeyProperty)</Comment>
      <Comment>[23:46:24:28]:0: Getting property value for (AutomationIdProperty)</Comment>
      <Comment>[23:46:24:28]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.AutomationIdProperty)</Comment>
      <Comment>[23:46:24:28]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.AutomationIdProperty)</Comment>
      <Comment>[23:46:24:28]:0: Getting property value for (BoundingRectangleProperty)</Comment>
      <Comment>[23:46:24:28]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.BoundingRectangleProperty)</Comment>
      <Comment>[23:46:24:28]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.BoundingRectangleProperty)</Comment>
      <Comment>[23:46:24:28]:0: Getting property value for (ClassNameProperty)</Comment>
      <Comment>[23:46:24:28]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.ClassNameProperty)</Comment>
      <Comment>[23:46:24:28]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.ClassNameProperty)</Comment>
      <Comment>[23:46:24:28]:0: Getting property value for (ClickablePointProperty)</Comment>
      <Comment>[23:46:24:28]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.ClickablePointProperty)</Comment>
      <Comment>[23:46:24:28]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.ClickablePointProperty)</Comment>
      <Comment>[23:46:24:28]:0: Getting property value for (ControlTypeProperty)</Comment>
      <Comment>[23:46:24:28]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.ControlTypeProperty)</Comment>
      <Comment>[23:46:24:28]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.ControlTypeProperty)</Comment>
      <Comment>[23:46:24:28]:0: Getting property value for (CultureProperty)</Comment>
      <Comment>[23:46:24:28]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.CultureProperty)</Comment>
      <Comment>[23:46:24:28]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.CultureProperty)</Comment>
      <Comment>[23:46:24:28]:0: Getting property value for (FrameworkIdProperty)</Comment>
      <Comment>[23:46:24:28]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.FrameworkIdProperty)</Comment>
      <Comment>[23:46:24:28]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.FrameworkIdProperty)</Comment>
      <Comment>[23:46:24:28]:0: Getting property value for (HasKeyboardFocusProperty)</Comment>
      <Comment>[23:46:24:28]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.HasKeyboardFocusProperty)</Comment>
      <Comment>[23:46:24:28]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.HasKeyboardFocusProperty)</Comment>
      <Comment>[23:46:24:28]:0: Getting property value for (HelpTextProperty)</Comment>
      <Comment>[23:46:24:28]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.HelpTextProperty)</Comment>
      <Comment>[23:46:24:28]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.HelpTextProperty)</Comment>
      <Comment>[23:46:24:28]:0: Getting property value for (IsContentElementProperty)</Comment>
      <Comment>[23:46:24:28]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsContentElementProperty)</Comment>
      <Comment>[23:46:24:28]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsContentElementProperty)</Comment>
      <Comment>[23:46:24:28]:0: Getting property value for (IsControlElementProperty)</Comment>
      <Comment>[23:46:24:28]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsControlElementProperty)</Comment>
      <Comment>[23:46:24:28]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsControlElementProperty)</Comment>
      <Comment>[23:46:24:28]:0: Getting property value for (IsDockPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:28]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsDockPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:28]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsDockPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:28]:0: Getting property value for (IsEnabledProperty)</Comment>
      <Comment>[23:46:24:28]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsEnabledProperty)</Comment>
      <Comment>[23:46:24:28]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsEnabledProperty)</Comment>
      <Comment>[23:46:24:28]:0: Getting property value for (IsExpandCollapsePatternAvailableProperty)</Comment>
      <Comment>[23:46:24:28]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsExpandCollapsePatternAvailableProperty)</Comment>
      <Comment>[23:46:24:28]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsExpandCollapsePatternAvailableProperty)</Comment>
      <Comment>[23:46:24:28]:0: Getting property value for (IsGridItemPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:28]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsGridItemPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:28]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsGridItemPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:28]:0: Getting property value for (IsGridPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:28]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsGridPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:28]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsGridPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:28]:0: Getting property value for (IsInvokePatternAvailableProperty)</Comment>
      <Comment>[23:46:24:28]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsInvokePatternAvailableProperty)</Comment>
      <Comment>[23:46:24:28]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsInvokePatternAvailableProperty)</Comment>
      <Comment>[23:46:24:28]:0: Getting property value for (IsKeyboardFocusableProperty)</Comment>
      <Comment>[23:46:24:28]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsKeyboardFocusableProperty)</Comment>
      <Comment>[23:46:24:28]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsKeyboardFocusableProperty)</Comment>
      <Comment>[23:46:24:28]:0: Getting property value for (IsMultipleViewPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:28]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsMultipleViewPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:28]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsMultipleViewPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:28]:0: Getting property value for (IsOffscreenProperty)</Comment>
      <Comment>[23:46:24:28]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsOffscreenProperty)</Comment>
      <Comment>[23:46:24:28]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsOffscreenProperty)</Comment>
      <Comment>[23:46:24:28]:0: Getting property value for (IsPasswordProperty)</Comment>
      <Comment>[23:46:24:28]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsPasswordProperty)</Comment>
      <Comment>[23:46:24:28]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsPasswordProperty)</Comment>
      <Comment>[23:46:24:28]:0: Getting property value for (IsRangeValuePatternAvailableProperty)</Comment>
      <Comment>[23:46:24:28]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsRangeValuePatternAvailableProperty)</Comment>
      <Comment>[23:46:24:28]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsRangeValuePatternAvailableProperty)</Comment>
      <Comment>[23:46:24:28]:0: Getting property value for (IsRequiredForFormProperty)</Comment>
      <Comment>[23:46:24:28]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsRequiredForFormProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsRequiredForFormProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (IsScrollItemPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsScrollItemPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsScrollItemPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (IsScrollPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsScrollPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsScrollPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (IsSelectionItemPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsSelectionItemPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsSelectionItemPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (IsSelectionPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsSelectionPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsSelectionPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (IsTableItemPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsTableItemPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsTableItemPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (IsTablePatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsTablePatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsTablePatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (IsTextPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsTextPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsTextPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (IsTogglePatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsTogglePatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsTogglePatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (IsTransformPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsTransformPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsTransformPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (IsValuePatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsValuePatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsValuePatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (IsWindowPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsWindowPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsWindowPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (ItemStatusProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.ItemStatusProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.ItemStatusProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (ItemTypeProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.ItemTypeProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.ItemTypeProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (LabeledByProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.LabeledByProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.LabeledByProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (LocalizedControlTypeProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.LocalizedControlTypeProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.LocalizedControlTypeProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (NameProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.NameProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.NameProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (NativeWindowHandleProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.NativeWindowHandleProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.NativeWindowHandleProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (OrientationProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.OrientationProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.OrientationProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (ProcessIdProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.ProcessIdProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.ProcessIdProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (RuntimeIdProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.RuntimeIdProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.RuntimeIdProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (IsLegacyIAccessiblePatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsLegacyIAccessiblePatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsLegacyIAccessiblePatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (IsItemContainerPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsItemContainerPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsItemContainerPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (IsVirtualizedItemPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsVirtualizedItemPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsVirtualizedItemPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (IsSynchronizedInputPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsSynchronizedInputPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsSynchronizedInputPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (AriaRoleProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.AriaRoleProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.AriaRoleProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (AriaPropertiesProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.AriaPropertiesProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.AriaPropertiesProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (IsDataValidForFormProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsDataValidForFormProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsDataValidForFormProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (ControllerForProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.ControllerForProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.ControllerForProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (DescribedByProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.DescribedByProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.DescribedByProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (FlowsToProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.FlowsToProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.FlowsToProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (ProviderDescriptionProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.Property)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.Property)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (IsObjectModelPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsObjectModelPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsObjectModelPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (IsAnnotationPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsAnnotationPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsAnnotationPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (IsTextPattern2AvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsTextPattern2AvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsTextPattern2AvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (IsStylesPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsStylesPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsStylesPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (IsSpreadsheetPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsSpreadsheetPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsSpreadsheetPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (IsSpreadsheetItemPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsSpreadsheetItemPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsSpreadsheetItemPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (IsTransformPattern2AvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsTransformPattern2AvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsTransformPattern2AvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (IsTextChildPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsTextChildPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsTextChildPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Getting property value for (IsDragPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:30]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsDragPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:31]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsDragPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:31]:0: Getting property value for (IsDropTargetPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:31]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsDropTargetPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:31]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsDropTargetPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:31]:0: Getting property value for (OptimizeForVisualContentProperty)</Comment>
      <Comment>[23:46:24:31]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.OptimizeForVisualContentProperty)</Comment>
      <Comment>[23:46:24:31]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.OptimizeForVisualContentProperty)</Comment>
      <Comment>[23:46:24:31]:0: Getting property value for (LiveSettingProperty)</Comment>
      <Comment>[23:46:24:31]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.LiveSettingProperty)</Comment>
      <Comment>[23:46:24:31]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.LiveSettingProperty)</Comment>
      <Comment>[23:46:24:31]:0: Getting property value for (FlowsFromProperty)</Comment>
      <Comment>[23:46:24:31]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.FlowsFromProperty)</Comment>
      <Comment>[23:46:24:31]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.FlowsFromProperty)</Comment>
      <Comment>[23:46:24:31]:0: Getting property value for (IsTextEditPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:31]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsTextEditPatternAvailable)</Comment>
      <Comment>[23:46:24:31]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsTextEditPatternAvailable)</Comment>
      <Comment>[23:46:24:31]:0: Getting property value for (IsPeripheralProperty)</Comment>
      <Comment>[23:46:24:31]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsPeripheralProperty)</Comment>
      <Comment>[23:46:24:31]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsPeripheralProperty)</Comment>
      <Comment>[23:46:24:31]:0: Getting property value for (IsCustomNavigationPatternAvailableProperty)</Comment>
      <Comment>[23:46:24:31]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.IsCustomNavigationPatternAvailable)</Comment>
      <Comment>[23:46:24:31]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.IsCustomNavigationPatternAvailable)</Comment>
      <Comment>[23:46:24:31]:0: Getting property value for (PositionInSetProperty)</Comment>
      <Comment>[23:46:24:31]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.PositionInSet)</Comment>
      <Comment>[23:46:24:31]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.PositionInSet)</Comment>
      <Comment>[23:46:24:31]:0: Getting property value for (SizeOfSetProperty)</Comment>
      <Comment>[23:46:24:31]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.SizeOfSet)</Comment>
      <Comment>[23:46:24:31]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.SizeOfSet)</Comment>
      <Comment>[23:46:24:31]:0: Getting property value for (LevelProperty)</Comment>
      <Comment>[23:46:24:31]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.Level)</Comment>
      <Comment>[23:46:24:31]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.Level)</Comment>
      <Comment>[23:46:24:31]:0: Getting property value for (AnnotationTypes)</Comment>
      <Comment>[23:46:24:31]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.AnnotationTypes)</Comment>
      <Comment>[23:46:24:31]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.AnnotationTypes)</Comment>
      <Comment>[23:46:24:31]:0: Getting property value for (AnnotationObjects)</Comment>
      <Comment>[23:46:24:31]:0: Calling GetCurrentPropertyValue(AutomationElementIdentifiers.AnnotationObjects)</Comment>
      <Comment>[23:46:24:31]:0: Obtained GetCurrentPropertyValue(AutomationElementIdentifiers.AnnotationObjects)</Comment>
      <Comment>[23:46:24:31]:1: Do the AutomationProperties off of the Pattern objects</Comment>
      <Comment>[23:46:24:31]:1: Getting property value for (AnnotationTypeIdProperty)</Comment>
      <Comment>[23:46:24:31]:1: Calling GetCurrentPropertyValue(AnnotationPatternIdentifiers.AnnotationTypeIdProperty)</Comment>
      <Comment>[23:46:24:31]:1: Obtained GetCurrentPropertyValue(AnnotationPatternIdentifiers.AnnotationTypeIdProperty)</Comment>
      <Comment>[23:46:24:31]:1: Getting property value for (AnnotationTypeNameProperty)</Comment>
      <Comment>[23:46:24:31]:1: Calling GetCurrentPropertyValue(AnnotationPatternIdentifiers.AnnotationTypeNameProperty)</Comment>
      <Comment>[23:46:24:31]:1: Obtained GetCurrentPropertyValue(AnnotationPatternIdentifiers.AnnotationTypeNameProperty)</Comment>
      <Comment>[23:46:24:31]:1: Getting property value for (AuthorProperty)</Comment>
      <Comment>[23:46:24:31]:1: Calling GetCurrentPropertyValue(AnnotationPatternIdentifiers.AuthorProperty)</Comment>
      <Comment>[23:46:24:31]:1: Obtained GetCurrentPropertyValue(AnnotationPatternIdentifiers.AuthorProperty)</Comment>
      <Comment>[23:46:24:31]:1: Getting property value for (DateTimeProperty)</Comment>
      <Comment>[23:46:24:31]:1: Calling GetCurrentPropertyValue(AnnotationPatternIdentifiers.DateTimeProperty)</Comment>
      <Comment>[23:46:24:31]:1: Obtained GetCurrentPropertyValue(AnnotationPatternIdentifiers.DateTimeProperty)</Comment>
      <Comment>[23:46:24:31]:1: Getting property value for (TargetProperty)</Comment>
      <Comment>[23:46:24:31]:1: Calling GetCurrentPropertyValue(AnnotationPatternIdentifiers.TargetProperty)</Comment>
      <Comment>[23:46:24:31]:1: Obtained GetCurrentPropertyValue(AnnotationPatternIdentifiers.TargetProperty)</Comment>
      <Comment>[23:46:24:31]:1: Getting property value for (DockPositionProperty)</Comment>
      <Comment>[23:46:24:31]:1: Calling GetCurrentPropertyValue(DockPatternIdentifiers.DockPositionProperty)</Comment>
      <Comment>[23:46:24:31]:1: Obtained GetCurrentPropertyValue(DockPatternIdentifiers.DockPositionProperty)</Comment>
      <Comment>[23:46:24:31]:1: Getting property value for (IsGrabbedProperty)</Comment>
      <Comment>[23:46:24:31]:1: Calling GetCurrentPropertyValue(DragPatternIdentifiers.IsGrabbedProperty)</Comment>
      <Comment>[23:46:24:31]:1: Obtained GetCurrentPropertyValue(DragPatternIdentifiers.IsGrabbedProperty)</Comment>
      <Comment>[23:46:24:31]:1: Getting property value for (GrabbedItemsProperty)</Comment>
      <Comment>[23:46:24:31]:1: Calling GetCurrentPropertyValue(DragPatternIdentifiers.GrabbedItemsProperty)</Comment>
      <Comment>[23:46:24:31]:1: Obtained GetCurrentPropertyValue(DragPatternIdentifiers.GrabbedItemsProperty)</Comment>
      <Comment>[23:46:24:31]:1: Getting property value for (DropEffectProperty)</Comment>
      <Comment>[23:46:24:31]:1: Calling GetCurrentPropertyValue(DragPatternIdentifiers.DropEffectProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(DragPatternIdentifiers.DropEffectProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (DropEffectsProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(DragPatternIdentifiers.DropEffectsProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(DragPatternIdentifiers.DropEffectsProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (DropTargetEffectProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(DropTargetPatternIdentifiers.DropTargetEffectProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(DropTargetPatternIdentifiers.DropTargetEffectProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (DropTargetEffectsProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(DropTargetPatternIdentifiers.DropTargetEffectsProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(DropTargetPatternIdentifiers.DropTargetEffectsProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (ExpandCollapseStateProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(ExpandCollapsePatternIdentifiers.ExpandCollapseStateProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(ExpandCollapsePatternIdentifiers.ExpandCollapseStateProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (ColumnCountProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(GridPatternIdentifiers.ColumnCountProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(GridPatternIdentifiers.ColumnCountProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (RowCountProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(GridPatternIdentifiers.RowCountProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(GridPatternIdentifiers.RowCountProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (ColumnProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(GridItemPatternIdentifiers.ColumnProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(GridItemPatternIdentifiers.ColumnProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (ColumnSpanProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(GridItemPatternIdentifiers.ColumnSpanProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(GridItemPatternIdentifiers.ColumnSpanProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (ContainingGridProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(GridItemPatternIdentifiers.ContainingGridProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(GridItemPatternIdentifiers.ContainingGridProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (RowProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(GridItemPatternIdentifiers.RowProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(GridItemPatternIdentifiers.RowProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (RowSpanProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(GridItemPatternIdentifiers.RowSpanProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(GridItemPatternIdentifiers.RowSpanProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (ChildIdProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(LegacyIAccessiblePatternIdentifiers.ChildIdProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(LegacyIAccessiblePatternIdentifiers.ChildIdProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (NameProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(LegacyIAccessiblePatternIdentifiers.NameProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(LegacyIAccessiblePatternIdentifiers.NameProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (ValueProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(LegacyIAccessiblePatternIdentifiers.ValueProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(LegacyIAccessiblePatternIdentifiers.ValueProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (DescriptionProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(LegacyIAccessiblePatternIdentifiers.DescriptionProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(LegacyIAccessiblePatternIdentifiers.DescriptionProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (RoleProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(LegacyIAccessiblePatternIdentifiers.RoleProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(LegacyIAccessiblePatternIdentifiers.RoleProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (StateProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(LegacyIAccessiblePatternIdentifiers.StateProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(LegacyIAccessiblePatternIdentifiers.StateProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (HelpProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(LegacyIAccessiblePatternIdentifiers.HelpProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(LegacyIAccessiblePatternIdentifiers.HelpProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (KeyboardShortcutProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(LegacyIAccessiblePatternIdentifiers.KeyboardShortcutProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(LegacyIAccessiblePatternIdentifiers.KeyboardShortcutProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (SelectionProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(LegacyIAccessiblePatternIdentifiers.SelectionProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(LegacyIAccessiblePatternIdentifiers.SelectionProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (DefaultActionProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(LegacyIAccessiblePatternIdentifiers.DefaultActionProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(LegacyIAccessiblePatternIdentifiers.DefaultActionProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (CurrentViewProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(MultipleViewPatternIdentifiers.CurrentViewProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(MultipleViewPatternIdentifiers.CurrentViewProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (SupportedViewsProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(MultipleViewPatternIdentifiers.SupportedViewsProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(MultipleViewPatternIdentifiers.SupportedViewsProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (HorizontallyScrollableProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(ScrollPatternIdentifiers.HorizontallyScrollableProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(ScrollPatternIdentifiers.HorizontallyScrollableProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (HorizontalScrollPercentProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(ScrollPatternIdentifiers.HorizontalScrollPercentProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(ScrollPatternIdentifiers.HorizontalScrollPercentProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (HorizontalViewSizeProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(ScrollPatternIdentifiers.HorizontalViewSizeProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(ScrollPatternIdentifiers.HorizontalViewSizeProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (VerticallyScrollableProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(ScrollPatternIdentifiers.VerticallyScrollableProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(ScrollPatternIdentifiers.VerticallyScrollableProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (VerticalScrollPercentProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(ScrollPatternIdentifiers.VerticalScrollPercentProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(ScrollPatternIdentifiers.VerticalScrollPercentProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (VerticalViewSizeProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(ScrollPatternIdentifiers.VerticalViewSizeProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(ScrollPatternIdentifiers.VerticalViewSizeProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (CanSelectMultipleProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(SelectionPatternIdentifiers.CanSelectMultipleProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(SelectionPatternIdentifiers.CanSelectMultipleProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (IsSelectionRequiredProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(SelectionPatternIdentifiers.IsSelectionRequiredProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(SelectionPatternIdentifiers.IsSelectionRequiredProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (SelectionProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(SelectionPatternIdentifiers.SelectionProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(SelectionPatternIdentifiers.SelectionProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (IsSelectedProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(SelectionItemPatternIdentifiers.IsSelectedProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(SelectionItemPatternIdentifiers.IsSelectedProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (SelectionContainerProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(SelectionItemPatternIdentifiers.SelectionContainerProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(SelectionItemPatternIdentifiers.SelectionContainerProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (FormulaProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(SpreadsheetItemPatternIdentifiers.FormulaProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(SpreadsheetItemPatternIdentifiers.FormulaProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (AnnotationObjectsProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(SpreadsheetItemPatternIdentifiers.AnnotationObjectsProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(SpreadsheetItemPatternIdentifiers.AnnotationObjectsProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (AnnotationTypesProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(SpreadsheetItemPatternIdentifiers.AnnotationTypesProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(SpreadsheetItemPatternIdentifiers.AnnotationTypesProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (StyleIdProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(StylesPatternIdentifiers.StyleIdProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(StylesPatternIdentifiers.StyleIdProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (StyleNameProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(StylesPatternIdentifiers.StyleNameProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(StylesPatternIdentifiers.StyleNameProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (FillColorProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(StylesPatternIdentifiers.FillColorProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(StylesPatternIdentifiers.FillColorProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (FillPatternStyleProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(StylesPatternIdentifiers.FillPatternStyleProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(StylesPatternIdentifiers.FillPatternStyleProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (ShapeProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(StylesPatternIdentifiers.ShapeProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(StylesPatternIdentifiers.ShapeProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (FillPatternColorProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(StylesPatternIdentifiers.FillPatternColorProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(StylesPatternIdentifiers.FillPatternColorProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (ExtendedPropertiesProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(StylesPatternIdentifiers.ExtendedPropertiesProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(StylesPatternIdentifiers.ExtendedPropertiesProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (ToggleStateProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(TogglePatternIdentifiers.ToggleStateProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(TogglePatternIdentifiers.ToggleStateProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (CanMoveProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(TransformPatternIdentifiers.CanMoveProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(TransformPatternIdentifiers.CanMoveProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (CanResizeProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(TransformPatternIdentifiers.CanResizeProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(TransformPatternIdentifiers.CanResizeProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (CanRotateProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(TransformPatternIdentifiers.CanRotateProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(TransformPatternIdentifiers.CanRotateProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (IsReadOnlyProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(RangeValuePatternIdentifiers.IsReadOnlyProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(RangeValuePatternIdentifiers.IsReadOnlyProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (LargeChangeProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(RangeValuePatternIdentifiers.LargeChangeProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(RangeValuePatternIdentifiers.LargeChangeProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (MaximumProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(RangeValuePatternIdentifiers.MaximumProperty)</Comment>
      <Comment>[23:46:24:32]:1: Obtained GetCurrentPropertyValue(RangeValuePatternIdentifiers.MaximumProperty)</Comment>
      <Comment>[23:46:24:32]:1: Getting property value for (MinimumProperty)</Comment>
      <Comment>[23:46:24:32]:1: Calling GetCurrentPropertyValue(RangeValuePatternIdentifiers.MinimumProperty)</Comment>
      <Comment>[23:46:24:34]:1: Obtained GetCurrentPropertyValue(RangeValuePatternIdentifiers.MinimumProperty)</Comment>
      <Comment>[23:46:24:34]:1: Getting property value for (SmallChangeProperty)</Comment>
      <Comment>[23:46:24:34]:1: Calling GetCurrentPropertyValue(RangeValuePatternIdentifiers.SmallChangeProperty)</Comment>
      <Comment>[23:46:24:34]:1: Obtained GetCurrentPropertyValue(RangeValuePatternIdentifiers.SmallChangeProperty)</Comment>
      <Comment>[23:46:24:34]:1: Getting property value for (ValueProperty)</Comment>
      <Comment>[23:46:24:34]:1: Calling GetCurrentPropertyValue(RangeValuePatternIdentifiers.ValueProperty)</Comment>
      <Comment>[23:46:24:34]:1: Obtained GetCurrentPropertyValue(RangeValuePatternIdentifiers.ValueProperty)</Comment>
      <Comment>[23:46:24:34]:1: Getting property value for (IsReadOnlyProperty)</Comment>
      <Comment>[23:46:24:34]:1: Calling GetCurrentPropertyValue(ValuePatternIdentifiers.IsReadOnlyProperty)</Comment>
      <Comment>[23:46:24:34]:1: Obtained GetCurrentPropertyValue(ValuePatternIdentifiers.IsReadOnlyProperty)</Comment>
      <Comment>[23:46:24:34]:1: Getting property value for (ValueProperty)</Comment>
      <Comment>[23:46:24:34]:1: Calling GetCurrentPropertyValue(ValuePatternIdentifiers.ValueProperty)</Comment>
      <Comment>[23:46:24:34]:1: Obtained GetCurrentPropertyValue(ValuePatternIdentifiers.ValueProperty)</Comment>
      <Comment>[23:46:24:34]:1: Getting property value for (CanMaximizeProperty)</Comment>
      <Comment>[23:46:24:34]:1: Calling GetCurrentPropertyValue(WindowPatternIdentifiers.CanMaximizeProperty)</Comment>
      <Comment>[23:46:24:34]:1: Obtained GetCurrentPropertyValue(WindowPatternIdentifiers.CanMaximizeProperty)</Comment>
      <Comment>[23:46:24:34]:1: Getting property value for (CanMinimizeProperty)</Comment>
      <Comment>[23:46:24:34]:1: Calling GetCurrentPropertyValue(WindowPatternIdentifiers.CanMinimizeProperty)</Comment>
      <Comment>[23:46:24:34]:1: Obtained GetCurrentPropertyValue(WindowPatternIdentifiers.CanMinimizeProperty)</Comment>
      <Comment>[23:46:24:34]:1: Getting property value for (IsModalProperty)</Comment>
      <Comment>[23:46:24:34]:1: Calling GetCurrentPropertyValue(WindowPatternIdentifiers.IsModalProperty)</Comment>
      <Comment>[23:46:24:34]:1: Obtained GetCurrentPropertyValue(WindowPatternIdentifiers.IsModalProperty)</Comment>
      <Comment>[23:46:24:34]:1: Getting property value for (IsTopmostProperty)</Comment>
      <Comment>[23:46:24:34]:1: Calling GetCurrentPropertyValue(WindowPatternIdentifiers.IsTopmostProperty)</Comment>
      <Comment>[23:46:24:34]:1: Obtained GetCurrentPropertyValue(WindowPatternIdentifiers.IsTopmostProperty)</Comment>
      <Comment>[23:46:24:34]:1: Getting property value for (WindowInteractionStateProperty)</Comment>
      <Comment>[23:46:24:34]:1: Calling GetCurrentPropertyValue(WindowPatternIdentifiers.WindowInteractionStateProperty)</Comment>
      <Comment>[23:46:24:34]:1: Obtained GetCurrentPropertyValue(WindowPatternIdentifiers.WindowInteractionStateProperty)</Comment>
      <Comment>[23:46:24:34]:1: Getting property value for (WindowVisualStateProperty)</Comment>
      <Comment>[23:46:24:34]:1: Calling GetCurrentPropertyValue(WindowPatternIdentifiers.WindowVisualStateProperty)</Comment>
      <Comment>[23:46:24:34]:1: Obtained GetCurrentPropertyValue(WindowPatternIdentifiers.WindowVisualStateProperty)</Comment>
      <Comment>[23:46:24:34]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="43">
    <TestInfo>
      <Name>ControlType.Window:SetFocus.4</Name>
      <Summary>Verify that if IsKeyboardFocusableProperty = true, calling SetFocus() should not throw an exception.  If IsKeyboardFocusableProperty = false, then SetFocus() should throw InvalidOperationException</Summary>
      <Priority>Pri3</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Precondition: Verify that this control supports SetFocus tests, some controls such as MenuItem's do not support SetFocus()</Description>
      <Description>If IsKeyboardFocusableProperty == true, SetFocus() should not throw an exception, else it should throw InvalidOperationException</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.AutomationElementTests</Class>
        <Method>TestSetFocus4</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:24:37]:1: IsKeyboardFocusableProperty("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) = True</Comment>
      <Comment>[23:46:24:37]:1: Setting focus to "Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" </Comment>
      <Comment>[23:46:24:38]:1: Calling SetFocus("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:24:54]:    EVENTS:      FIRED!! EVENT[0/1]("Button" "Cancel" "btnCancel" )...INFO(AutomationElementIdentifiers.AutomationFocusChangedEvent) Control Path = &lt;ControlType&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;Visual UI Automation Verify : Client Side Provider&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;AutomationId&gt;MainWindow&lt;/AutomationId&gt;&lt;Classname&gt;WindowsForms10.Window.8.app.0.141b42a_r6_ad1&lt;/Classname&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;Tests running&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;AutomationId&gt;RunningTestsWindow&lt;/AutomationId&gt;&lt;Classname&gt;WindowsForms10.Window.8.app.0.141b42a_r6_ad1&lt;/Classname&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;Cancel&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Button&lt;/ControlType&gt;&lt;AutomationId&gt;btnCancel&lt;/AutomationId&gt;&lt;Classname&gt;WindowsForms10.BUTTON.app.0.141b42a_r6_ad1&lt;/Classname&gt;&lt;/AutomationElement&gt;&lt;/AutomationElement&gt;&lt;/AutomationElement&gt;&lt;/ControlType&gt;</Comment>
      <Comment>[23:46:25:39]:1: Successfully called SetFocus() without an exception thrown</Comment>
      <Comment>[23:46:25:39]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="44">
    <TestInfo>
      <Name>ControlType.Window:BulkAdd.1</Name>
      <Summary>Add many items and verify that ChildrenBulkAdded is fired</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic, Events</TestCaseType>
      <Description>Precondition: Determine if the application supports the custom interface callback for specific test applications</Description>
      <Description>Precondition: Determine is this appliction supports driving structure changes</Description>
      <Description>Precondition: Determine if the specific element supports structure change</Description>
      <Description>Step: Add LogicalTreeStructureListener</Description>
      <Description>Step: Bulk add elements, causing a StructureChangeType.ChildrenBulkAdded to occur</Description>
      <Description>Step: Wait for the LogicalStructureChangedEvent to be fired</Description>
      <Description>Step: That LogicalStructureChangedEvent was fired</Description>
      <Description>Step: Reset the control to it's initial state</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>InternalHelper.Tests.ControlObject</Class>
        <Method>TestBulkAdd</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:25:45]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="45">
    <TestInfo>
      <Name>ControlType.Window:BulkRemove.1</Name>
      <Summary>Remove many items and verify that ChildrenBulkRemoved is fired</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic, Events</TestCaseType>
      <Description>Precondition: Determine if the application supports the custom interface callback for specific test applications</Description>
      <Description>Precondition: Determine is this appliction supports driving structure changes</Description>
      <Description>Precondition: Determine if the specific element supports structure change</Description>
      <Description>Step: Add LogicalTreeStructureListener</Description>
      <Description>Step: Bulk remove elements, causing a StructureChangeType.ChildrenBulkRemoved to occur</Description>
      <Description>Step: Wait for the LogicalStructureChangedEvent to be fired</Description>
      <Description>Step: That LogicalStructureChangedEvent was fired</Description>
      <Description>Step: Reset the control to it's initial state</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>InternalHelper.Tests.ControlObject</Class>
        <Method>TestBulkRemove</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:25:50]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="46">
    <TestInfo>
      <Name>ControlType.Window:ChildAdd.1</Name>
      <Summary>Add an item and verify that ChildAdded is fired</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic, Events</TestCaseType>
      <Description>Precondition: Determine if the application supports the custom interface callback for specific test applications</Description>
      <Description>Precondition: Determine is this appliction supports driving structure changes</Description>
      <Description>Precondition: Determine if the specific element supports structure change</Description>
      <Description>Step: Add LogicalTreeStructureListener</Description>
      <Description>Step: Add element, causing a StructureChangeType.ChildAdded to occur</Description>
      <Description>Step: Wait for the LogicalStructureChangedEvent to be fired</Description>
      <Description>Step: That LogicalStructureChangedEvent was fired</Description>
      <Description>Step: Reset the control to it's initial state</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>InternalHelper.Tests.ControlObject</Class>
        <Method>TestChildAdd</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:25:54]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="47">
    <TestInfo>
      <Name>ControlType.Window:ChildRemove.1</Name>
      <Summary>Remove an item and verify that ChildRemoved is fired</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic, Events</TestCaseType>
      <Description>Precondition: Determine if the application supports the custom interface callback for specific test applications</Description>
      <Description>Precondition: Determine is this appliction supports driving structure changes</Description>
      <Description>Precondition: Determine if the specific element supports structure change</Description>
      <Description>Step: Add LogicalTreeStructureListener</Description>
      <Description>Step: Remove an element, causing a StructureChangeType.ChildRemoved to occur</Description>
      <Description>Step: Wait for the LogicalStructureChangedEvent to be fired</Description>
      <Description>Step: That LogicalStructureChangedEvent was fired</Description>
      <Description>Step: Reset the control to it's initial state</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>InternalHelper.Tests.ControlObject</Class>
        <Method>TestChildRemove</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:25:57]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="48">
    <TestInfo>
      <Name>ControlType.Window:Invalidate.1</Name>
      <Summary>Invalidate the combo box and verify that ChildrenInvalidated is fired</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic, Events</TestCaseType>
      <Description>Precondition: Determine if the application supports the custom interface callback for specific test applications</Description>
      <Description>Precondition: Determine is this appliction supports driving structure changes</Description>
      <Description>Precondition: Determine if the specific element supports structure change</Description>
      <Description>Step: Add LogicalTreeStructureListener</Description>
      <Description>Step: Invalidate the elements, causing a StructureChangeType.ChildrenInvalidated to occur</Description>
      <Description>Step: Wait for the LogicalStructureChangedEvent to be fired</Description>
      <Description>Step: That LogicalStructureChangedEvent was fired</Description>
      <Description>Step: Reset the control to it's initial state</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>InternalHelper.Tests.ControlObject</Class>
        <Method>TestInvalidate</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:25:60]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="49">
    <TestInfo>
      <Name>ControlType.Window:Reorder.1</Name>
      <Summary>Remove the items and verify that ChildrenReordered is fired</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic, Events</TestCaseType>
      <Description>Precondition: Determine if the application supports the custom interface callback for specific test applications</Description>
      <Description>Precondition: Determine is this appliction supports driving structure changes</Description>
      <Description>Precondition: Determine if the specific element supports structure change</Description>
      <Description>Step: Add LogicalTreeStructureListener</Description>
      <Description>Step: Reorder the elements, causing a StructureChangeType.ChildrenReordered to occur</Description>
      <Description>Step: Wait for the LogicalStructureChangedEvent to be fired</Description>
      <Description>Step: That LogicalStructureChangedEvent was fired</Description>
      <Description>Step: Reset the control to it's initial state</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>InternalHelper.Tests.ControlObject</Class>
        <Method>TestReorder</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:25:65]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="50">
    <TestInfo>
      <Name>ControlType.Window:TestContentView</Name>
      <Summary />
      <Priority>Pri2</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Test the control's Content View</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>InternalHelper.Tests.ControlObject</Class>
        <Method>TestContentView</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:25:69]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="51">
    <TestInfo>
      <Name>ControlType.Window:TestControlPatterns</Name>
      <Summary />
      <Priority>Pri2</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Test the control's patterns</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>InternalHelper.Tests.ControlObject</Class>
        <Method>TestControlPatterns</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:25:72]:0: Found the following pattern(s) implemented on the control:</Comment>
      <Comment>[23:46:25:72]:0:    -WindowPattern</Comment>
      <Comment>[23:46:25:72]:0:    -TransformPattern</Comment>
      <Comment>[23:46:25:72]:0:    -LegacyIAccessiblePattern</Comment>
      <Comment>[23:46:25:72]:0: Control is required to support the following patterns: </Comment>
      <Comment>[23:46:25:72]:0:    -TransformPattern</Comment>
      <Comment>[23:46:25:72]:0:    -WindowPattern</Comment>
      <Comment>[23:46:25:72]:0: Control can optionally support the following patterns: </Comment>
      <Comment>[23:46:25:72]:0:    -DockPattern</Comment>
      <Comment>[23:46:25:72]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="52">
    <TestInfo>
      <Name>ControlType.Window:TestControlProperties</Name>
      <Summary />
      <Priority>Pri2</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Test the control's properties</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>InternalHelper.Tests.ControlObject</Class>
        <Method>TestControlProperties</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:25:75]:0: Validating ControlType.Window.GetCurrentPropertyValue(AutomationElement.ControlTypeProperty)=System.Windows.Automation.ControlType</Comment>
      <Comment>[23:46:25:75]:0: Node validation is !NULL</Comment>
      <Comment>[23:46:25:75]:0: Validating ControlType.Window.GetCurrentPropertyValue(AutomationElement.IsContentElementProperty)=True</Comment>
      <Comment>[23:46:25:75]:0: Node validation is T</Comment>
      <Comment>[23:46:25:75]:0: Validating ControlType.Window.GetCurrentPropertyValue(AutomationElement.IsControlElementProperty)=True</Comment>
      <Comment>[23:46:25:75]:0: Node validation is T</Comment>
      <Comment>[23:46:25:77]:0: Validating ControlType.Window.GetCurrentPropertyValue(AutomationElement.IsTransformPatternAvailableProperty)=True</Comment>
      <Comment>[23:46:25:77]:0: Node validation is T</Comment>
      <Comment>[23:46:25:77]:0: Validating ControlType.Window.GetCurrentPropertyValue(AutomationElement.IsWindowPatternAvailableProperty)=True</Comment>
      <Comment>[23:46:25:77]:0: Node validation is T</Comment>
      <Comment>[23:46:25:77]:0: Validating ControlType.Window.GetCurrentPropertyValue(AutomationElement.LabeledByProperty)=</Comment>
      <Comment>[23:46:25:77]:0: Node validation is NULL</Comment>
      <Comment>[23:46:25:77]:0: Validating ControlType.Window.GetCurrentPropertyValue(AutomationElement.LocalizedControlTypeProperty)=window</Comment>
      <Comment>[23:46:25:77]:0: Node validation is S</Comment>
      <Comment>[23:46:25:77]:0: Validating ControlType.Window.GetCurrentPropertyValue(AutomationElement.NameProperty)=maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt</Comment>
      <Comment>[23:46:25:77]:0: Node validation is R</Comment>
      <Comment>[23:46:25:77]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="53">
    <TestInfo>
      <Name>ControlType.Window:TestControlView</Name>
      <Summary />
      <Priority>Pri2</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Test the control's Control View</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>InternalHelper.Tests.ControlObject</Class>
        <Method>TestControlView</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:25:82]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="54">
    <TestInfo>
      <Name>ControlType.Window:CanRotate.1.6</Name>
      <Summary>If an element can rotate, call Transform.Rotate and verify that the BoundingRect property change event was fired</Summary>
      <Priority>Pri0</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic, Events</TestCaseType>
      <Description>Precondition: TransformPattern.CanRotate == true</Description>
      <Description>Step: Setup a BoundingRectangle PropertyChange event</Description>
      <Description>Step: Verify that Rotate with the random degree is called successfully</Description>
      <Description>Verify: The BoundingRectangle PropertyChange event is fired</Description>
      <Description>Step: Move the element back to it's orginal location</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.TransformTests</Class>
        <Method>CanRotate16</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:25:85]:0: Verify that TransformPatternIdentifiers.CanRotateProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns True</Comment>
      <Comment>[23:46:25:87]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="55">
    <TestInfo>
      <Name>ControlType.Window:Move.2.1</Name>
      <Summary>Move the element to position (0,0) which is not the current location</Summary>
      <Priority>Pri0</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic, Events</TestCaseType>
      <Description>Precondition: TransformPattern.CanMove == true</Description>
      <Description>Precondition: If the element is at position (0,0), then move it to (10,10)</Description>
      <Description>Step: Setup a BoundingRectangle PropertyChange event</Description>
      <Description>Step: Verify that Move(0,0) is called successfully</Description>
      <Description>Step: Wait for event to occur</Description>
      <Description>Verify: The BoundingRectangle PropertyChange event is fired</Description>
      <Description>Verify: Element's BoundingRectangle is correct</Description>
      <Description>Step: Move the window back to it's original position</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.TransformTests</Class>
        <Method>Move21</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:25:90]:0: Verify that TransformPatternIdentifiers.CanMoveProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns True</Comment>
      <Comment>[23:46:25:92]:0: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property TransformPatternIdentifiers.CanMoveProperty is True</Comment>
      <Comment>[23:46:25:92]:1: Element is not at position (0,0)</Comment>
      <Comment>[23:46:25:92]:2: Adding PropertyChangedListener ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" </Comment>
      <Comment>[23:46:25:92]:    EVENTS:   Adding AddAutomationPropertyChangedEventHandler("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" , TreeScope.Element, [AutomationElementIdentifiers.BoundingRectangleProperty]) ControlPath = &lt;ControlType&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TMaxForm1&lt;/Classname&gt;&lt;/AutomationElement&gt;&lt;/ControlType&gt;</Comment>
      <Comment>[23:46:25:92]:3: Calling TransformPattern.Move(0, 0)</Comment>
      <Comment>[23:46:25:92]:3: Successfully called TransformPattern.Move(0, 0) without an exception thrown</Comment>
      <Comment>[23:46:25:92]:4: Waiting for 2 event(s)</Comment>
      <Comment>[23:46:25:92]:    EVENTS:   Waiting for a period of 4000 milliseconds for no events to occur</Comment>
      <Comment>[23:46:25:92]:    EVENTS:   Got event on...("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:25:92]:    EVENTS:      FIRED!! EVENT[0/1]("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )...INFO(AutomationElementIdentifiers.BoundingRectangleProperty Property[System.Windows.Automation.AutomationProperty] NewValue[0,0,1327,752] OldValue[]) Control Path = &lt;ControlType&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TMaxForm1&lt;/Classname&gt;&lt;/AutomationElement&gt;&lt;/ControlType&gt;</Comment>
      <Comment>[23:46:25:94]:    EVENTS:   Got event on...("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:25:94]:    EVENTS:      FIRED!! EVENT[1/2]("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )...INFO(AutomationElementIdentifiers.BoundingRectangleProperty Property[System.Windows.Automation.AutomationProperty] NewValue[] OldValue[]) Control Path = &lt;ControlType&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TMaxForm1&lt;/Classname&gt;&lt;/AutomationElement&gt;&lt;/ControlType&gt;</Comment>
      <Comment>[23:46:29:95]:    EVENTS:   Stop waiting for events.  Found 2 event(s)</Comment>
      <Comment>[23:46:29:95]:4: End waiting for events</Comment>
      <Comment>[23:46:29:95]:5: Verifying property change "AutomationElementIdentifiers.BoundingRectangleProperty" event firing was True)</Comment>
      <Comment>[23:46:29:95]:5: Start: Looking for event that might have been fired</Comment>
      <Comment>[23:46:29:95]:    EVENTS:   2 was/were fired</Comment>
      <Comment>[23:46:29:96]:    EVENTS:   AutomationElementIdentifiers.BoundingRectangleProperty was fired on ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:29:96]:5: End : Looking for event that might have been fired</Comment>
      <Comment>[23:46:29:96]:5: AutomationElementIdentifiers.BoundingRectangleProperty change event did get fired and was expected to be fired</Comment>
      <Comment>[23:46:29:96]:7: Moving element back to it's original position</Comment>
      <Comment>[23:46:29:96]:7: Calling TransformPattern.Move(95, 50)</Comment>
      <Comment>[23:46:29:98]:7: Successfully called TransformPattern.Move(95, 50) without an exception thrown</Comment>
      <Comment>[23:46:29:98]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="56">
    <TestInfo>
      <Name>ControlType.Window:Move.2.2</Name>
      <Summary>Move the element to a random location on the desktop</Summary>
      <Priority>Pri0</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic, Events</TestCaseType>
      <Description>Step: Obtain a random point on the desktop</Description>
      <Description>Precondition: TransformPattern.CanMove == true</Description>
      <Description>Step: Setup a BoundingRectangle PropertyChange event</Description>
      <Description>Step: Verify that Move() with the random point is called successfully</Description>
      <Description>Step: Wait for event to get fired</Description>
      <Description>Verify: The BoundingRectangle PropertyChange event is fired</Description>
      <Description>Verify: Element was moved to the correct position by validating the BoundingRectangle</Description>
      <Description>Step: Move the window back to it's original position</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.TransformTests</Class>
        <Method>Move22</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:30:34]:0: Selection screen[0].WorkingArea = [X=0,Y=0,Width=1536,Height=824]</Comment>
      <Comment>[23:46:30:34]:0: Random screen location = 1449,498</Comment>
      <Comment>[23:46:30:34]:1: Verify that TransformPatternIdentifiers.CanMoveProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns True</Comment>
      <Comment>[23:46:30:34]:1: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property TransformPatternIdentifiers.CanMoveProperty is True</Comment>
      <Comment>[23:46:30:34]:2: Adding PropertyChangedListener ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" </Comment>
      <Comment>[23:46:30:34]:    EVENTS:   Adding AddAutomationPropertyChangedEventHandler("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" , TreeScope.Element, [AutomationElementIdentifiers.BoundingRectangleProperty]) ControlPath = &lt;ControlType&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TMaxForm1&lt;/Classname&gt;&lt;/AutomationElement&gt;&lt;/ControlType&gt;</Comment>
      <Comment>[23:46:30:50]:3: Calling TransformPattern.Move(1449, 498)</Comment>
      <Comment>[23:46:30:50]:3: Successfully called TransformPattern.Move(1449, 498) without an exception thrown</Comment>
      <Comment>[23:46:30:50]:4: Waiting for 2 event(s)</Comment>
      <Comment>[23:46:30:50]:    EVENTS:   Waiting for a period of 4000 milliseconds for no events to occur</Comment>
      <Comment>[23:46:30:65]:    EVENTS:   Got event on...("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:30:65]:    EVENTS:      FIRED!! EVENT[0/1]("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )...INFO(AutomationElementIdentifiers.BoundingRectangleProperty Property[System.Windows.Automation.AutomationProperty] NewValue[1449,498,1327,752] OldValue[]) Control Path = &lt;ControlType&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TMaxForm1&lt;/Classname&gt;&lt;/AutomationElement&gt;&lt;/ControlType&gt;</Comment>
      <Comment>[23:46:30:65]:    EVENTS:   Got event on...("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:30:65]:    EVENTS:      FIRED!! EVENT[1/2]("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )...INFO(AutomationElementIdentifiers.BoundingRectangleProperty Property[System.Windows.Automation.AutomationProperty] NewValue[] OldValue[]) Control Path = &lt;ControlType&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TMaxForm1&lt;/Classname&gt;&lt;/AutomationElement&gt;&lt;/ControlType&gt;</Comment>
      <Comment>[23:46:34:69]:    EVENTS:   Stop waiting for events.  Found 2 event(s)</Comment>
      <Comment>[23:46:34:69]:4: End waiting for events</Comment>
      <Comment>[23:46:34:69]:5: Verifying property change "AutomationElementIdentifiers.BoundingRectangleProperty" event firing was True)</Comment>
      <Comment>[23:46:34:69]:5: Start: Looking for event that might have been fired</Comment>
      <Comment>[23:46:34:69]:    EVENTS:   2 was/were fired</Comment>
      <Comment>[23:46:34:84]:    EVENTS:   AutomationElementIdentifiers.BoundingRectangleProperty was fired on ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:34:84]:5: End : Looking for event that might have been fired</Comment>
      <Comment>[23:46:34:84]:5: AutomationElementIdentifiers.BoundingRectangleProperty change event did get fired and was expected to be fired</Comment>
      <Comment>[23:46:34:84]:7: Moving window back to it's original position</Comment>
      <Comment>[23:46:34:84]:7: Calling TransformPattern.Move(95, 50)</Comment>
      <Comment>[23:46:34:11]:7: Successfully called TransformPattern.Move(95, 50) without an exception thrown</Comment>
      <Comment>[23:46:34:11]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="57">
    <TestInfo>
      <Name>ControlType.Window:Move.2.8</Name>
      <Summary>Non-movable element, call Move and verify that it does not move</Summary>
      <Priority>Pri0</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic, Events</TestCaseType>
      <Description>Precondition: Obtain a random position on the desktop</Description>
      <Description>Precondition: TransformPattern.CanMove == false</Description>
      <Description>Step: Setup a BoundingRectangle PropertyChange event</Description>
      <Description>Step: Verify that Move() with the random point throws InvalidOperationException</Description>
      <Description>Step: Wait for event to get fired</Description>
      <Description>Verify: The BoundingRectangle PropertyChange event is not fired</Description>
      <Description>Verify: Element has not moved</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.TransformTests</Class>
        <Method>Move28</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:34:16]:0: Selection screen[0].WorkingArea = [X=0,Y=0,Width=1536,Height=824]</Comment>
      <Comment>[23:46:34:16]:0: Random screen location = 679,91</Comment>
      <Comment>[23:46:34:18]:1: Verify that TransformPatternIdentifiers.CanMoveProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns False</Comment>
      <Comment>[23:46:34:18]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="58">
    <TestInfo>
      <Name>ControlType.Window:Move.2.13</Name>
      <Summary>Element does not have the focus</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic, Events</TestCaseType>
      <Description>Step: Obtain a random location on the screen other than current location</Description>
      <Description>Step: Ensure the AutomationElement does not have focus by calling SetFocus(AutomationElement.RootElement.FirstChild) - OS's Start Button</Description>
      <Description>Precondition: TransformPattern.CanMove == true</Description>
      <Description>Step: Setup a BoundingRectangle PropertyChange event</Description>
      <Description>Step: Verify that Move() with the random point is called successfully</Description>
      <Description>Step: Wait for event to get fired</Description>
      <Description>Verify: The BoundingRectangle PropertyChange event is fired</Description>
      <Description>Verify: Element has moved to the new location</Description>
      <Description>Step: Move the element back to it's original position</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.TransformTests</Class>
        <Method>Move213</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:34:21]:0: Selection screen[0].WorkingArea = [X=0,Y=0,Width=1536,Height=824]</Comment>
      <Comment>[23:46:34:21]:0: Random screen location = 18,422</Comment>
      <Comment>[23:46:34:21]:1: Verify that TransformPatternIdentifiers.CanMoveProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns True</Comment>
      <Comment>[23:46:34:23]:1: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property TransformPatternIdentifiers.CanMoveProperty is True</Comment>
      <Comment>[23:46:34:23]:2: Adding AutomationFocusChangedEventHandler</Comment>
      <Comment>[23:46:34:43]:2: Calling SetFocus() on "Pane" "" "" </Comment>
      <Comment>[23:46:34:43]:2: Wait 1 second for event to happen</Comment>
      <Comment>[23:46:34:48]:2: Stopped waiting for event to happen</Comment>
      <Comment>[23:46:34:48]:2: Calling RemoveAutomationFocusChangedEventHandler()</Comment>
      <Comment>[23:46:34:50]:2: Called RemoveAutomationFocusChangedEventHandler()</Comment>
      <Comment>[23:46:34:50]:2: History of events fired: </Comment>
      <Comment>[23:46:34:50]:2: History of events fired: </Comment>
      <Comment>[23:46:34:50]:3: Adding PropertyChangedListener ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" </Comment>
      <Comment>[23:46:34:50]:    EVENTS:   Adding AddAutomationPropertyChangedEventHandler("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" , TreeScope.Element, [AutomationElementIdentifiers.BoundingRectangleProperty]) ControlPath = &lt;ControlType&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TMaxForm1&lt;/Classname&gt;&lt;/AutomationElement&gt;&lt;/ControlType&gt;</Comment>
      <Comment>[23:46:34:51]:4: Calling TransformPattern.Move(18, 422)</Comment>
      <Comment>[23:46:34:53]:4: Successfully called TransformPattern.Move(18, 422) without an exception thrown</Comment>
      <Comment>[23:46:34:53]:5: Waiting for 2 event(s)</Comment>
      <Comment>[23:46:34:53]:    EVENTS:   Waiting for a period of 4000 milliseconds for no events to occur</Comment>
      <Comment>[23:46:34:53]:    EVENTS:   Got event on...("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:34:53]:    EVENTS:      FIRED!! EVENT[0/1]("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )...INFO(AutomationElementIdentifiers.BoundingRectangleProperty Property[System.Windows.Automation.AutomationProperty] NewValue[18,422,1327,752] OldValue[]) Control Path = &lt;ControlType&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TMaxForm1&lt;/Classname&gt;&lt;/AutomationElement&gt;&lt;/ControlType&gt;</Comment>
      <Comment>[23:46:34:55]:    EVENTS:   Got event on...("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:34:55]:    EVENTS:      FIRED!! EVENT[1/2]("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )...INFO(AutomationElementIdentifiers.BoundingRectangleProperty Property[System.Windows.Automation.AutomationProperty] NewValue[] OldValue[]) Control Path = &lt;ControlType&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TMaxForm1&lt;/Classname&gt;&lt;/AutomationElement&gt;&lt;/ControlType&gt;</Comment>
      <Comment>[23:46:38:56]:    EVENTS:   Stop waiting for events.  Found 2 event(s)</Comment>
      <Comment>[23:46:38:56]:5: End waiting for events</Comment>
      <Comment>[23:46:38:56]:6: Verifying property change "AutomationElementIdentifiers.BoundingRectangleProperty" event firing was True)</Comment>
      <Comment>[23:46:38:56]:6: Start: Looking for event that might have been fired</Comment>
      <Comment>[23:46:38:56]:    EVENTS:   2 was/were fired</Comment>
      <Comment>[23:46:38:57]:    EVENTS:   AutomationElementIdentifiers.BoundingRectangleProperty was fired on ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:38:57]:6: End : Looking for event that might have been fired</Comment>
      <Comment>[23:46:38:57]:6: AutomationElementIdentifiers.BoundingRectangleProperty change event did get fired and was expected to be fired</Comment>
      <Comment>[23:46:38:57]:8: Moving window back to it's original position</Comment>
      <Comment>[23:46:38:57]:8: Calling TransformPattern.Move(95, 50)</Comment>
      <Comment>[23:46:38:59]:8: Successfully called TransformPattern.Move(95, 50) without an exception thrown</Comment>
      <Comment>[23:46:38:59]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="59">
    <TestInfo>
      <Name>ControlType.Window:Move.2.17</Name>
      <Summary>Move a minimized non-movable element(ie. window minimized to task bar)</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic, Events</TestCaseType>
      <Description>Precondition: Verify that window supports minimizing</Description>
      <Description>Step: Obtain a random location on the screen other than current location</Description>
      <Description>Step: Miminimize the element</Description>
      <Description>Verify: TransformPattern.CanMove == false</Description>
      <Description>Step: Setup a BoundingRectangle PropertyChange event</Description>
      <Description>Step: Verify that Move() with the random point is called successfully</Description>
      <Description>Step: Wait for event to get fired</Description>
      <Description>Verify: The BoundingRectangle PropertyChange event is not fired</Description>
      <Description>Verify: Element has not moved to the new location</Description>
      <Description>Step: Move the element back to it's original position if previous steps failed</Description>
      <Description>Step: Set the element's WindowVisualState back to it's original state</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.TransformTests</Class>
        <Method>Move217</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552" ProviderDescription="[pid:8772,providerId:0x10010 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll); Hwnd:Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
            <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:38:67]:0: Verify that WindowPatternIdentifiers.CanMinimizeProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns True</Comment>
      <Comment>[23:46:38:67]:0: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property WindowPatternIdentifiers.CanMinimizeProperty is True</Comment>
      <Comment>[23:46:38:67]:1: Selection screen[0].WorkingArea = [X=0,Y=0,Width=1536,Height=824]</Comment>
      <Comment>[23:46:38:67]:1: Random screen location = 907,555</Comment>
      <Comment>[23:46:43:69]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="60">
    <TestInfo>
      <Name>ControlType.Window:Move.2.18</Name>
      <Summary>Move a minimized movable element(ie. MDI window minimized)</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic, Events</TestCaseType>
      <Description>Precondition: Verify that window supports minimizing</Description>
      <Description>Step: Obtain a random location on the screen other than current location</Description>
      <Description>Step: Miminimize the element</Description>
      <Description>Verify: TransformPattern.CanMove == true</Description>
      <Description>Step: Setup a BoundingRectangle PropertyChange event</Description>
      <Description>Step: Verify that Move() with the random point is called successfully</Description>
      <Description>Step: Wait for event to get fired</Description>
      <Description>Verify: The BoundingRectangle PropertyChange event is fired</Description>
      <Description>Verify: Element has moved to the new location</Description>
      <Description>Step: Move the element back to it's original position</Description>
      <Description>Step: Set the element's WindowVisualState back to it's original state</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.TransformTests</Class>
        <Method>Move218</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552">
            <Path AutomationId="" ClassName="TApplication" LocalizedControlType="window" ControlType="ControlType.Window" Name="Pascal_maXbox" RuntimeId="42.1182156" ProviderDescription="[pid:8772,providerId:0x1209CC Main:Nested [pid:13612,providerId:0x1209CC Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll)]; Nonclient:Microsoft: Non-Client Proxy (unmanaged:UIAutomationCore.dll); Hwnd(parent link):Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
              <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
            </Path>
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:43:76]:0: Verify that WindowPatternIdentifiers.CanMinimizeProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns True</Comment>
      <Comment>[23:46:43:76]:0: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property WindowPatternIdentifiers.CanMinimizeProperty is True</Comment>
      <Comment>[23:46:43:76]:1: Selection screen[0].WorkingArea = [X=0,Y=0,Width=1536,Height=824]</Comment>
      <Comment>[23:46:43:76]:1: Random screen location = 184,527</Comment>
      <Comment>[23:46:48:79]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="61">
    <TestInfo>
      <Name>ControlType.Window:Move.2.19</Name>
      <Summary>Element is maximized, and covers entire screen</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic, Events</TestCaseType>
      <Description>Precondition: Verify that window supports maximizing</Description>
      <Description>Precondition: Call WindowPattern.SetWindowVisualState(WindowVisualState.Maximize)</Description>
      <Description>Verify:  WindowVisualState = WindowVisualState.Maximize</Description>
      <Description>Precondition: Element does cover enitire current screen</Description>
      <Description>Verify: TransformPattern.CanMove == false</Description>
      <Description>Step: Setup a BoundingRectangle PropertyChange event</Description>
      <Description>Step: Verify that Move() with the random point throws InvalidOperationException</Description>
      <Description>Step: Wait for event to get fired</Description>
      <Description>Verify: The BoundingRectangle PropertyChange event is not fired</Description>
      <Description>Verify: Element has not moved</Description>
      <Description>Step: Move the element back to it's original position</Description>
      <Description>Step: Set the element's WindowVisualState back to it's original state</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.TransformTests</Class>
        <Method>Move219</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552">
            <Path AutomationId="" ClassName="TApplication" LocalizedControlType="window" ControlType="ControlType.Window" Name="Pascal_maXbox" RuntimeId="42.1182156" ProviderDescription="[pid:8772,providerId:0x1209CC Main:Nested [pid:13612,providerId:0x1209CC Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll)]; Nonclient:Microsoft: Non-Client Proxy (unmanaged:UIAutomationCore.dll); Hwnd(parent link):Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
              <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
            </Path>
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:48:88]:0: Verify that WindowPatternIdentifiers.CanMaximizeProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns True</Comment>
      <Comment>[23:46:48:88]:0: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property WindowPatternIdentifiers.CanMaximizeProperty is True</Comment>
      <Comment>[23:46:49:95]:4: Verify that TransformPatternIdentifiers.CanMoveProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns False</Comment>
      <Comment>[23:46:49:95]:4: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property TransformPatternIdentifiers.CanMoveProperty is False</Comment>
      <Comment>[23:46:49:95]:5: Adding PropertyChangedListener ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" </Comment>
      <Comment>[23:46:49:95]:    EVENTS:   Adding AddAutomationPropertyChangedEventHandler("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" , TreeScope.Element, [AutomationElementIdentifiers.BoundingRectangleProperty]) ControlPath = &lt;ControlType&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;Pascal_maXbox&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TApplication&lt;/Classname&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TMaxForm1&lt;/Classname&gt;&lt;/AutomationElement&gt;&lt;/AutomationElement&gt;&lt;/ControlType&gt;</Comment>
      <Comment>[23:46:49:95]:6: Calling TransformPattern.Move(0, 0)</Comment>
      <Comment>[23:46:49:95]:6: Successfully called TransformPattern.Move(0, 0) with exception thrown as expected</Comment>
      <Comment>[23:46:49:95]:7: Waiting for 2 event(s)</Comment>
      <Comment>[23:46:49:95]:    EVENTS:   Waiting for a period of 4000 milliseconds for no events to occur</Comment>
      <Comment>[23:46:53:97]:    EVENTS:   Stop waiting for events.  Found 0 event(s)</Comment>
      <Comment>[23:46:53:97]:7: End waiting for events</Comment>
      <Comment>[23:46:53:97]:8: Verifying property change "AutomationElementIdentifiers.BoundingRectangleProperty" event firing was False)</Comment>
      <Comment>[23:46:53:97]:8: Start: Looking for event that might have been fired</Comment>
      <Comment>[23:46:53:97]:    EVENTS:   0 was/were fired</Comment>
      <Comment>[23:46:53:97]:    EVENTS:   AutomationElementIdentifiers.BoundingRectangleProperty was not fired</Comment>
      <Comment>[23:46:53:97]:8: End : Looking for event that might have been fired</Comment>
      <Comment>[23:46:53:97]:8: AutomationElementIdentifiers.BoundingRectangleProperty event was not fired and was not expected to be fired</Comment>
      <Comment>[23:46:53:98]:10: Moving window back to it's original position</Comment>
      <Comment>[23:46:55:52]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="62">
    <TestInfo>
      <Name>ControlType.Window:Move.2.3</Name>
      <Summary>Move the element to it's current location</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic, Events</TestCaseType>
      <Description>Precondition: TransformPattern.CanMove == true</Description>
      <Description>Step: Setup a BoundingRectangle PropertyChange event</Description>
      <Description>Step: Verify that Move() with the current location is called successfully</Description>
      <Description>Step: Wait for event to get fired</Description>
      <Description>Verify: The BoundingRectangle PropertyChange event is not fired</Description>
      <Description>Verify: Element was still at the current location</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.TransformTests</Class>
        <Method>Move23</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552">
            <Path AutomationId="" ClassName="TApplication" LocalizedControlType="window" ControlType="ControlType.Window" Name="Pascal_maXbox" RuntimeId="42.1182156" ProviderDescription="[pid:8772,providerId:0x1209CC Main:Nested [pid:13612,providerId:0x1209CC Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll)]; Nonclient:Microsoft: Non-Client Proxy (unmanaged:UIAutomationCore.dll); Hwnd(parent link):Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
              <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
            </Path>
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:55:10]:0: Verify that TransformPatternIdentifiers.CanMoveProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns True</Comment>
      <Comment>[23:46:55:10]:0: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property TransformPatternIdentifiers.CanMoveProperty is True</Comment>
      <Comment>[23:46:55:10]:1: Adding PropertyChangedListener ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" </Comment>
      <Comment>[23:46:55:12]:    EVENTS:   Adding AddAutomationPropertyChangedEventHandler("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" , TreeScope.Element, [AutomationElementIdentifiers.BoundingRectangleProperty]) ControlPath = &lt;ControlType&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;Pascal_maXbox&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TApplication&lt;/Classname&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TMaxForm1&lt;/Classname&gt;&lt;/AutomationElement&gt;&lt;/AutomationElement&gt;&lt;/ControlType&gt;</Comment>
      <Comment>[23:46:55:12]:2: Calling TransformPattern.Move(95, 50)</Comment>
      <Comment>[23:46:55:12]:2: Successfully called TransformPattern.Move(95, 50) without an exception thrown</Comment>
      <Comment>[23:46:55:12]:3: Waiting for 2 event(s)</Comment>
      <Comment>[23:46:55:12]:    EVENTS:   Waiting for a period of 4000 milliseconds for no events to occur</Comment>
      <Comment>[23:46:59:12]:    EVENTS:   Stop waiting for events.  Found 0 event(s)</Comment>
      <Comment>[23:46:59:12]:3: End waiting for events</Comment>
      <Comment>[23:46:59:12]:4: Verifying property change "AutomationElementIdentifiers.BoundingRectangleProperty" event firing was False)</Comment>
      <Comment>[23:46:59:12]:4: Start: Looking for event that might have been fired</Comment>
      <Comment>[23:46:59:12]:    EVENTS:   0 was/were fired</Comment>
      <Comment>[23:46:59:12]:    EVENTS:   AutomationElementIdentifiers.BoundingRectangleProperty was not fired</Comment>
      <Comment>[23:46:59:12]:4: End : Looking for event that might have been fired</Comment>
      <Comment>[23:46:59:12]:4: AutomationElementIdentifiers.BoundingRectangleProperty event was not fired and was not expected to be fired</Comment>
      <Comment>[23:46:59:12]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="63">
    <TestInfo>
      <Name>ControlType.Window:Move.2.4</Name>
      <Summary>Move to point where the element results in partially outside of screen and partially inside screen</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic, Events</TestCaseType>
      <Description>Precondition: Obtain a position on the screen where the element will be partially off the parent's viewport</Description>
      <Description>Precondition: TransformPattern.CanMove == true</Description>
      <Description>Step: Setup a BoundingRectangle PropertyChange event</Description>
      <Description>Step: Verify that Move() with the the current locations is called successfully</Description>
      <Description>Step: Wait for event to get fired</Description>
      <Description>Verify: The BoundingRectangle PropertyChange event is fired</Description>
      <Description>Verify: Element has moved to the desired location</Description>
      <Description>Step: Move the element back to it's original position</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.TransformTests</Class>
        <Method>Move24</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552">
            <Path AutomationId="" ClassName="TApplication" LocalizedControlType="window" ControlType="ControlType.Window" Name="Pascal_maXbox" RuntimeId="42.1182156" ProviderDescription="[pid:8772,providerId:0x1209CC Main:Nested [pid:13612,providerId:0x1209CC Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll)]; Nonclient:Microsoft: Non-Client Proxy (unmanaged:UIAutomationCore.dll); Hwnd(parent link):Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
              <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
            </Path>
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:46:59:19]:0: Element.BoundingRectangle = 95,50,1327,752</Comment>
      <Comment>[23:46:59:19]:0: Selection screen[0].WorkingArea = [X=0,Y=0,Width=1536,Height=824]</Comment>
      <Comment>[23:46:59:19]:0: Found random location overlapping parent viewport : 394,146,1327,752</Comment>
      <Comment>[23:46:59:19]:1: Verify that TransformPatternIdentifiers.CanMoveProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns True</Comment>
      <Comment>[23:46:59:19]:1: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property TransformPatternIdentifiers.CanMoveProperty is True</Comment>
      <Comment>[23:46:59:20]:2: Adding PropertyChangedListener ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" </Comment>
      <Comment>[23:46:59:20]:    EVENTS:   Adding AddAutomationPropertyChangedEventHandler("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" , TreeScope.Element, [AutomationElementIdentifiers.BoundingRectangleProperty]) ControlPath = &lt;ControlType&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;Pascal_maXbox&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TApplication&lt;/Classname&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TMaxForm1&lt;/Classname&gt;&lt;/AutomationElement&gt;&lt;/AutomationElement&gt;&lt;/ControlType&gt;</Comment>
      <Comment>[23:46:59:22]:3: Calling TransformPattern.Move(394, 146)</Comment>
      <Comment>[23:46:59:22]:3: Successfully called TransformPattern.Move(394, 146) without an exception thrown</Comment>
      <Comment>[23:46:59:22]:4: Waiting for 2 event(s)</Comment>
      <Comment>[23:46:59:22]:    EVENTS:   Waiting for a period of 4000 milliseconds for no events to occur</Comment>
      <Comment>[23:46:59:23]:    EVENTS:   Got event on...("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:59:23]:    EVENTS:      FIRED!! EVENT[0/1]("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )...INFO(AutomationElementIdentifiers.BoundingRectangleProperty Property[System.Windows.Automation.AutomationProperty] NewValue[394,146,1327,752] OldValue[]) Control Path = &lt;ControlType&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;Pascal_maXbox&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TApplication&lt;/Classname&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TMaxForm1&lt;/Classname&gt;&lt;/AutomationElement&gt;&lt;/AutomationElement&gt;&lt;/ControlType&gt;</Comment>
      <Comment>[23:46:59:23]:    EVENTS:   Got event on...("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:46:59:23]:    EVENTS:      FIRED!! EVENT[1/2]("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )...INFO(AutomationElementIdentifiers.BoundingRectangleProperty Property[System.Windows.Automation.AutomationProperty] NewValue[] OldValue[]) Control Path = &lt;ControlType&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;Pascal_maXbox&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TApplication&lt;/Classname&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TMaxForm1&lt;/Classname&gt;&lt;/AutomationElement&gt;&lt;/AutomationElement&gt;&lt;/ControlType&gt;</Comment>
      <Comment>[23:47:03:25]:    EVENTS:   Stop waiting for events.  Found 2 event(s)</Comment>
      <Comment>[23:47:03:25]:4: End waiting for events</Comment>
      <Comment>[23:47:03:25]:5: Verifying property change "AutomationElementIdentifiers.BoundingRectangleProperty" event firing was True)</Comment>
      <Comment>[23:47:03:26]:5: Start: Looking for event that might have been fired</Comment>
      <Comment>[23:47:03:26]:    EVENTS:   2 was/were fired</Comment>
      <Comment>[23:47:03:26]:    EVENTS:   AutomationElementIdentifiers.BoundingRectangleProperty was fired on ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:47:03:26]:5: End : Looking for event that might have been fired</Comment>
      <Comment>[23:47:03:26]:5: AutomationElementIdentifiers.BoundingRectangleProperty change event did get fired and was expected to be fired</Comment>
      <Comment>[23:47:03:26]:7: Moving window back to it's original position</Comment>
      <Comment>[23:47:03:26]:7: Calling TransformPattern.Move(95, 50)</Comment>
      <Comment>[23:47:03:29]:7: Successfully called TransformPattern.Move(95, 50) without an exception thrown</Comment>
      <Comment>[23:47:03:29]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="64">
    <TestInfo>
      <Name>ControlType.Window:Move.2.5</Name>
      <Summary>Move to point where the element is entirely outside of screen</Summary>
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic, Events</TestCaseType>
      <Description>Precondition: Obtain a random position where the element intirely off the screen</Description>
      <Description>Precondition: TransformPattern.CanMove == true</Description>
      <Description>Step: Setup a BoundingRectangle PropertyChange event</Description>
      <Description>Step: Verify that Move() with the random point is called successfully</Description>
      <Description>Step: Wait for event to get fired</Description>
      <Description>Verify: The BoundingRectangle PropertyChange event is fired if the element is moved</Description>
      <Description>Verify: Element is within the screen cordinates</Description>
      <Description>Step: Move the element back to it's original position</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.TransformTests</Class>
        <Method>Move25</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552">
            <Path AutomationId="" ClassName="TApplication" LocalizedControlType="window" ControlType="ControlType.Window" Name="Pascal_maXbox" RuntimeId="42.1182156" ProviderDescription="[pid:8772,providerId:0x1209CC Main:Nested [pid:13612,providerId:0x1209CC Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll)]; Nonclient:Microsoft: Non-Client Proxy (unmanaged:UIAutomationCore.dll); Hwnd(parent link):Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
              <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
            </Path>
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:47:03:36]:0: Element.BoundingRectangle = 95,50,1327,752</Comment>
      <Comment>[23:47:03:36]:0: Union of all screen working areas is = ([X=0,Y=0,Width=1536,Height=824])</Comment>
      <Comment>[23:47:03:36]:0: Random screen area returned is (-1238866913,2134134612,1327,752)</Comment>
      <Comment>[23:47:03:36]:1: Verify that TransformPatternIdentifiers.CanMoveProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns True</Comment>
      <Comment>[23:47:03:37]:1: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property TransformPatternIdentifiers.CanMoveProperty is True</Comment>
      <Comment>[23:47:03:37]:2: Adding PropertyChangedListener ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" </Comment>
      <Comment>[23:47:03:37]:    EVENTS:   Adding AddAutomationPropertyChangedEventHandler("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" , TreeScope.Element, [AutomationElementIdentifiers.BoundingRectangleProperty]) ControlPath = &lt;ControlType&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;Pascal_maXbox&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TApplication&lt;/Classname&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TMaxForm1&lt;/Classname&gt;&lt;/AutomationElement&gt;&lt;/AutomationElement&gt;&lt;/ControlType&gt;</Comment>
      <Comment>[23:47:03:37]:3: Calling TransformPattern.Move(-1238866913, 2134134612)</Comment>
      <Comment>[23:47:03:39]:3: Successfully called TransformPattern.Move(-1238866913, 2134134612) without an exception thrown</Comment>
      <Comment>[23:47:03:39]:4: Waiting for 2 event(s)</Comment>
      <Comment>[23:47:03:39]:    EVENTS:   Waiting for a period of 4000 milliseconds for no events to occur</Comment>
      <Comment>[23:47:03:42]:    EVENTS:   Got event on...("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:47:03:42]:    EVENTS:      FIRED!! EVENT[0/1]("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )...INFO(AutomationElementIdentifiers.BoundingRectangleProperty Property[System.Windows.Automation.AutomationProperty] NewValue[0,72,1327,752] OldValue[]) Control Path = &lt;ControlType&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;Pascal_maXbox&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TApplication&lt;/Classname&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TMaxForm1&lt;/Classname&gt;&lt;/AutomationElement&gt;&lt;/AutomationElement&gt;&lt;/ControlType&gt;</Comment>
      <Comment>[23:47:03:44]:    EVENTS:   Got event on...("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:47:03:44]:    EVENTS:      FIRED!! EVENT[1/2]("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )...INFO(AutomationElementIdentifiers.BoundingRectangleProperty Property[System.Windows.Automation.AutomationProperty] NewValue[] OldValue[]) Control Path = &lt;ControlType&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;Pascal_maXbox&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TApplication&lt;/Classname&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TMaxForm1&lt;/Classname&gt;&lt;/AutomationElement&gt;&lt;/AutomationElement&gt;&lt;/ControlType&gt;</Comment>
      <Comment>[23:47:03:44]:    EVENTS:   Got event on...("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:47:03:44]:    EVENTS:      FIRED!! EVENT[2/3]("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )...INFO(AutomationElementIdentifiers.BoundingRectangleProperty Property[System.Windows.Automation.AutomationProperty] NewValue[] OldValue[]) Control Path = &lt;ControlType&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;Pascal_maXbox&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TApplication&lt;/Classname&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TMaxForm1&lt;/Classname&gt;&lt;/AutomationElement&gt;&lt;/AutomationElement&gt;&lt;/ControlType&gt;</Comment>
      <Comment>[23:47:07:44]:    EVENTS:   Stop waiting for events.  Found 3 event(s)</Comment>
      <Comment>[23:47:07:44]:4: End waiting for events</Comment>
      <Comment>[23:47:07:44]:5: Verifying property change "AutomationElementIdentifiers.BoundingRectangleProperty" event firing was True)</Comment>
      <Comment>[23:47:07:44]:5: Start: Looking for event that might have been fired</Comment>
      <Comment>[23:47:07:44]:    EVENTS:   3 was/were fired</Comment>
      <Comment>[23:47:07:46]:    EVENTS:   AutomationElementIdentifiers.BoundingRectangleProperty was fired on ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:47:07:46]:5: End : Looking for event that might have been fired</Comment>
      <Comment>[23:47:07:46]:5: AutomationElementIdentifiers.BoundingRectangleProperty change event did get fired and was expected to be fired</Comment>
      <Comment>[23:47:07:46]:6: Verify element is withing working area</Comment>
      <Comment>[23:47:07:46]:7: Moving window back to it's original position</Comment>
      <Comment>[23:47:07:46]:7: Calling TransformPattern.Move(95, 50)</Comment>
      <Comment>[23:47:07:46]:7: Successfully called TransformPattern.Move(95, 50) without an exception thrown</Comment>
      <Comment>[23:47:07:46]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="65">
    <TestInfo>
      <Name>ControlType.Window:Window.MaximizableProperty.S.6.1</Name>
      <Summary />
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic, Events</TestCaseType>
      <Description>Verify that Current.CanMaximize is true</Description>
      <Description>Verify that Current.CanMinimize is true</Description>
      <Description>Step: Setup WindowPattern.WindowVisualStateProperty property change event listener</Description>
      <Description>Step: Set WindowVisualState = WindowVisualState.Minimized</Description>
      <Description>Wait for WindowVisualState(Minimized) event</Description>
      <Description>Verify that Current.CanMaximize is true</Description>
      <Description>Set the WindowVisualState = WindowVisualState.Maximized</Description>
      <Description>Wait for WindowVisualState(Maximized) to fire</Description>
      <Description>Verify: WindowPattern.WindowVisualStateProperty property change event was fired</Description>
      <Description>Verify that the WindowVisualState = WindowVisualState.Maximized after setting the property</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.WindowTests</Class>
        <Method>TestMaximizeS61</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552">
            <Path AutomationId="" ClassName="TApplication" LocalizedControlType="window" ControlType="ControlType.Window" Name="Pascal_maXbox" RuntimeId="42.1182156" ProviderDescription="[pid:8772,providerId:0x1209CC Main:Nested [pid:13612,providerId:0x1209CC Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll)]; Nonclient:Microsoft: Non-Client Proxy (unmanaged:UIAutomationCore.dll); Hwnd(parent link):Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
              <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
            </Path>
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:47:07:52]:0: Verify that WindowPatternIdentifiers.CanMaximizeProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns True</Comment>
      <Comment>[23:47:07:54]:0: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property WindowPatternIdentifiers.CanMaximizeProperty is True</Comment>
      <Comment>[23:47:07:54]:1: Verify that WindowPatternIdentifiers.CanMinimizeProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns True</Comment>
      <Comment>[23:47:07:54]:1: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property WindowPatternIdentifiers.CanMinimizeProperty is True</Comment>
      <Comment>[23:47:07:54]:2: Adding PropertyChangedListener ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" </Comment>
      <Comment>[23:47:07:54]:    EVENTS:   Adding AddAutomationPropertyChangedEventHandler("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" , TreeScope.Element, [WindowPatternIdentifiers.WindowVisualStateProperty]) ControlPath = &lt;ControlType&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;Pascal_maXbox&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TApplication&lt;/Classname&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TMaxForm1&lt;/Classname&gt;&lt;/AutomationElement&gt;&lt;/AutomationElement&gt;&lt;/ControlType&gt;</Comment>
      <Comment>[23:47:07:54]:3: Successfully called SetWindowVisualState(Minimized) without an exception thrown</Comment>
      <Comment>[23:47:07:54]:4: Waiting for 1 event(s)</Comment>
      <Comment>[23:47:07:54]:    EVENTS:   Waiting for a period of 2000 milliseconds for no events to occur</Comment>
      <Comment>[23:47:09:54]:    EVENTS:   Stop waiting for events.  Found 0 event(s)</Comment>
      <Comment>[23:47:09:54]:4: End waiting for events</Comment>
      <Comment>[23:47:09:54]:5: Purging stored test event queue</Comment>
      <Comment>[23:47:09:54]:    EVENTS:   Clearing 0 items from the queue</Comment>
      <Comment>[23:47:09:54]:5: Done purging stored test event queue</Comment>
      <Comment>[23:47:09:54]:5: Verify that WindowPatternIdentifiers.CanMaximizeProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns True</Comment>
      <Comment>[23:47:09:54]:5: Element("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )'s property WindowPatternIdentifiers.CanMaximizeProperty is True</Comment>
      <Comment>[23:47:09:54]:6: Successfully called SetWindowVisualState(Maximized) without an exception thrown</Comment>
      <Comment>[23:47:09:54]:7: Waiting for 1 event(s)</Comment>
      <Comment>[23:47:09:54]:    EVENTS:   Waiting for a period of 2000 milliseconds for no events to occur</Comment>
      <Comment>[23:47:10:57]:    EVENTS:   Got event on...("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:47:10:57]:    EVENTS:      FIRED!! EVENT[0/1]("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )...INFO(WindowPatternIdentifiers.WindowVisualStateProperty Property[System.Windows.Automation.AutomationProperty] NewValue[Maximized] OldValue[]) Control Path = &lt;ControlType&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;Pascal_maXbox&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TApplication&lt;/Classname&gt;&lt;AutomationElement&gt;&lt;NameProperty&gt;maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt&lt;/NameProperty&gt;&lt;ControlType&gt;ControlType.Window&lt;/ControlType&gt;&lt;Classname&gt;TMaxForm1&lt;/Classname&gt;&lt;/AutomationElement&gt;&lt;/AutomationElement&gt;&lt;/ControlType&gt;</Comment>
      <Comment>[23:47:12:59]:    EVENTS:   Stop waiting for events.  Found 1 event(s)</Comment>
      <Comment>[23:47:12:59]:7: End waiting for events</Comment>
      <Comment>[23:47:12:59]:8: Verifying property change "WindowPatternIdentifiers.WindowVisualStateProperty" event firing was True)</Comment>
      <Comment>[23:47:12:59]:8: Start: Looking for event that might have been fired</Comment>
      <Comment>[23:47:12:59]:    EVENTS:   1 was/were fired</Comment>
      <Comment>[23:47:12:60]:    EVENTS:   WindowPatternIdentifiers.WindowVisualStateProperty was fired on ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" )</Comment>
      <Comment>[23:47:12:60]:8: End : Looking for event that might have been fired</Comment>
      <Comment>[23:47:12:60]:8: WindowPatternIdentifiers.WindowVisualStateProperty change event did get fired and was expected to be fired</Comment>
      <Comment>[23:47:12:60]:9: WindowVisualState = ReadyForUserInteraction</Comment>
      <Comment>[23:47:12:60]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="66">
    <TestInfo>
      <Name>ControlType.Window:Window.MaximizableProperty.S.6.2</Name>
      <Summary />
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Precondition: Maximizable property is false</Description>
      <Description>Verify that setting the VisualState property to WindowVisualState.Maximizable returns false</Description>
      <Description>Verify that the WindowVisualState is not WindowVisualState.Maximizable after setting the property</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.WindowTests</Class>
        <Method>TestMaximizeS62</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552">
            <Path AutomationId="" ClassName="TApplication" LocalizedControlType="window" ControlType="ControlType.Window" Name="Pascal_maXbox" RuntimeId="42.1182156" ProviderDescription="[pid:8772,providerId:0x1209CC Main:Nested [pid:13612,providerId:0x1209CC Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll)]; Nonclient:Microsoft: Non-Client Proxy (unmanaged:UIAutomationCore.dll); Hwnd(parent link):Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
              <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
            </Path>
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:47:12:67]:0: Verify that WindowPatternIdentifiers.CanMaximizeProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns False</Comment>
      <Comment>[23:47:12:67]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="67">
    <TestInfo>
      <Name>ControlType.Window:Window.MinimizableProperty.S.7.2</Name>
      <Summary />
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Precondition: Minimizable property is false</Description>
      <Description>Verify that you cannot set the VisualState property to WindowVisualState.Minimized and that SetVisualStats returns false</Description>
      <Description>Verify that the WindowVisualState is not WindowVisualState.MinimizableProperty after setting the VisualState property</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.WindowTests</Class>
        <Method>TestMinimizePropertyS72</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552">
            <Path AutomationId="" ClassName="TApplication" LocalizedControlType="window" ControlType="ControlType.Window" Name="Pascal_maXbox" RuntimeId="42.1182156" ProviderDescription="[pid:8772,providerId:0x1209CC Main:Nested [pid:13612,providerId:0x1209CC Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll)]; Nonclient:Microsoft: Non-Client Proxy (unmanaged:UIAutomationCore.dll); Hwnd(parent link):Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
              <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
            </Path>
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:47:12:72]:0: Verify that WindowPatternIdentifiers.CanMinimizeProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns False</Comment>
      <Comment>[23:47:12:72]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="68">
    <TestInfo>
      <Name>ControlType.Window:Window.ModalProperty.S.10.1</Name>
      <Summary />
      <Priority>Pri1</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>Precondition: Modal property is true</Description>
      <MethodInfo>
        <AssemblyFile>WUIATestLibrary, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null</AssemblyFile>
        <Class>Microsoft.Test.UIAutomation.Tests.Patterns.WindowTests</Class>
        <Method>TestWindowModalS101</Method>
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <Path AutomationId="" ClassName="#32769" LocalizedControlType="pane" ControlType="ControlType.Pane" Name="Desktop 1" RuntimeId="42.65552">
            <Path AutomationId="" ClassName="TApplication" LocalizedControlType="window" ControlType="ControlType.Window" Name="Pascal_maXbox" RuntimeId="42.1182156" ProviderDescription="[pid:8772,providerId:0x1209CC Main:Nested [pid:13612,providerId:0x1209CC Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:UIAutomationCore.dll); Main:Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll)]; Nonclient:Microsoft: Non-Client Proxy (unmanaged:UIAutomationCore.dll); Hwnd(parent link):Microsoft: HWND Proxy (unmanaged:UIAutomationCore.dll)]">
              <Path AutomationId="" ClassName="TMaxForm1" LocalizedControlType="window" ControlType="ControlType.Window" Name="maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" RuntimeId="42.20647390" />
            </Path>
          </Path>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages>
      <Comment>[23:47:12:77]:0: Verify that WindowPatternIdentifiers.IsModalProperty for element ("Window" "maXbox4 ScriptStudio  256_findfunctions4_of_EXE_80_1.txt" "" ) does returns True</Comment>
      <Comment>[23:47:12:79]:    EVENTS:   RemoveAllEvents</Comment>
    </Messages>
    <Result Status="Passed" />
  </Test>
  <Test Id="69">
    <TestInfo>
      <Name>Configuration</Name>
      <Summary />
      <Priority>Pri0</Priority>
      <Status>Works</Status>
      <Author>Microsoft Corp.</Author>
      <TestCaseType>Generic</TestCaseType>
      <Description>This test logs Machine Configuration</Description>
      <MethodInfo>
        <AssemblyFile />
        <Class />
        <Method />
      </MethodInfo>
      <AutomationElement>
        <ElementPath>
          <OperatingSystemConfig>
            <Domain>WORKGROUP</Domain>
            <LoggedOnUser>Max</LoggedOnUser>
            <MachineName>MAXBOX10</MachineName>
            <HighContrast>false</HighContrast>
            <DpiX>96</DpiX>
            <DpiY>96</DpiY>
            <PrimaryMonitorMaximizedWindowSize>
              <Location>
                <X>0</X>
                <Y>0</Y>
              </Location>
              <Size>
                <Width>1536</Width>
                <Height>864</Height>
              </Size>
              <X>0</X>
              <Y>0</Y>
              <Width>1536</Width>
              <Height>864</Height>
            </PrimaryMonitorMaximizedWindowSize>
            <VirtualScreen>
              <Location>
                <X>0</X>
                <Y>0</Y>
              </Location>
              <Size>
                <Width>1536</Width>
                <Height>864</Height>
              </Size>
              <X>0</X>
              <Y>0</Y>
              <Width>1536</Width>
              <Height>864</Height>
            </VirtualScreen>
            <IsMousePresent>true</IsMousePresent>
            <IsPenWindows>false</IsPenWindows>
            <IsTabletServiceStarted>false</IsTabletServiceStarted>
            <VisualStylesAuthor>MSX</VisualStylesAuthor>
            <VisualStylesColorScheme>NormalColor</VisualStylesColorScheme>
            <VisualStylesCompany />
            <VisualStylesDescription />
            <VisualStylesDisplayName>Aero style</VisualStylesDisplayName>
            <VisualStylesIsEnabledByUser>true</VisualStylesIsEnabledByUser>
            <VisualStylesIsSupportedByOS>true</VisualStylesIsSupportedByOS>
            <VisualStylesVersion />
            <DwmIsCompositionEnabled>true</DwmIsCompositionEnabled>
          </OperatingSystemConfig>
        </ElementPath>
      </AutomationElement>
    </TestInfo>
    <Messages />
    <Result Status="Passed" />
  </Test>
</TestRun>